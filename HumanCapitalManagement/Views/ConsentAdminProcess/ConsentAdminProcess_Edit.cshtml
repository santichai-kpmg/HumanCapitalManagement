@{
    ViewBag.Title = "ConsentAdminProcess_Edit";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}

<section class="content-header">
    <h1>
        Edit Consent Form and Consent Question
    </h1>
</section>

<section class="content">
    <form class="form-horizontal">
        <div id="divContent">
            <div class="row">
                <div class="col-md-12">
                    <!-- general form elements -->
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">Detail</h3>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right require">Consent Form Name</label>
                                        <div class="col-md-8">
                                            @*<input type="text" id="txtNameEn" name="txtNameEn" class="form-control" data-bind="value : Id " disabled="">*@
                                            <input type="text" id="Name" name="Name" class="form-control" data-bind="value : Name" class="form-control" disabled="">
                                            <input type="hidden" id="Id" name="Id" class="form-control" data-bind="value : Id" class="form-control" >
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right">Active Date :</label>
                                        <div class="col-md-8">
                                            @*<input type="text" id="txtNameEn" name="txtNameEn" class="form-control" data-bind="value : Action_date" disabled="">*@
                                            <input type="text" id="txtNameEn" name="txtNameEn" class="form-control" data-bind="value : Create_date" disabled="">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right">Active Status :</label>
                                        <div class="col-md-8">
                                            @*<input type="text" id="txtNameEn" name="txtNameEn" class="form-control" data-bind="value : Action_date" disabled="">*@
                                            <input type="text" id="txtNameEn" name="txtNameEn" class="form-control" data-bind="value : Active_status" disabled>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-12 text-center">
                                    <button type="button" class="btn btn-success" onclick="EditStatus();">Set Active</button>
                                    @*<button type="button" class="btn btn-danger" onclick="Cancel();">Cancel</button>*@
                                </div>
                            </div>
                        </div>

                        <div class="box-body">
                            <!-- /.col -->
                            <div class="col-md-12">
                                <div class="box box-solid box-info">
                                    <div class="box-header with-border">
                                        <i class="fa fa-text-width"></i>
                                        <h3 class="box-title">List of Consent Question</h3>
                                        <div class="box-tools pull-right">
                                            <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                                <i class="fa fa-refresh"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <!-- /.box-header -->
                                    <div class="box-body">
                                        <div class="table-responsive">
                                            <table class="table table-striped table-bordered table-hover display" id="gvwData" width="100%" onclick="clickTable()">
                                                <thead>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <!-- /. box -->
                            </div>
                        </div>
                        <!-- /.box-body -->
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-12 text-center">
                                    @*<button type="button" class="btn btn-primary" onclick="SaveData();">Save</button>*@
                                    <button type="button" class="btn btn-danger" onclick="Cancel();">Back</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <div id="PopupSave" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12 text-center">
                                        <label class="control-label" id="lblAccept"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to save?</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveData()" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <div id="PopupEditConsentQues" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #605ca8;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Edit Consent Question</b></span>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal" autocomplete="off">
                        <div id="divAddJobExp">
                            <div class="row">
                                <div class="form-group form-group-sm">
                                    <label class="col-md-4 control-label text-right ">Type</label>
                                    <div class="col-md-5">
                                        <input type="text" id="txtType" name="txtType" class="form-control" disabled />
                                        <input type="hidden" id="txtiDEdit" name="txtiDEdit" class="form-control" />

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group form-group-sm">
                                    <label class="col-md-4 control-label text-right nomallabel">Topic</label>
                                    <div class="col-md-5">
                                        <input type="text" id="txtTopic" name="txtTopic" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group form-group-sm">
                                    <label class="col-md-4 control-label text-right nomallabel">Consent</label>
                                    <div class="col-md-5">
                                        @*<input type="text" id="txtClientSizePop" name="txtClientSizePop" class="form-control" />*@
                                        <textarea id="txtContent" name="txtContent" class="form-control" rows="4"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group form-group-sm">
                                    <label class="col-md-4 control-label text-right nomallabel">Description</label>
                                    <div class="col-md-5">
                                        @*<input id="txtIndicateOther" name="txtIndicateOther" class="form-control" rows="4" />*@
                                        <textarea id="txtDescription" name="txtDescription" class="form-control" rows="4"></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveChangeModal()" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>
</section>
@section style{
    <link href="~/Scripts/plugins/bootstrapValidate/dist/css/bootstrapValidator.css" rel="stylesheet" />
    <link href="~/Scripts/plugins/DataTables2/rowReorder.dataTables.min.css" rel="stylesheet" />
    <style>
    </style>
}
@section scripts{
    <script src="~/Scripts/plugins/bootstrapValidate/dist/js/bootstrapValidator.js"></script>
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/dataTables.rowReorder.min.js"></script>
    <script type="text/javascript">
        var url = document.URL;
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);

            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
    </script>

    <script type="text/javascript">
        var sUrlBack ='@Url.Action("ConsentAdminProcess", "ConsentAdminProcess")';
        var objMaxLength = [
            { ctrlID: "txtSearch", ctrlType: "txt", MaxLength: 250 },
            { ctrlID: "txtDesuser", ctrlType: "txt", MaxLength: 950 }];
        var objModel = @Html.Raw(Json.Encode(Model));
        $(function () {
            SetTable();
            BindData(objModel);
            ko.applyBindings(viewModel);

            ValidateForm();
            SetMaxLeangthJS(objMaxLength);
            @if(Request.QueryString["bUrl"]!=null)
             {
            <text>
            sUrlBack +="?qryStr="+  '@Uri.EscapeDataString(Request.QueryString["bUrl"])';
            </text>
             }
        });
        function GetData() {
            var lstData = $('#gvwData').dataTable().fnGetData();
            var lstSave = ko.toJS(viewModel);
            lstSave.lstData = lstData;
            return lstSave;
        }
        function Save() {
            var IsPass = true;
            if (IsPass) {
                $("#PopupSave").modal();
            }
        }
        
        function AddQuestion() {
            var IsPass = true;
            if (!CheckValidateBootstrap("divUser") ) {
                IsPass = false;
                $('#divUser').bootstrapValidator('updateStatus', GetElementName("Type", objControl.txtbox), "INVALID");
            }
            if (IsPass) {
                var lstNowRea = $('#gvwData').dataTable().fnGetData();
                var objAddData = {
                    Id: 1,
                    Type: GetInputByID("Type").val(),
                    Topic: GetInputByID("Topic").val(),
                    Content: GetTextareaByID("Content").val(),
                    Description: GetTextareaByID("Description").val(),
                };

                if (lstNowRea != undefined && lstNowRea.length > 0) {
                    var nMax = Enumerable.From(lstNowRea).Max(function (x) { return x.Id }) + 1;
                    objAddData.Id = nMax;
                    lstNowRea.push(objAddData);
                }
                else {
                    lstNowRea = objAddData;
                }
                BindQuestion(lstNowRea);
                ClearText();
            }
        }
        function ClearText() {
            GetInputByID("Type").val('');
            GetInputByID("Topic").val('');
            GetTextareaByID("Content").val('');
            GetTextareaByID("Description").val('');
            $('#divUser').bootstrapValidator('updateStatus', GetElementName("Type", objControl.txtbox), "NOT_VALIDATED");
            $('#divUser').bootstrapValidator('updateStatus', GetElementName("Topic", objControl.txtbox), "NOT_VALIDATED");
            $('#divUser').bootstrapValidator('updateStatus', GetElementName("Content", objControl.txtarea), "NOT_VALIDATED");
            $('#divUser').bootstrapValidator('updateStatus', GetElementName("Description", objControl.txtarea), "NOT_VALIDATED");
        }
        function BindQuestion(lstObjData) {
            if (!$.fn.DataTable.isDataTable('#gvwData')) {
                SetTable();

            }
            if (lstObjData == undefined || lstObjData.length <= 0) {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnDraw();
            }
            else {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnAddData(lstObjData);
                $('#gvwData').dataTable().fnDraw();
            }
            $('#gvwData').DataTable().columns.adjust().draw()
        }
        function ValidateForm() {
            var objValidateUser = {};
            objValidateUser[GetElementName("Type", objControl.txtbox)] = addValidate_notEmpty("This value is not valid");
            objValidateUser[GetElementName("Topic", objControl.txtbox)] = addValidate_notEmpty("This value is not valid");
            objValidateUser[GetElementName("Content", objControl.txtarea)] = addValidate_notEmpty("This value is not valid");
            @*objValidateUser[GetElementName("Description", objControl.txtarea)] = addValidate_notEmpty("This value is not valid");*@
            BindValidateBootstrap("divUser", objValidateUser);
        }
    </script>
    @*Script for bind Data KnockOut*@
<script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh
                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value
                    });
                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }
        function BindData(value) {
            if (viewModel.Id == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
                //$("input[id*=rdlStatus][value=" + value.active_status + "]").iCheck('check');
                if (objModel.lstData != undefined && objModel.lstData != null) {
                    $('#gvwData').DataTable().clear().draw();
                    $('#gvwData').dataTable().fnAddData(objModel.lstData);
                    $('#gvwData').dataTable().fnDraw();

                    setTimeout(function () {
                        $('#gvwData').DataTable().columns.adjust().draw();
                        $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                    }, 500);
                }
                else {
                    $('#gvwData').DataTable().clear().draw();
                    $('#gvwData').dataTable().fnDraw();
                    $('div[id$=divTable]').collapse("hide");
                }
            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);
                $("input[id*=rdlStatus][value=" + value.active_status + "]").iCheck('check');
            }
    }

    function BindDataUpdate(value) {
        if (value != undefined) {
            //viewModel = ko.mapping.fromJS(value);
            //ViewModel();
            //$("input[id*=rdlStatus][value=" + value.active_status + "]").iCheck('check');
            if (objModel.lstData != undefined && objModel.lstData != null) {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnAddData(value);
                $('#gvwData').dataTable().fnDraw();

                setTimeout(function () {
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                }, 500);
            }
            else {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnDraw();
                $('div[id$=divTable]').collapse("hide");
            }
        }
        else {
            ko.mapping.fromJS(value, {}, viewModel);
            $("input[id*=rdlStatus][value=" + value.active_status + "]").iCheck('check');
        }
    }

        function Cancel() {
            window.location.href = sUrlBack;
        }
        function SetTable() {
            var objHeadClRequest = [
                { "title": "Edit", "width": "5%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "Id" },
                { "title": "Page", "width": "5%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "Seq" },
                { "title": "Type", "width": "10%", "className": "dt-left-ctm reorderable", "data": "Type", "searchable": false, "orderable": false, },
                { "title": "Topic", "width": "25%", "className": "dt-left-ctm", "data": "Topic", "searchable": false, "orderable": false, },
                { "title": "Content", "width": "30%", "className": "dt-left-ctm", "data": "Content", "searchable": false, "orderable": false, },
                { "title": "Description", "width": "30%", "className": "dt-left-ctm", "data": "Description", "searchable": false, "orderable": false, },
            ];

            var objTableRe = {
                sTableID: "gvwData",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[1, "asc"]],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                columnDefs: [
                    {
                        "targets": 0,
                        "render": function (data, type, row) {
                            //var sHtml = "";
                            return '<button id="btnEdit" type="button" onclick="EditConsentQues(\'' + row.Id + '\')" class="btn btn-xs btn-primary" tooltip="Delete" flow="right"><i class="glyphicon glyphicon-edit"></i></button>';
                        }
                    },
                ],
            };


            var table = CreatTableJSRowRender(objTableRe);

    }

        function SaveChangeModal()
        {
            var editId = GetInputByID("txtiDEdit").val();
            var getEditObj = objModel.editData;

            getEditObj.Id = parseInt(editId);
            getEditObj.Type = GetInputByID("txtType").val();
            getEditObj.Topic = GetInputByID("txtTopic").val();
            getEditObj.Content = GetTextareaByID("txtContent").val();
            getEditObj.Description = GetTextareaByID("txtDescription").val();
            getEditObj.IdEncrypt = objModel.IdEncrypt;
            EditQuesData(getEditObj);
            $("#PopupEditConsentQues").modal('hide');
            var getEdit = Enumerable.From(objModel.lstData).Where(function (w) { return w.Id == editId }).ToArray();
            if (getEdit != null && getEdit != undefined) {
                getEdit[0].Type = getEditObj.Type;
                getEdit[0].Topic = getEditObj.Topic;
                getEdit[0].Content = getEditObj.Content;
                getEdit[0].Description = getEditObj.Description;

                objModel.lstData = Enumerable.From(objModel.lstData).Where(function (w) { return w.Id != editId }).ToArray();
                objModel.lstData.push(getEdit[0]);
                BindDataUpdate(objModel.lstData);
                //GetInputByID("Type").val(getEdit[0].Type);
                //GetInputByID("txtiDEdit").val(getEdit[0].Id);
                //GetInputByID("Topic").val(getEdit[0].Topic);
                //GetTextareaByID("Content").val(getEdit[0].Content);
                //GetTextareaByID("Description").val(getEdit[0].Description);
            }

    }
    
        function EditConsentQues(Id)
        {
            var open = true;
            if (open) {
                $("#PopupEditConsentQues").modal();
            }

            var getEdit = Enumerable.From(objModel.lstData).Where(function (w) { return w.Id == Id }).ToArray();
            if (getEdit != null && getEdit != undefined)
            {
                GetInputByID("Type").val(getEdit[0].Type);
                GetInputByID("txtiDEdit").val(getEdit[0].Id);
                GetInputByID("Topic").val(getEdit[0].Topic);
                GetTextareaByID("Content").val(getEdit[0].Content);
                GetTextareaByID("Description").val(getEdit[0].Description);
            }
        }

        function CreatTableJSRowRender(objOption) {
            if (objOption.objHeadCl != undefined
                && objOption.sTableID != undefined && objOption.sTableID != ""
                && objOption.objHeadCl != null && objOption.objHeadCl != "") {
                var aColumnDef = [];
                var aColumnotText = ["sview", "edit", "view", "chk"]
                if (objOption.columnDefs == undefined) {
                    objOption.columnDefs = [];
                }
                else {
                    aColumnDef = objOption.columnDefs.map(function (a) { return a.targets; });
                }
                if (objOption.objHeadClRender != undefined) {
                    aColumnotText = objOption.objHeadClRender;
                }
                $.each(objOption.objHeadCl, function (key, data) {

                    if (!contains(aColumnotText, data.data.toLowerCase()) && !containsNumber(aColumnDef, key)) {
                        if (!data.hasOwnProperty("render")) {
                            //var xx = objOption.objHeadCl[key];
                            objOption.objHeadCl[key]["render"] = $.fn.dataTable.render.text();
                        }
                    }
                });
                //Option FixHeader
                var bFixHeader = true;
                var nFixHeadder = 0;

                if (objOption.createdRow == undefined) { objOption.createdRow = []; }
                if (objOption.nHeadFix != undefined && objOption.nHeadFix > 0) {
                    bFixHeader = true;
                    nFixHeadder = objOption.nHeadFix;
                }
                if (objOption.nDis != undefined && objOption.nDis == "") { nDis = []; }
                var lengthMenu = [[25, 50, 100, 150, 200, -1], [25, 50, 100, 150, 200, "All"]];
                if (objOption.lengthMN != undefined) {
                    lengthMenu = objOption.lengthMN;
                }
                var dTable = $('#' + objOption.sTableID).DataTable({
                    "data": objOption.objDataSet != undefined ? objOption.objDataSet : [],
                    "bFilter": false,
                    "dom": objOption.sProperty != undefined ? objOption.sProperty : "",
                    "language": {
                        "emptyTable": objOption.EmptyTable,
                    },
                    "scrollX": bFixHeader,
                    "scrollY": false,
                    "scrollCollapse": bFixHeader,
                    "fixedColumns": {
                        "leftColumns": nFixHeadder
                    },
                    "columns": objOption.objHeadCl,
                    "columnDefs": objOption.columnDefs,
                    "order": objOption.order,
                    "lengthMenu": lengthMenu,
                    "bRetrieve": true,
                    "oLanguage": {
                        "sZeroRecords": "Data Not Found.",
                        "sEmptyTable": "Data Not Found.",
                        "sInfo": "Showing _START_ to _END_ (_TOTAL_ item(s))",
                        "sLengthMenu": "List _MENU_ items",
                    },
                    "rowReorder": {
                        dataSrc: 'Id',
                        selector: 'td:nth-child(2)'
                    },
                    select: true,
                });
            }

    };

     function EditQuesData (objSave){
            var IsPass = true;
            if (IsPass) {
                //$("#PopupSave").modal('hide');
                BlockUI();
                var Param = objSave;
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("EditConsentFrom_Question", "ConsentAdminProcess")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {

                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {

                            DialogSuccessOk(DialogHeader.Success, respone.result.Msg);
                        }

                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                });
            }
    }
    function EditStatus(objSave) {
       
            var IsPass = true;
            if (IsPass) {
                $("#PopupSave").modal('hide');
                BlockUI();
                var Param = ko.toJS(viewModel);
                Param.lstData = null;
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("EditStatusConsentFrom", "ConsentAdminProcess")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {

                                var prodId = getParameterByName('bUrl');
                                if (prodId != "") {
                                    window.location.href = sUrlBack;
                                }
                                else {
                                    window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                                }
                            });
                        }
                        else if (respone.result.Status == SysProcess.Duplicate){
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                });
            }
        }
</script>

}



