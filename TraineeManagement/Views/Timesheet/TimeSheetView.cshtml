
@{
    ViewBag.Title = "KPMG Intern | Timesheet";
    Layout = "~/Views/Shared/_TPJMaster.cshtml";
}
<div class="breadcrumb-container">
    <div class="container">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><i class="fa fa-home pr-2"></i>Profile</li>
            @*<li class="breadcrumb-item"><a href="@Url.Action("TimeSheetView", "TimeSheet", null)">TimeSheet Form</a></li>*@
            <li class="breadcrumb-item active">Timesheet</li>
        </ol>
    </div>
</div>
<div id="page-start"></div>
<!-- section end -->
<!-- section -->
<!-- ================ -->
<div class="main-container  light-translucent-bg background-img-7">
    <div class="container ">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">
                            <i class="fa fa-list-alt pr-10"></i>Timesheet

                        </h4>

                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12 text-right">
                                <a id="addInternShip"  href="#" onclick="Add();return false;" class="btn btn-animated btn-success">Add Profile <i class="fa fa-plus"></i></a>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered" id="gvwData" width="100%">
                                        <thead>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br>
</div>

@section style{
    <style>
        div:not(.dataTables_scrollFoot)::-webkit-scrollbar {
            display: none;
        }
    </style>
}
@section scripts{
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/DataTables2/datetimeSort.js"></script>

    <script type="text/javascript">
            var objModel = @Html.Raw(Json.Encode(Model));
        $(function () {
            SetActiveMenu("timesheet");
            SetTable();
            BindData(objModel);
            ko.applyBindings(viewModel);
            setDatePickerFromTo(GetInputByID("txtDateAction"), GetInputByID("txtDateActionEnd"));



        });
          function Add() {
                BlockUI();
              window.location.href = '@Url.Action("TimeSheetCreate", "TimeSheet")';
        }
        function Edit_timesheet(sVal) {
                BlockUI();
              window.location.href = '@Url.Action("TimeSheetEdit", "TimeSheet")?qryStr=' + sVal;
        }
        function Edit(sVal) {
                BlockUI();
              window.location.href = '@Url.Action("TimeSheetCreate", "TimeSheet")?qryStr=' + sVal;
            }
       function SetTable() {
            var objHeadClRequest = [
                { "title":"Timesheet", "width": "5%", "className": "dt-center-ctm", "data": "Edit_timesheet" },
                { "title": "Edit", "width": "5%", "className": "dt-center-ctm", "data": "Edit" },
                { "title": "Internship Period", "width": "50%", "className": "dt-center-ctm", "data": "create_date" },
                //{ "title": "Acknowledge", "width": "30%", "className": "dt-center-ctm", "data": "acknowledge_user" },
                { "title": "Performance Manager", "width": "30%", "className": "dt-center-ctm", "data": "Approve_user" },
                { "title": "Status", "width": "10%", "className": "dt-center-ctm", "data": "active_status" },
            ];

            var objTableRe = {
                sTableID: "gvwData",
                nDis: [],
                sProperty: "<'row'<'col-sm-6'l><'col-sm-6'f>><'row'<'col-sm-12'tr>><'row'<'col-sm-5'i><'col-sm-7'p>>",//length pangging
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[4, "asc"]],
                objBeforeClRender: false,
                //fixedHeader: {
                //    header: true,
                //},
                columnDefs: [
                    {
                    //"render": function (data, type, row, meta) {
                    //    return meta.row + meta.settings._iDisplayStart + 1;
                    //},
                    "visible": false,
                    "targets": 1
                },
                {
                    "render": function (data, type, row) {
                        return data == "Y" ? "<span class='fa fa-circle text-success'></span>&nbsp; Active" : "<span class='fa fa-circle text-danger'></span>&nbsp; InActive";
                     },
                    "targets": 4
                }]
            };
            var table = CreatTableJS(objTableRe);
            //new $.fn.dataTable.FixedHeader($('#gvwData'));
        }
          
    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value

                    });

                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }
        function BindData(value) {
            if (viewModel.name == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();

            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);

            }
            if (objModel.lstData != undefined && objModel.lstData != null && objModel.lstData.length > 0) {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnAddData(objModel.lstData);
                $('#gvwData').dataTable().fnDraw();

                setTimeout(function () {
                    $('#gvwData').DataTable().columns.adjust().draw();

                }, 500);
            }
            else {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnDraw();
            }

            if (objModel.Add != "Y" || objModel.Add == null)
            {
                $('#addInternShip').hide();
            }

        }
           function SaveData() {
            var IsPass = true;
            if (IsPass) {

                BlockUI();
                var Param = ko.toJS(viewModel);

                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("UpdateCandidate", "TimeSheet")',
                    data: JSON.stringify({ ItemData: Param}),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                             PopupLogin('@Url.Action("Login", "Login")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {
                                window.location.reload();
                            });
                        }
                        else if (respone.result.Status == SysProcess.Duplicate) {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                });
            }
            }
    </script>
}