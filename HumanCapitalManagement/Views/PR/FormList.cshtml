
@{
    ViewBag.Title = "HCM | Index Personel Request Form";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Index Personel Request Form
    </h1>
    <div class="row">
        <div class="box box-solid">
            <div class="box-body no-border no-pad-top no-pad-bot">
                <div class="row" id="search">
                    <div class="form-group form-group-sm col-sm-6  col-xs-6">
                        <div class="input-group">
                            <span class="input-group-addon">Group :</span>
                            @{ Html.RenderAction("CreateDivision", "HCMMasterData", new
                                {
                                    id = "ddlDivision",
                                    databind = "division",
                                    value = ""
                                });}
                        </div>
                    </div>
                    @*<div class="form-group form-group-sm col-sm-6 col-xs-6">
                            <div class="input-group">
                                <span class="input-group-addon">PR Status :</span>
                                @{ Html.RenderAction("CreatePrStatus", "HCMMasterData", new
                                    {
                                        id = "ddlPrStatus",
                                        databind = "pr_status",
                                        value = ""
                                    });}
                            </div>
                        </div>*@
                </div>
                @*<div class="row" id="filter">
                        <div class="form-group form-group-sm col-sm-6 col-xs-6">
                            <div class="input-group">
                                <span class="input-group-addon">Condition2 :</span>
                                <select data-filter="model" class="filter-model filter form-control">
                                    <option value="">-- Select --</option>
                                    <option value="">Show All</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group form-group-sm col-sm-6 col-xs-6">
                            <div class="input-group">
                                <span class="input-group-addon">Condition3 :</span>
                                <select data-filter="type" class="filter-type filter form-control">
                                    <option value="">-- Select --</option>
                                    <option value="">Show All</option>
                                </select>
                            </div>
                        </div>
                    </div>*@
                <div class="row">
                    <div class="form-group form-group-sm col-xs-12  text-center">
                        <button type="button" class="btn btn-info" onclick="LoadData();">Search</button>
                        <button type="button" class="btn btn-primary" onclick="AddData();">Add</button>
                        <button type="button" class="btn btn-danger" onclick="Cancel();">Clear</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Main content -->
<section class="content no-pad-top ">
    <form class="form-horizontal">
        <div class="row">
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        Current Vacancies
                        <div class="box-tools pull-right">
                            <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                <i class="fa fa-refresh"></i>
                            </button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <!-- form start -->
                    <div class="box-body">
                        @*<div class="row">
                                <div class="col-md-12">
                                    <button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('pdf');"><img src="~/Image/filetype_pdf.png" alt="" height="30"></button>
                                    <button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('xlxs');"><img src="~/Image/filetype_xls.png" alt="" height="30"></button>
                                </div>
                            </div>*@
                        <div class="row" id="divTable">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover " id="gvwData" width="100%">
                                        <thead>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
            @*<input type="hidden" id="txtSess" name="txtSess" class="form-control" data-bind='value: session' />*@
        </div>

    </form>
</section>
@section style{
    <style>
        .dt-HeadGr-ctm {
            background-color: #2952a3;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-total-ctm {
            background-color: #36c61a;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-totalAll-ctm {
            background-color: rgb(255, 222, 35);
            color: rgb(0, 0, 0);
            vertical-align: middle;
        }

        table.dataTable {
            border-collapse: collapse;
            width: 100%;
        }

            table.dataTable tbody th,
            table.dataTable tbody td {
                white-space: nowrap;
            }
    </style>
    <link href="~/Scripts/plugins/DataTables2/Responsive-2.1.0/css/responsive.bootstrap.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/DataTables2/datetimeSort.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/FixedHeader-3.1.2/js/dataTables.fixedHeader.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/Responsive-2.1.0/js/responsive.bootstrap.js"></script>
    <script type="text/javascript">
        var objModel = @Html.Raw(Json.Encode(Model));
        $(function () {
            SetTable();
            //setDatePickerFromTo($("input[id$=txtDateStart]"), $("input[id$=txtDateTo]"));
            BindData(objModel);
             ko.applyBindings(viewModel);
        });

        function Search() {
            var lstSearch = ko.toJS(viewModel)
            return lstSearch;
        };
        function LoadData() {
            $('div[id$=divTable]').collapse("show");
            $('#gvwData').DataTable().columns.adjust().draw();
            var Param = Search();
            BlockUI();
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadTracking", "Tracking")',
                dataType: "json",
                data: { SearchItem: Param },
                success: function (response) {
                    if (response.result.Status == SysProcess.SessionExpired) {1
                        PopupLogin('@Url.Action("Index", "Home")');
                    }
                    else {
                        var lstData = response.result.lstData;
                        if (lstData == undefined || lstData.length <= 0) {
                            $('div[id$=divTable]').collapse("show");
                            $('#gvwData').DataTable().clear().draw();
                            $('#gvwData').dataTable().fnDraw();
                            $('#gvwData').DataTable().columns.adjust().draw();
                        }
                        else {
                            $('div[id$=divTable]').collapse("show");
                            $('#gvwData').DataTable().clear().draw();
                            $('#gvwData').dataTable().fnAddData(lstData);
                            $('#gvwData').dataTable().fnDraw();
                            $('#gvwData').DataTable().columns.adjust().draw();
                        }
                    }
                },
                complete: function (jqXHR, status) {//finaly
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                    UnblockUI();
                }
            });
        }


        function Cancel() {
            window.location.reload();
        }
        function AddData() {
                window.location.href = '@Url.Action("Form", "PR")';
        }
        function Edit(sVal) {
            BlockUI();
            window.location.href = '@Url.Action("Form", "PR")?id=' + sVal;
        }
        function SetTable() {
            var objHeadClRequest = [
                { "title": "", "width": "5%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "Edit" },
                { "title": "Type of request", "width": "12%", "className": "dt-left-ctm", "data": "request_type" },
                { "title": "Position title", "width": "14%", "className": "dt-left-ctm", "data": "position" },
                { "title": "Rank", "width": "10%", "className": "dt-center-ctm", "data": "rank" },
                { "title": "HC", "width": "5%", "className": "dt-center-ctm", "data": "hc" },
                { "title": "PR Status", "width": "10%", "className": "dt-center-ctm", "data": "pr_status" },
                { "title": "Remark", "width": "20%", "className": "dt-left-ctm", "data": "remark" },
                { "title": "Request By", "width": "12%", "className": "dt-center-ctm", "data": "request_by" },
                { "title": "Request date", "width": "12%", "className": "dt-center-ctm", "data": "request_date" },
            ];

            var objTableRe = {
                sTableID: "gvwData",
                nDis: [],
                sProperty: "<'top col-md-6'l>rt<'bottom col-md-6'fi><'bottom col-md-6 text-right'p><'clear'>",//length pangging
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[8, "desc"]],
                columnDefs: [{
                    "targets": 8,
                    "type": "date-th",
                }],
                objBeforeClRender: false,
                //fixedHeader: {
                //    header: true,
                //},


            };

            var table = CreatTableJS(objTableRe);
            //new $.fn.dataTable.FixedHeader($('#gvwData'));
        }
    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value

                    });

                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }
        function BindData(value) {
            if (viewModel.code == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);
            }

            if (objModel.lstData != undefined && objModel.lstData != null) {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnAddData(objModel.lstData);
                $('#gvwData').dataTable().fnDraw();

                setTimeout(function () {
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                }, 500);
            }
            else {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnDraw();
                $('div[id$=divTable]').collapse("hide");
            }

        }
        @*$(function () {
            $(window).bind('beforeunload', function () {

                var aSession = [$('input[id$=txtSess]').val()];

                //var sValHdf = $('input[id$=hfdSess]').val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ClearSession", "Base")',
                    cache: false,
                    dataType: "html",
                    data: {
                        sVal: encodeURIComponent(aSession)
                    },
                    complete: function (jqXHR, status) {//finaly
                    }
                });
            });
        });*@


        function LoadExcel(Val)
        {
            if(viewModel.session != undefined)
            {
                var sVal =  ko.toJS(viewModel.session);
                BlockUI();
                window.open('@Url.Action("ExpHCPlanAndSummary", "rHeadcount")?qryStr=' + sVal +'&sMode='+Val, '_blank');
                setTimeout(function () { UnblockUI(); }, 500);
            }
            else {
                DialogWarning(DialogHeader.Warning,"Error please try again.");
            }
        }
    </script>
}
<!-- /.content -->