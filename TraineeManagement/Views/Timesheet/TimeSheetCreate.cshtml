
@{
    ViewBag.Title = "KPMG Intern | Timesheet";
    Layout = "~/Views/Shared/_TPJMaster.cshtml";
}
<div class="breadcrumb-container">
    <div class="container">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><i class="fa fa-home pr-2"></i>Profile</li>
            @* <li class="breadcrumb-item"><a href="@Url.Action("TimeSheetList", "TimeSheet", null)">TimeSheet Form</a></li>*@
            <li class="breadcrumb-item active">Timesheet Create</li>
        </ol>
    </div>
</div>
<div id="page-start"></div>
<!-- section end -->
<!-- section -->
<!-- ================ -->
<div class="main-container  light-translucent-bg background-img-7">
    <div class="container-fluid" style="    min-height: 55vh;
    height: 100%;">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">
                            <i class="fa fa-list-alt pr-10"></i>Intern TimeSheet Create
                        </h4>
                    </div>
                    <div class="card-body">
                        <!-- Main content -->
                        <section class="content">


                            <div class="row">
                                <!-- /.col -->
                                <div class="col-md-2"></div>
                                <div class="col-md-8">
                                    <ul class="nav nav-tabs style-3" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active" href="#h3tab1" role="tab" data-toggle="tab">
                                                <h4 style="color: rgb(60, 141, 188);"><span class="fa fa-user-circle"></span>&nbsp; Performance Manager</h4>
                                            </a>
                                        </li>
                                    </ul>
                                    <!-- Tab panes -->
                                    <div class="tab-content">
                                        <div class="tab-pane show active" role="tabpanel" id="h3tab1">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group form-group-sm row">
                                                        <label class="col-sm-4 col-form-label nomallabel text-right">Name</label>
                                                        <div class="col-sm-8">
                                                            <input type="text" class="form-control input-sm" id="txtNameMG" name="txtNameMG" value="@Model.mgr_user_name" disabled>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group form-group-sm row">
                                                        <label class="col-sm-4 col-form-label nomallabel text-right">Name / ID</label>
                                                        <div class="col-sm-8">
                                                            <input type="text" class="form-control input-sm " style="display:none;" id="txtMGID" name="txtMGID" value="@Model.mgr_user_no" disabled>
                                                            <input type="text" class="form-control input-sm" id="txtSearchMG" name="txtSearchMG" value="@Model.mgr_user_no"
                                                                   @Html.Raw(HttpUtility.HtmlDecode(Model.status + "" == "Y" ? "disabled" : ""))>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group form-group-sm row">
                                                        <label class="col-sm-4 col-form-label nomallabel text-right">Group</label>
                                                        <div class="col-sm-8">
                                                            <input type="text" class="form-control input-sm" id="txtgroupMG" name="txtgroupMG" value="@Model.mgr_unit_name" disabled>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group form-group-sm row">
                                                        <label class="col-sm-4 col-form-label nomallabel text-right">Rank</label>
                                                        <div class="col-sm-8">
                                                            <input type="text" class="form-control input-sm" id="txtpositionMG" name="txtpositionMG" value="@Model.mgr_user_rank" disabled>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 text-center">
                                            <br /><h6>
                                                <span class="fa fa-warning text-warning"></span>
                                                Remark: For Audit, please check your PM with Resource Planning.
                                                &nbsp;

                                            </h6>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.col -->
                            </div>
                            <!-- /.row -->

                        </section>
                        <!-- /.content -->
                    </div>
                    <div class="card-footer text-center">
                        @*<a href="#" onclick="Save('Draft');return false;" class="btn btn-animated btn-primary">Save Draft <i class="fa fa-save"></i></a>*@
                        <a href="#" onclick="Create();return false;" class="btn btn-animated btn-success">Save <i class="fa fa-save"></i></a>
                        <a href="#" onclick="Back();return false;" class="btn btn-animated btn-warning" style="color:white;">Back <i class="fa fa-undo"></i></a>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <br>
</div>
<!-- Page specific script -->

@section style{
    <link href="~/Scripts/plugins/dist/css/AdminLTE.css" rel="stylesheet" />
    <link href="~/Scripts/plugins/dist/css/skins/_all-skins.min.css" rel="stylesheet" />


}



@section scripts{

    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>

    <script>
        var objModel = @Html.Raw(Json.Encode(Model));
         var sUrlBack = '@Url.Action("TimeSheetView", "TimeSheet")';
        var lstforEven = "";
        var STAddEven;
        var EDAddEven;
        $(function () {

            SetActiveMenu("timesheet");
            BindData(objModel);
            ko.applyBindings(viewModel);

            if (GetInputByID("txtSearchMG") != undefined || GetInputByID("txtSearchMG") != "") {
                SetAutocomMGR("txtSearchMG");
            }

        });

       function Back() {
             BlockUI();
           if (objModel.IdEncrypt != null) {
               window.location.href = '@Url.Action("TimeSheetEdit", "TimeSheet")?qryStr=' + objModel.IdEncrypt;
           }
           else
           {
             window.location.href = sUrlBack;
           }

        }

        function Create() {
            BlockUI();
            var Acceptlst = [];
            //Acceptlst = Enumerable.From(objModel).ToArray();
            //ko.mapping.fromJS(Acceptlst, {}, viewModel);
            SaveData();


            UnblockUI();
        }
         function SaveData() {
            var IsPass = true;
            if (IsPass) {
                BlockUI();
                var Param = GetData();
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("CreateTimeSheetForm", "TimeSheet")',
                    data: JSON.stringify({ ItemData: Param}),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {
                                if (respone.result.lstData[0].Id != null) {
                                    window.location.href = '@Url.Action("TimeSheetEdit", "TimeSheet")?qryStr=' + respone.result.lstData[0].Id;
                                }
                                else {
                                    window.location.href = sUrlBack;
                                }
                            });

                        }
                        else if (respone.result.Status == SysProcess.Duplicate) {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                        $("#PopupSave").modal('hide');
                    }
                });
            }
        }

        function GetData() {
            var lstData = ko.toJS(viewModel);
                lstData.mgr_user_no = GetValTextBox("txtMGID");

            return lstData;
        }



        function ClearMGR(vName, vGroup, vPosition, vID) {
            GetInputByID("txtNameMG").val(vName);
            GetInputByID("txtgroupMG").val(vGroup);
            GetInputByID("txtpositionMG").val(vPosition);
            GetInputByID("txtMGID").val(vID);
        }
        function SetAutocomMGR(txtTarget) {
            $("input[id$=" + txtTarget + "]").on("keyup", function () {
                            ClearMGR("", "", "", "");
            });


            $("input[id$=" + txtTarget + "]").autocomplete({
                            //disabled: true,
                            source: function (request, response) {
                                $.ajax({
                                    dataType: AjaxCall.dataType,
                                    type: AjaxCall.type,
                                    contentType: AjaxCall.contentType,
                                    url: '@Url.Action("UserAutoCompleteAmUp", "TraineeMasterData")',
                        data: JSON.stringify({ SearchItem: request.term }),
                        success: function (data) {
                            UnblockUI();
                            response($.map(data, function (item) {
                                return {
                                    value: item.id,
                                    label: item.id + " : " + item.user_name ,
                                    user_id: item.user_id,
                                    user_no: item.id,
                                    user_name: item.user_name,
                                    unit_name: item.unit_name,
                                    user_rank: item.user_rank,
                                }
                            }));
                        }
                    });
                },
                        minLength: 1,
                        select: function (event, ui) {
                            ClearMGR(ui.item.user_name, ui.item.unit_name, ui.item.user_rank, ui.item.user_no);
                        }

                        });
        }

    </script>

    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value

                    });

                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }
        function BindData(value) {
            if (viewModel == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();

            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);

            }


        }

    </script>
}
