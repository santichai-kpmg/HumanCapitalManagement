@model HumanCapitalManagement.ViewModel.MainVM.vPRCandidates_obj_Save
@{
    ViewBag.Title = "HCM | Add Candidates to Personnel Request";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}

<section class="content-header">
    <h1>
        Add Candidates to Personnel Request
    </h1>
</section>
<!-- Main content -->
<section class="content">
    <form class="form-horizontal">
        <div id="divContent">
            <div class="row">

                <div class="col-md-7">
                    <div class="row">
                        <div class="col-lg-12">
                            <!-- general form elements -->
                            <div class="box box-solid box-ctmPR">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Personnel Request Form</h3>
                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Ref No.</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtRefNo" name="txtRefNo" class="form-control" data-bind="value : code" disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Group</label>
                                                <div class="col-md-8">

                                                    <input type="text" class="form-control" data-bind='value: group_id' disabled />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">SubGroup</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" data-bind='value: sub_group_id' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div id="divSubgroup" data-bind="visible:Subgroup">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group form-group-sm">
                                                        <label class="col-md-4 control-label text-right nomallabel">Head of SubGroup</label>
                                                        <div class="col-md-8">
                                                            <input type="text" class="form-control" data-bind='value: sub_group_head' disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>*@
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Rank</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" data-bind='value: rank_id' disabled />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Position</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" data-bind='value: position_id' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Type of Employment</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" data-bind='value: employment_type_id' disabled />
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Type of Request</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" data-bind='value: request_type_id' disabled />
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div id="divReplace" data-bind="visible:ReplaceUser">
                                        @*<div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group form-group-sm">
                                                        <label class="col-md-4 control-label text-right nomallabel">Employee ID</label>
                                                        <div class="col-md-8">
                                                            <input type="text" id="txtSearch" name="txtSearch" class="form-control" data-bind='value: user_no' disabled />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>*@
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group form-group-sm">
                                                    <label class="col-md-4 control-label text-right nomallabel">Replacement - Name</label>
                                                    <div class="col-md-8">
                                                        <input type="text" id="txtName" name="txtName" class="form-control" data-bind='value: user_name' disabled />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group form-group-sm">
                                                    <label class="col-md-4 control-label text-right nomallabel">Replacement - Group</label>
                                                    <div class="col-md-8">
                                                        <input type="text" id="txtgroup" name="txtgroup" class="form-control" data-bind='value: unit_name' disabled />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group form-group-sm">
                                                    <label class="col-md-4 control-label text-right nomallabel">Replacement - Rank</label>
                                                    <div class="col-md-8">
                                                        <input type="text" id="txtposition" name="txtposition" class="form-control" data-bind='value: user_position' disabled />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Target Period</label>
                                                <div class="col-md-8">
                                                    <div class="input-group form-inline" style="float: left;">
                                                        <input ID="txtDatePeriod" name="txtDatePeriod" class="form-control " type="text"
                                                               ToolTip="To" placeholder="-- / -- / ----" data-bind="value : target_start, valueUpdate: 'afterkeydown' " disabled />
                                                        <span class="input-group-addon">
                                                            <i class="glyphicon glyphicon-calendar"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">End Period<br />(for Trainee/Contractor)</label>
                                                <div class="col-md-8">
                                                    <div class="input-group form-inline" style="float: left;">
                                                        <input ID="txtDatePeriodTo" name="txtDatePeriodTo" class="form-control " type="text"
                                                               ToolTip="Start Date" placeholder="-- / -- / ----" data-bind="value : target_end, valueUpdate: 'afterkeydown' " disabled />
                                                        <span class="input-group-addon">
                                                            <i class="glyphicon glyphicon-calendar"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">No. of Headcount</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtNoofHead" name="txtNoofHead" class="form-control" data-bind="value : no_of_head" disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Status Name</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtlbl1" name="txtlbl1" class="form-control" data-bind='value: status_name' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-12 control-label oper-label nomallabel">Job Descriptions</label>
                                                <div class="col-md-12" style="margin-top:5px;">
                                                    <textarea rows="10" id="txtjd" cols="50" class="form-control" data-bind='value: job_descriptions' disabled></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-12 control-label oper-label nomallabel">Qualification & Experience</label>
                                                <div class="col-md-12" style="margin-top:5px;">
                                                    <textarea rows="10" id="txtqx" cols="50" class="form-control" data-bind='value: qualification_experience' disabled></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-12 control-label oper-label nomallabel">Special Note</label>
                                                <div class="col-md-12" style="margin-top:5px;">
                                                    <textarea rows="3" id="txtDes" cols="50" class="form-control" data-bind='value: description' disabled></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<hr />*@

                                </div>
                                <!-- /.box-body -->

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="box box-solid box-info">
                                <div class="box-header with-border">
                                    <h3 class="box-title">HR’s Part: PR Update</h3>
                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">Type of Technical Interview Form (TIF)</label>
                                                <div class="col-md-8">
                                                    <label class="control-label">
                                                        <input type="radio" name="rdlTIF" id="rdlTIF" class="flat-green radio radio-inline" data-bind='iCheck: { checked: TIF_type}' value="N">Non-Mass<br>
                                                    </label>
                                                    <label class="control-label">
                                                        <input type="radio" name="rdlTIF" id="rdlTIF" class="flat-green radio radio-inline" data-bind='iCheck: { checked: TIF_type}' value="M">Mass<br>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="divTrainee" data-bind="visible:IsTrainee">
                                        @*<div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group form-group-sm">
                                                    <label class="col-md-4 control-label text-right require">No of Evaluation</label>
                                                    <div class="col-md-8">
                                                        <input type="text" id="txtNoEva" name="txtNoEva" class="form-control" data-bind='value: no_of_eva' />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>*@
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-12 control-label oper-label nomallabel">Additional Info. (e.g. change in Headcount Request)</label>
                                                <div class="col-md-12" style="margin-top:5px;">
                                                    <textarea rows="3" id="txthrremark" cols="50" class="form-control" data-bind='value: hr_remark'></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                              
                                <!-- /.box-body -->
                                <div class="box-footer text-center">
                                    @if (Model.pr_status_id == "3")
                                    {
                                        <button type="button" class="btn btn-success" onclick="Complete();">Complete</button>
                                    }

                                    <button type="button" class="btn btn-primary" onclick="SaveDataTIF();">Save</button>
                                    <button type="button" class="btn btn-warning" onclick="Cancel();">Back</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-5 ">
                    <!-- general form elements -->
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="box box-solid box-ctmPR2">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Headcount Plan</h3>
                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right" data-bind='text: FY_plan_title'></label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtlbl1" name="txtlbl1" class="form-control" data-bind='value: FY_plan' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Current HC</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtlbl2" name="txtlbl2" class="form-control" data-bind='value: cur_headcount' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.box-body -->

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="box box-solid box-ctmPR4">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Approval Process</h3>
                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                        <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                            <i class="fa fa-refresh"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body  no-padding no-pad-bot no-pad-top">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive">
                                                <table class="table table-striped table-bordered table-hover display" id="gvwDataApprove" width="100%">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <!-- /.box-body -->

                            </div>
                        </div>
                    </div>




                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="box box-solid box-ctmPR3">
                        <div class="box-header with-border">
                            <h3 class="box-title">HR's Part : Candidate Tracking</h3>
                            <div class="box-tools pull-right">
                                <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                    <i class="fa fa-refresh"></i>
                                </button>
                            </div>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        <div class="box-body ">
                            <div class="row">
                                <div class="col-md-12 text-right">
                                    <button type="button" class="btn btn-primary" onclick="UpdateCandidateMany();">Update Status (Many Candidates)</button>
                                    <button type="button" class="btn btn-primary" onclick="AddCandidate();">Add Candidate</button>
                                    <button type="button" class="btn btn-primary" onclick="AddCandidateXls();">Add Candidate By Excel</button>
                                    @* <button type="button" class="btn btn-primary" onclick="AddCandidateOld();">Add Candidate Old Data</button>*@
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered table-hover display" id="gvwDataCandidate" width="100%">
                                            <thead>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <!-- /.box-body -->

                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" id="hfdSessFile" name="hfdSessFile" class="form-control" data-bind='value: Session' />
    </form>
    @*<%--[modal] before Add--%>*@

    <div id="PopupSave" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #605ca8;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Add Candidate</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        
                    </div>


                    </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveDataPV()" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
    @*<%--[modal] before Add--%>*@
    <div id="PopupTIF" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to save?</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveDataRM()" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    <div id="PopupUpdate" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #605ca8;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Update Candidate Status</b></span>
                </div>
                <div id="divUpdatePopUp">


                </div>
            </div>
        </div>
    </div>

    <div id="PopupExcel" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #605ca8;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Update Candidate Status</b></span>
                </div>
                <div id="divUpdateExcel">


                </div>
            </div>
        </div>
    </div>
    <div id="Popupmany" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #605ca8;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Update Candidate Status</b></span>
                </div>
                <div id="divmany">


                </div>
            </div>
        </div>
    </div>

    @*<%--[modal] before Add--%>*@
    <div id="PopupSaveMany" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreateMany">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12 text-center">
                                        <label class="control-label" id="lblAccept"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to save?</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveDataMany()" class="btn btn-primary">OK</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @*<%--[modal] Complete PR--%>*@
    <div id="PopupComplete" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divComplete">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Would you like to confirm changing the PR status to "Completed"?</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnComplete" type="button" onclick="CompleteStatus()" class="btn btn-primary">Confirm</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</section>
@section style{

<style>

        td.details-control {
            background: url('@Url.Content("~/Image/details_open.png")') no-repeat center center;
            cursor: pointer;
        }

        tr.details td.details-control {
            background: url('@Url.Content("~/Image/details_close.png")') no-repeat center center;
        }
           .can-inactive {
     text-decoration: line-through;
        }
       .dt-answer {
            white-space: pre
        }
</style>

}


@section scripts{
    <script src="~/Scripts/plugins/bootstrapValidate/dist/js/bootstrapValidator.js"></script>
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.numeric.extensions.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/jquery.inputmask.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/SystemFunc/sysUploadPRCandidate.js"></script>
    @*Script for bind Data KnockOut*@

    <script type="text/javascript">
        var url = document.URL;
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);

            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
       var objModel = @Html.Raw(Json.Encode(Model));
       var sUrlBack = '@Url.Action("PRCandidateList", "PRCandidate")';
       $(function () {
        @if (Request.QueryString["bUrl"] != null)
           {
       <text>
           sUrlBack += "?qryStr=" + '@Uri.EscapeDataString(Request.QueryString["bUrl"])';
       </text>
       }

        });

    </script>

    <script type="text/javascript">
        var objMaxLength = [
            { ctrlID: "txthrremark", ctrlType: "area", MaxLength: 1000 }];
        $(function () {
            SetTableApprove();
            SetTableCandidate();
            BindData(objModel);
            ko.applyBindings(viewModel);
            InputMaskDecimal(GetInputByID("txtNoofHead"), 10, 0);
            //InputMaskDecimal(GetInputByID("txtNoEva"), 3, 0);
            SetMaxLeangthJS(objMaxLength);
        });
    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.ReplaceUser = ko.computed(function () {
                if (objModel.replaced_user + "" == "Y") {
                    return true;
                }
                else {
                    return false;
                }
            });
            self.Subgroup = ko.computed(function () {
                if (objModel.sub_group + "" == "Y") {
                    return true;
                }
                else {
                    return false;
                }
            });
            self.IsTrainee = ko.computed(function () {
                if (objModel.is_trainee + "" == "T") {
                    return true;
                }
                else {
                    return false;
                }
            });
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh
                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value
                    });
                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };

        }
        function BindData(value) {
            if (viewModel.Id == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
                $("input[id*=rdlTIF][value='" + value.TIF_type + "']").iCheck('check');
                if (objModel.lstApprove != undefined && objModel.lstApprove != null && objModel.lstApprove.length > 0) {
                    $('#gvwDataApprove').DataTable().clear().draw();
                    $('#gvwDataApprove').dataTable().fnAddData(objModel.lstApprove);
                    $('#gvwDataApprove').dataTable().fnDraw();

                    setTimeout(function () {
                        $('#gvwDataApprove').DataTable().columns.adjust().draw();
                        $('#gvwDataApprove').DataTable().columns.adjust().responsive.recalc();
                    }, 500);
                }
                else {
                    $('#gvwDataApprove').DataTable().clear().draw();
                    $('#gvwDataApprove').dataTable().fnDraw();
                    $('div[id$=divTable]').collapse("hide");
                }
                if (objModel.lstCandidates != undefined && objModel.lstCandidates != null && objModel.lstCandidates.length > 0) {
                    $('#gvwDataCandidate').DataTable().clear().draw();
                    $('#gvwDataCandidate').dataTable().fnAddData(objModel.lstCandidates);
                    $('#gvwDataCandidate').dataTable().fnDraw();

                    setTimeout(function () {
                        $('#gvwDataCandidate').DataTable().columns.adjust().draw();
                        $('#gvwDataCandidate').DataTable().columns.adjust().responsive.recalc();
                    }, 500);
                }
                else {
                    $('#gvwDataCandidate').DataTable().clear().draw();
                    $('#gvwDataCandidate').dataTable().fnDraw();
                }
            }


            else {
                ko.mapping.fromJS(value, {}, viewModel);
                $("input[id*=rdlTIF][value='" + value.TIF_type + "']").iCheck('check');
            }
        }
        function Cancel() {
            window.location.href = sUrlBack;
        }
        function SetTableApprove() {
            var objHeadClRequest = [
                { "title": "", "width": "0%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "nStep", "visible": false },
                { "title": "", "width": "35%", "className": "dt-left-ctm", "data": "step_name", "searchable": false, "orderable": false },
                { "title": "Approver", "width": "35%", "className": "dt-left-ctm", "data": "app_name", "searchable": false, "orderable": false },
                { "title": "Approval Date", "width": "20%", "className": "dt-center-ctm", "data": "approve_date", "searchable": false, "orderable": false },
                { "title": "", "width": "10%", "className": "dt-center-ctm", "data": "description", "searchable": false, "orderable": false },
            ];

            var objTableRe = {
                sTableID: "gvwDataApprove",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[0, "asc"]],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                columnDefs: [{
                    "targets": 4,
                    "render": function (data, type, row) {
                        if (data != undefined && data != null && data != "") {
                            return '<a class="btn  btn-social-icon btn-sm btn-twitter" onclick="ApproveDes(' + row.nStep + ');" ><i class="fa fa-commenting-o"></i></a>';
                        }
                        else {
                            return "";
                        }
                    }
                }
                ],
                fixedHeader: {
                    header: false,
                    footer: false
                }
            };
            var table = CreatTableJS(objTableRe);
        }
        function ApproveDes(sVal) {
            var _getDec = Enumerable.From(objModel.lstApprove).Where(function (w) { return w.nStep == sVal }).FirstOrDefault();
            if (_getDec != null) {
                DialogInfo("Approval Remark", _getDec.app_name + "<br/>Remark : " + _getDec.description);
            }
        }
    </script>
    <script type="text/javascript">
        function SetTableCandidate() {
            var objHeadClRequest = [
                { "title": "", "width": "5%", "className": "details-control", "searchable": false, "orderable": false, "data": "Id", },
                { "title": "Edit", "width": "5%", "className": "dt-center-ctm", "data": "Edit", "searchable": false },
                { "title": "Name", "width": "15%", "className": "dt-left-ctm", "data": "candidate_name", "searchable": true },
                { "title": "Rank", "width": "10%", "className": "dt-center-ctm", "data": "rank", "searchable": false },
                { "title": "Status", "width": "10%", "className": "dt-center-ctm", "data": "candidate_status", "searchable": false },
                { "title": "Action Date", "width": "10%", "className": "dt-center-ctm", "data": "action_date", "searchable": false },
                { "title": "Remark", "width": "20%", "className": "dt-left-ctm dt-answer", "data": "remark", "searchable": false },
                { "title": "HR Owner", "width": "15%", "className": "dt-left-ctm", "data": "owner_name", "searchable": false },
                { "title": "Active Status", "width": "10%", "className": "dt-center-ctm", "data": "active_status", "searchable": false },
                { "title": "", "width": "0%", "className": "dt-center-ctm", "data": "active_status", "searchable": false, "visible": false },
            ];

            var objTableRe = {
                sTableID: "gvwDataCandidate",
                nDis: [],
                //sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                sProperty: "<'top col-md-6'l><'top col-md-6 text-right'f>rt<'bottom col-md-6'i><'bottom col-md-6 text-right'p><'clear'>",//length pangging
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[2, "asc"]],
                objBeforeClRender: false,
                columnDefs: [{
                    "targets": 2,
                    "render": function (data, type, row) {

                        return data;
                    }
                },
                {
                    "targets": 0,
                    "render": function (data, type, row) {

                        return "";
                    }
                 }
                ],
                fixedHeader: {
                    header: false,
                    footer: false
                    },
                    createdRow: function (row, data, index) {
                        if (data["active_status_id"] + "" != "Y") {
                            $('td', row).eq(2).addClass('can-inactive');
                        }
                    }

            };

            var table = CreatTableJSCandi(objTableRe);
            var detailRows = [];

            $('#gvwDataCandidate tbody').on('click', 'tr td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                var idx = $.inArray(tr.attr('id'), detailRows);

                if (row.child.isShown()) {
                    tr.removeClass('details');
                    row.child.hide();

                    // Remove from the 'open' array
                    detailRows.splice(idx, 1);
                }
                else {
                    tr.addClass('details');
                    row.child(format(row.data())).show();

                    // Add to the 'open' array
                    if (idx === -1) {
                        detailRows.push(tr.attr('id'));
                    }
                }
            });

            // On each draw, loop over the `detailRows` array and show any child rows
            table.on('draw', function () {
                $.each(detailRows, function (i, id) {
                    $('#' + id + ' td.details-control').trigger('click');
                });
            });
        }
        function format(d) {
            var div = $('<div style="width: 700px;" />')
                .addClass('loading')
                .text('Loading...');

            BlockUI();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetStatusLifeCycle", "PRCandidate")',
                dataType: "json",
                data: { SearchItem: d.Id },
                success: function (response) {
                   
                    if (response.result.Status == SysProcess.SessionExpired) {
                        PopupLogin('@Url.Action("Index", "Home")');
                    }
                    else {
                        var lstData = response.result.lstData;
                        if (lstData == undefined || lstData.length <= 0) {
             //0data
                            div
                                .html('Data Not Found.')
                                .removeClass('loading');
                        
                        }
                        else {

                            var sHtml = "";
                            $.each(lstData, function (i, item) {
                                optionhtml = '<tr>' +
                                    '<td>' + item.action_name+'</td>' +
                                    '<td>' + item.action_date +'</td>' +
                                    '<td>' + item.desc +'</td>' +
                                    '</tr>';
                                //optionhtml = '<option value="' +
                                //    item.value + '">' + item.text + '</option>';
                                sHtml += optionhtml;
                            });

                            div
                                .html('<table class="table table-bordered"  width="400" >' +
                                '<tr>' +
                                '<td  width="30%">Status Name</td>' +
                                '<td  width="20%">Action Date</td>' +
                                '<td  width="50%">Remark</td>' +
                                '</tr>' +
                                sHtml +
                                '</table>')
                                .removeClass('loading');
                        }
                    }
                },
                complete: function (jqXHR, status) {//finaly
                    //$('#gvwData').DataTable().columns.adjust().draw();
                    //$('#gvwData').DataTable().columns.adjust().responsive.recalc();
                    UnblockUI();
                }
            });
            //return 'Full name: ' + d.candidate_name + '<br>' +
            //    'Salary: ' + d.candidate_status;
            return div;
        }
        function CreatTableJSCandi(objOption) {
            var dTable2;

            if (objOption.objHeadCl != undefined
                && objOption.sTableID != undefined && objOption.sTableID != ""
                && objOption.objHeadCl != null && objOption.objHeadCl != "") {
                //add render text
                var bRender = true;
                if (objOption.objBeforeClRender != undefined && !objOption.objBeforeClRender == true) {
                    bRender = objOption.objBeforeClRender;
                }
                var aColumnotText = ["sview", "edit", "view", "chk", "submit"]
                var aColumnDef = [];
                if (objOption.columnDefs == undefined) {
                    objOption.columnDefs = [];

                }
                else {
                    aColumnDef = objOption.columnDefs.map(function (a) { return a.targets; });
                    if (contains(aColumnDef, "_all")) {
                        bRender = false;
                    }
                }

                if (objOption.objHeadClRender != undefined) {
                    aColumnotText = objOption.objHeadClRender;
                }
                if (bRender) {

                    $.each(objOption.objHeadCl, function (key, data) {
                        if (!contains(aColumnotText, data.data.toLowerCase()) && !containsNumber(aColumnDef, key)) {
                            if (!data.hasOwnProperty("render")) {
                                objOption.objHeadCl[key]["render"] = $.fn.dataTable.render.text();
                            }
                        }
                    });
                }

                //Option FixHeader
                var bFixHeader = true;
                var nFixHeadder = 0;
                var bProcess = false;
                var bScorllY = false;
                var bScorllX = false;
                var srowGroup = {};
                var sfixedHeader = {
                    header: false,
                    footer: false,
                };
                var sfooter = null;
                var sresponsive = false;

                if (objOption.processing != undefined) { bProcess = true; }

                if (objOption.createdRow == undefined) { objOption.createdRow = function () { }; }
                if (objOption.nHeadFix != undefined && objOption.nHeadFix > 0) {
                    bFixHeader = true;
                    bScorllX = true;
                    nFixHeadder = objOption.nHeadFix;
                }
                if (objOption.nDis != undefined && objOption.nDis == "") { nDis = []; }
                var lengthMenu = [[50, 100, 150, -1], [50, 100, 150, "All"]];
                if (objOption.lengthMN != undefined) {
                    lengthMenu = objOption.lengthMN;
                }
                if (objOption.bFixHeader != undefined) {
                    bFixHeader = objOption.bFixHeader;
                    bScorllX = true;
                }
                if (objOption.rowGroup != undefined) {
                    srowGroup = objOption.rowGroup;
                }
                if (objOption.fixedHeader != undefined) {
                    sfixedHeader = objOption.fixedHeader;
                }

                if (objOption.footerCallback != undefined) {
                    sfooter = objOption.footerCallback;
                }

                if (objOption.responsive != undefined) {
                    sresponsive = objOption.responsive;
                }


                if (objOption.scrollY != undefined) {
                    if (objOption.scrollY) {
                        bScorllY = objOption.scrollY;
                    }
                }


                var dTable = $('#' + objOption.sTableID).DataTable({
                    "data": objOption.objDataSet != undefined ? objOption.objDataSet : [],
                    "bFilter": true,
                    "dom": objOption.sProperty != undefined ? objOption.sProperty : "",
                    "language": {
                        "emptyTable": objOption.EmptyTable,
                    },
                    "zeroRecords": "No matching records found",
                    "scrollX": bScorllX,
                    "scrollY": bScorllY,
                    "scrollCollapse": bFixHeader,
                    "fixedColumns": {
                        "leftColumns": nFixHeadder
                    },
                    "fixedHeader": sfixedHeader,
                    "columns": objOption.objHeadCl,
                    "columnDefs": objOption.columnDefs,
                    "createdRow": objOption.createdRow,
                    "order": objOption.order,
                    "lengthMenu": lengthMenu,
                    "bRetrieve": true,
                    "drawCallback": function () {

                        if (objOption.drawCallback != undefined) {

                            objOption.drawCallback();
                        }
                        //$("table >tbody input[type=checkbox] ").iCheck({
                        //    checkboxClass: 'icheckbox_flat-green',
                        //    radioClass: 'iradio_flat-green'
                        //});
                    },
                    //"fnDrawCallback": function () {
                    //    //EDIT OFFICE FORM
                    //    // SetICheck();
                    //    UnCheckCheckBoxHeader("ckbAll");

                    //    //$("div[id$=" + objOption.sTableID + "_wrapper]   input[type=checkbox]").iCheck({
                    //    //    checkboxClass: 'icheckbox_flat-green',
                    //    //    radioClass: 'iradio_flat-green'
                    //    //});
                    //    // SetCheckBoxSelectRowInGrid("gvwData", "ckbAll", "chkRow", "fix");
                    "processing": bProcess,
                    //"initComplete": function (settings, json) {
                    //    setTimeout(function () {
                    //        $('#' + objOption.sTableID).DataTable().columns.adjust().draw()
                    //    }, 500);
                    //}
                    //},
                    "rowGroup": srowGroup,
                    "responsive": sresponsive,
                    "bAutoWidth": true,
                    "footerCallback": sfooter

                });

                //dTable.dataTable
                if (objOption.nRunningNumber != undefined && objOption.nRunningNumber[0] == "true") {
                    dTable.on('order.dt search.dt', function () {
                        dTable.column(objOption.nRunningNumber[1], { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                            cell.innerHTML = i + 1;
                        });
                    }).draw();
                }
                dTable2 = dTable;
                //$('#' + objOption.sTableID + "_info").addClass("col-md-6");
                //$('#' + objOption.sTableID + "_paginate").addClass("col-md-6 text-right");
            }
            return dTable2;
        };
    </script>
    <script type="text/javascript">
        function AddCandidate() {
          
            $("#PopupSave").modal({ backdrop: 'static', keyboard: false });
             $.ajax({
                url: '@Url.Action("AddShortCandidate", "Candidates")',
                dataType: 'html',
                cache: false,
                //data: { id: value, pr: prid },
                success: function (data) {
                    $('#divCreatePopUp').html(data);
                 }, complete: function (jqXHR, status) {//finaly
                    BindDataPV(objModelPVS);
                    ko.applyBindings(viewModelPV, document.getElementById("pvCandidate"));
                    ValidateFormPV();
                    if (objMaxLengthCandidate != undefined) {
                        SetMaxLeangthJS(objMaxLengthCandidate);
                    }

                }
            });
        }
        function AddCandidateOld() {

        }
        function GetCandidate() {
            var lstData = {
                IdEncrypt: ko.toJS(viewModel.IdEncrypt),
                objData: ko.toJS(viewModelPV),
            }
            return lstData;
        }
        function SaveDataPV() {

            var IsPass = true;
            if (!CheckValidateBootstrap("pvCandidate")) {
                IsPass = false;
                FocusValidateBootstrap("pvCandidate");
            }
            if (IsPass) {
                  BlockUI();
                var Param = GetCandidate();
                Param.lstData = null;
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("CreateShortCandidate", "Candidates")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccess(DialogHeader.Info, DialogMsg.SaveComplete);
                            if (respone.result.lstCandidates != undefined && respone.result.lstCandidates != null && respone.result.lstCandidates.length > 0) {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnAddData(respone.result.lstCandidates);
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            else {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            $("#PopupSave").modal("hide");
                        }
                        else if (respone.result.Status == SysProcess.Duplicate){
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                        $('#gvwDataCandidate').DataTable().columns.adjust().draw();
                        $('#gvwDataCandidate').DataTable().columns.adjust().responsive.recalc();
                    }
                });
            }

        }
        var viewModelPV = {

        };
        function BindDataPV(value2) {
            if (viewModelPV.Id == undefined) {
                viewModelPV = ko.mapping.fromJS(value2);
            }
            else {
                ko.mapping.fromJS(value2, {}, viewModelPV);
            }
        }
    </script>
    @*Save HR Remark*@

    <script type="text/javascript">
        function SaveDataTIF() {
            var IsPass = true;
            var val = GetValRadioListICheck("rdlTIF");
            if (val == undefined || (val != "M" && val != "N")) {
              IsPass = false;
              DialogWarning(DialogHeader.Warning, "Plaece, Select Type of TIF Form");
          }
          if (IsPass) {
              $("#PopupTIF").modal();
          }
        }

      function SaveDataRM() {
            var IsPass = true;
            if (IsPass) {

                BlockUI();
                var Param = ko.toJS(viewModel);

                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("UpdatePRCandidate", "PRCandidate")',
                    data: JSON.stringify({ ItemData: Param}),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                             PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccess(DialogHeader.Info, DialogMsg.SaveComplete);
                        }
                        else if (respone.result.Status == SysProcess.Duplicate) {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                        $("#PopupTIF").modal('hide');
                    }
                });
            }
        }

    </script>
    <script type="text/javascript">
           function EditMapping(sVal) {
            var Param = {
                IdEncrypt: sVal,
            };

            $.ajax({
                url: '@Url.Action("UpdateStatusCandidate", "Candidates")',
                dataType: 'html',
                cache: false,
                data: Param
                , success: function (data) {

                    $('#divUpdatePopUp').html(data);

                 }, complete: function (jqXHR, status) {//finaly
                    //SetTableUpdate();

                    BindDataUpdate(objModelUpdate);
                    ko.applyBindings(viewModelUpdate, document.getElementById("pvUpCandidate"));
                    ValidateFormUpd();
                    $("#PopupUpdate").modal({ backdrop: 'static', keyboard: false });
                }
            });
        }

        function GetUpdateStatus() {
            var lstData = ko.toJS(viewModelUpdate);
            return lstData;
        }
        function UpdateSt() {
              var IsPass = true;
            if (!CheckValidateBootstrap("pvUpCandidate")) {
                IsPass = false;
                FocusValidateBootstrap("pvUpCandidate");
            }
            if (IsPass) {
                BlockUI();
                var Param = GetUpdateStatus();
                Param.lstData = null;
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("UpdateStatusCandi", "Candidates")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccess(DialogHeader.Info, DialogMsg.SaveComplete);
                            if (respone.result.lstCandidates != undefined && respone.result.lstCandidates != null && respone.result.lstCandidates.length > 0) {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnAddData(respone.result.lstCandidates);
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            else {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            $("#PopupUpdate").modal("hide");
                        }
                        else if (respone.result.Status == SysProcess.Duplicate){
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                        $('#gvwDataCandidate').DataTable().columns.adjust().draw();
                        $('#gvwDataCandidate').DataTable().columns.adjust().responsive.recalc();
                    }
                });
            }
        }
        function UpdateStRemark() {
            var IsPass = true;
            if (IsPass) {
                BlockUI();
                var Param = GetUpdateStatus();
                Param.lstData = null;
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("UpdateStatusCandiRemark", "Candidates")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccess(DialogHeader.Info, DialogMsg.SaveComplete);
                            if (respone.result.lstCandidates != undefined && respone.result.lstCandidates != null && respone.result.lstCandidates.length > 0) {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnAddData(respone.result.lstCandidates);
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            else {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            $("#PopupUpdate").modal("hide");
                        }
                        else if (respone.result.Status == SysProcess.Duplicate){
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                        $('#gvwDataCandidate').DataTable().columns.adjust().draw();
                        $('#gvwDataCandidate').DataTable().columns.adjust().responsive.recalc();
                    }
                });
            }
        }
        function RollBackStatus() {
            var IsPass = true;
            if (IsPass) {
                BlockUI();
                var Param = GetUpdateStatus();
                Param.lstData = null;
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("RollbackStatusCandi", "PRCandidate")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccess(DialogHeader.Info, DialogMsg.SaveComplete);
                            if (respone.result.lstCandidates != undefined && respone.result.lstCandidates != null && respone.result.lstCandidates.length > 0) {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnAddData(respone.result.lstCandidates);
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            else {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            $("#PopupUpdate").modal("hide");
                        }
                        else if (respone.result.Status == SysProcess.Duplicate){
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                        $('#gvwDataCandidate').DataTable().columns.adjust().draw();
                        $('#gvwDataCandidate').DataTable().columns.adjust().responsive.recalc();
                    }
                });
            }
        }
        var viewModelUpdate = {

        };

        function BindDataUpdate(value2) {
            if (viewModelUpdate.Id == undefined) {
                viewModelUpdate = ko.mapping.fromJS(value2);
                $("input[id*=rdlStatus][value='" + value2.active_status + "']").iCheck('check');
            }
            else {
                ko.mapping.fromJS(value2, {}, viewModelUpdate);
                $("input[id*=rdlStatus][value='" + value2.active_status + "']").iCheck('check');
            }
        }
    </script>
    <script type="text/javascript">

        function AddCandidateXls(sVal) {
            var Param = {
                IdEncrypt: sVal,
            };

            $.ajax({
                url: '@Url.Action("AddCandidateByExcel", "PRCandidate")',
                dataType: 'html',
                cache: false,
                data: Param
                , success: function (data) {

                    $('#divUpdateExcel').html(data);

                 }, complete: function (jqXHR, status) {//finaly
                    $("#PopupExcel").modal({ backdrop: 'static', keyboard: false });
                    SetUploadPRCandidate("btnUpload3", "", "hfdSessFile", '@Url.Action("UploadFile", "PRCandidate")');
                    SetTableExcelTable();
                    setTimeout(function () {
                        $('#gvwDataExcel').DataTable().columns.adjust().draw();
                        $('#gvwDataExcel').DataTable().columns.adjust().responsive.recalc();
                    }, 500);
                }
            });
        }

        function SetTableExcelTable() {
            var objHeadClRequest = [
                { "title": "Candidate Name", "width": "15%", "className": "dt-left-ctm", "data": "sName" },
                { "title": "SurName", "width": "15%", "className": "dt-left-ctm", "data": "sLName" },
                { "title": "Nickname", "width": "15%", "className": "dt-left-ctm", "data": "snickname" },
                { "title": "Email", "width": "15%", "className": "dt-left-ctm", "data": "email" },
                { "title": "Phone", "width": "15%", "className": "dt-left-ctm", "data": "phone" },
                { "title": "Status", "width": "25%", "className": "dt-left-ctm", "data": "sIsOld" },
            ];

            var objTableRe = {
                sTableID: "gvwDataExcel",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[0, "asc"]],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                scrollY: '50vh'
            };
            var table = CreatTableJS(objTableRe);

        }
          function AddExcelCandidate() {
              var IsPass = true;
              var Recruit = GetValDropdown("ddlRecruitmentExl");
              if (IsPass && Recruit != "") {
                  BlockUI();
                  var Param = {
                      IdEncrypt: ko.toJS(viewModel.IdEncrypt) + "",
                      Session: ko.toJS(viewModel.Session) + "",
                      empNo: GetValDropdown("ddlRecruitmentExl"),
                  };

                  $.ajax({
                      dataType: AjaxCall.dataType,
                      type: AjaxCall.type,
                      contentType: AjaxCall.contentType,
                      url: '@Url.Action("AddExcelCandidate", "PRCandidate")',
                      data: JSON.stringify({ ItemData: Param }),
                      success: function (respone) {
                          if (respone.result.Status == SysProcess.SessionExpired) {
                              PopupLogin('@Url.Action("Index", "Home")');
                          } else if (respone.result.Status == SysProcess.Success) {
                              DialogSuccess(DialogHeader.Info, DialogMsg.SaveComplete);
                              if (respone.result.lstCandidates != undefined && respone.result.lstCandidates != null && respone.result.lstCandidates.length > 0) {
                                  $('#gvwDataCandidate').DataTable().clear().draw();
                                  $('#gvwDataCandidate').dataTable().fnAddData(respone.result.lstCandidates);
                                  $('#gvwDataCandidate').dataTable().fnDraw();
                              }
                              else {
                                  $('#gvwDataCandidate').DataTable().clear().draw();
                                  $('#gvwDataCandidate').dataTable().fnDraw();
                              }
                              $("#PopupExcel").modal("hide");
                          }
                          else {
                              DialogWarning(DialogHeader.Warning, respone.result.Msg);
                          }
                      },
                      error: AjaxCall.error,
                      complete: function (jqXHR, status) {//finaly
                          UnblockUI();
                          $('#gvwDataCandidate').DataTable().columns.adjust().draw();
                          $('#gvwDataCandidate').DataTable().columns.adjust().responsive.recalc();
                          $("#PopupExcel").modal("hide");
                      }
                  });
              }
              else {
                  DialogWarning(DialogHeader.Warning, "Please select Recruitment.");
              }
        }
    </script>
    <script type="text/javascript">
         function UpdateCandidateMany(sVal) {
            var Param = {
                IdEncrypt: sVal,
            };

            $.ajax({
                url: '@Url.Action("UpdateManyStatus", "PRCandidate")',
                dataType: 'html',
                cache: false,
                data: Param
                , success: function (data) {

                    $('#divmany').html(data);

                }, complete: function (jqXHR, status) {//finaly

                    BindDataMany(objModelMany);
                    ko.applyBindings(viewModelMany, document.getElementById("divStatus"));
                    ValidateFormmany();
                    $("#Popupmany").modal({ backdrop: 'static', keyboard: false });
                    SetTablemany();
                    UnCheckCheckBoxHeader("ckbAll");
                    SetICheck();
                    SetCheckBoxSelectRowInGrid("gvwDatamany", "ckbAll", "chkRow", "");
                    setTimeout(function () {
                        $('#gvwDatamany').DataTable().columns.adjust().draw();
                        $('#gvwDatamany').DataTable().columns.adjust().responsive.recalc();
                    }, 500);
                }
            });
        }

        function SetTablemany() {
            var objHeadClRequest = [
                { "title": chkAll(), "width": "5%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "Id" },
                { "title": "No.", "width": "5%", "className": "dt-center-ctm", "data": "Id", "orderable": false, "searchable": false},
                { "title": "Candidate Name", "width": "50%", "className": "dt-left-ctm", "data": "candidate_name" },
                { "title": "Status", "width": "20%", "className": "dt-center-ctm", "data": "candidate_status", "searchable": false },
                { "title": "Action Date", "width": "20%", "className": "dt-center-ctm", "data": "action_date", "searchable": false },
            ];

            var objTableRe = {
                sTableID: "gvwDatamany",
                nDis: [],
                sProperty: "<'top col-md-6'>t<'bottom col-md-6'i><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[2, "asc"]],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                scrollY: '50vh',
                nRunningNumber: ["true",1],
                columnDefs: [{
                    "targets": 0,
                    "render": function (data) {
                        return CreateRadioOfPage(data);
                    }
                }],
            };
            var table = CreatTableJS(objTableRe);
            $('#' + objTableRe.sTableID + '').dataTable().on('draw.dt', function (settings) {
                $("div[id$=" + objTableRe.sTableID + "_wrapper] div.icheckbox_flat-green input[id$=chkRow]").iCheck('uncheck');
                UnCheckCheckBoxHeader("ckbAll");
                SetICheck();
                SetCheckBoxSelectRowInGrid("gvwDatamany", "ckbAll", "chkRow", "");
                $('div[id=' + objTableRe.sTableID + '_wrapper] div.DTFC_ScrollWrapper ').height($('div[id=' + objTableRe.sTableID + '_wrapper] div.DTFC_ScrollWrapper div.dataTables_scroll').height());

            });
        }
        var viewModelMany = {

        };

        function BindDataMany(value2) {
            if (viewModelMany.active_status == undefined) {
                viewModelMany = ko.mapping.fromJS(value2);
                $("input[id*=rdlStatusMany][value='" + value2.active_status + "']").iCheck('check');
            }
            else {
                ko.mapping.fromJS(value2, {}, viewModelMany);
                $("input[id*=rdlStatusMany][value='" + value2.active_status + "']").iCheck('check');
            }
        }
        function SearchPopupCan() {
            var Param = {
                status_id: GetValDropdown("ddlCanStatus"),
                IdEncrypt: ko.toJS(viewModel.IdEncrypt) + "",
            };
            BlockUI();
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadPRCandidateMany", "PRCandidate")',
                dataType: "json",
                data: { SearchItem: Param },
                success: function (response) {
                    var newList = ko.toJS(viewModelMany);
                    if (newList.active_status != undefined) {

                        newList.lstStatus = response.result.lstStatus;

                        BindDataMany(newList);
                    }
                    if (response.result.Status == SysProcess.SessionExpired) {
                          PopupLogin('@Url.Action("Index", "Home")');
                    }
                    else {
                        var lstData = response.result.lstCandidates;
                        if (lstData == undefined || lstData.length <= 0) {
                            $('#gvwDatamany').DataTable().clear().draw();
                            $('#gvwDatamany').dataTable().fnDraw();
                            $('#gvwDatamany').DataTable().columns.adjust().draw();
                            objModelMany.lstCandidates = [];
                        }
                        else {
                            $('#gvwDatamany').DataTable().clear().draw();
                            $('#gvwDatamany').dataTable().fnAddData(lstData);
                            $('#gvwDatamany').dataTable().fnDraw();
                            $('#gvwDatamany').DataTable().columns.adjust().draw();
                            objModelMany.lstCandidates = lstData;
                        }

                    }
                },
                complete: function (jqXHR, status) {//finaly
                    $('#gvwDatamany').DataTable().columns.adjust().draw();
                    $('#gvwDatamany').DataTable().columns.adjust().responsive.recalc();
                    UnblockUI();
                }
            });
        }
        function SaveMany() {
            var Acceptlst = [];
            Enumerable.From(objModelMany.lstCandidates).ForEach(function (ed) { return ed.statusvalue = GetValueChkGroupSingelValue(ed.Id + ""); });

            Acceptlst = Enumerable.From(objModelMany.lstCandidates).Where(function (w) { return w.statusvalue == "Y" }).ToArray();
            var $Accept = GetLabelByID("lblAccept");

            if (Acceptlst.length == 0) {
                DialogWarning(DialogHeader.Warning, "Please select at least one item.");
            }
            else {

                if (Acceptlst.length > 0) {
                    //var AcceptNumber = Enumerable.From(Acceptlst).Sum(function (s) { return ConvertToIntNotnull(s.AMOUNT_AMT) });
                    var strReturnAccept = 'Do you want to approve ' + Acceptlst.length + ' entries?';
                    $Accept.text(strReturnAccept);
                }
                else {
                    $Accept.text('Not specify.');
                }
                $("#PopupSaveMany").modal();
            }
        }
        function GetDataMany() {
            lstData = ko.toJS(viewModelMany);
            if (lstData != null) {
                lstData.IdEncrypt = ko.toJS(viewModel.IdEncrypt);
                lstData.lstCandidates = Enumerable.From(objModelMany.lstCandidates).Where(function (w) { return w.statusvalue == "Y" }).Select(function (x) {
                    return {
                        Id: x['Id'],
                    }
                }).ToArray();
            }

            //var lstData = {
            //    lstData: Enumerable.From(objlstData).Where(function (w) { return w.statusvalue == "Y" }).Select(function (x) {
            //        return {
            //            IdEncrypt: x['IdEncrypt'],
            //            refno: x['refno'],
            //            name_en: x['name_en'],
            //        }
            //    }).ToArray(),
            //};

            return lstData;
        }
         function SaveDataMany(){
            var IsPass = true;
             $("#PopupSaveMany").modal("hide");
            if (IsPass) {
                BlockUI();
                var lstParam = GetDataMany();

                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("SaveManyCandidate", "PRCandidate")',
                    data: JSON.stringify({ ItemData: lstParam}),
                    success: function (respone) {

                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin();
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccess(DialogHeader.Info, DialogMsg.SaveComplete);
                            if (respone.result.lstCandidates != undefined && respone.result.lstCandidates != null && respone.result.lstCandidates.length > 0) {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnAddData(respone.result.lstCandidates);
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            else {
                                $('#gvwDataCandidate').DataTable().clear().draw();
                                $('#gvwDataCandidate').dataTable().fnDraw();
                            }
                            $("#Popupmany").modal("hide");

                        }
                        else if (respone.result.Status == SysProcess.Failed)
                        {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();

                        $('#gvwDataCandidate').DataTable().columns.adjust().draw();
                        $('#gvwDataCandidate').DataTable().columns.adjust().responsive.recalc();
                    }
                });
            }
        }
    </script>
    <script type="text/javascript">

         $(function () { $(window).bind('beforeunload', function () {

                var aSession = [$('input[id$=hfdSessFile]').val()];

                //var sValHdf = $('input[id$=hfdSess]').val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ClearSession", "Base")',
                    cache: false,
                    dataType: "html",
                    data: {
                        sVal: encodeURIComponent(aSession)
                    },
                    complete: function (jqXHR, status) {//finaly
                    }
                });
            });
        });
    </script>
}

@if (Model.pr_status_id == "3")
{
    @section scripts2{
        <script type="text/javascript">
            function Complete() {
                var IsPass = true;
                if (IsPass) {
                    $("#PopupComplete").modal();
                }

            }
            function CompleteStatus() {
                var IsPass = true;
                if (IsPass) {

                BlockUI();
                var Param = ko.toJS(viewModel);
                    $("#PopupComplete").modal('hide');
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("CompletePR", "PRCandidate")',
                    data: JSON.stringify({ ItemData: Param}),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                             PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccessOk(DialogHeader.Info, "Submission Completed", 'func', function () {
                                var prodId = getParameterByName('bUrl');
                                if (prodId != "") {
                                    window.location.href = sUrlBack;
                                }
                                else {
                                    window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                                }
                            });
                        }
                        else if (respone.result.Status == SysProcess.Duplicate) {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                        $("#PopupTIF").modal('hide');
                    }
                });
                }
            }
        </script>
    }
}