@model HumanCapitalManagement.ViewModel.MainVM.vPersonnelRequest_obj_save
@{
    ViewBag.Title = "HCM | Create Personnel Request Form (PR Form)";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}


<section class="content-header">
    <h1>
        Create Personnel Request Form (PR Form)
    </h1>
</section>
<!-- Main content -->
<section class="content">
    <form class="form-horizontal">
        <div id="divContent">
            <div class="row">

                <div class="col-md-7">
                    <div class="row">
                        <div class="col-lg-12">
                            <!-- general form elements -->
                            <div class="box box-solid box-ctmPR">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Personnel Request Form</h3>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body">
                                    @*<div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group form-group-sm">
                                                    <label class="col-md-4 control-label text-right require">Ref No.</label>
                                                    <div class="col-md-8">
                                                        <input type="text" id="txtRefNo" name="txtRefNo" class="form-control" data-bind="value : code" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>*@
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">Group</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtID" name="txtID" class="form-control hidden" data-bind='value: Id' />
                                                    @{ Html.RenderAction("CreateDivisionCode", "HCMMasterData", new
                                                        {
                                                            id = "ddlGroup",
                                                            databind = "group_id",
                                                            value = ""
                                                        });}
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">SubGroup</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtID" name="txtID" class="form-control hidden" data-bind='value: Id' />
                                                    @*@{ Html.RenderAction("CreateDivisionCode", "HCMMasterData", new
                                                        {
                                                            id = "ddlGroup",
                                                            databind = "sub_group_id",
                                                            value = ""
                                                        });}*@
                                                    <select id="ddlSupGroup" name="ddlSupGroup" class="form-control" data-bind="options: lstSubGroup, optionsText: 'name', optionsValue: 'id',
                                               value: sub_group_id,
                                               valueAllowUnset: true,enable: SubgroupHasOpt"></select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">Rank</label>
                                                <div class="col-md-8">
                                                    <select id="ddlRank" name="ddlRank" class="form-control" data-bind="options: lstrank, optionsText: 'name', optionsValue: 'id',
                                               value: rank_id,
                                               valueAllowUnset: true,enable: RankHasOpt"></select>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">Position</label>
                                                <div class="col-md-8">
                                                    <select id="ddlPosition" name="ddlPosition" class="form-control" data-bind="options: lstPosition, optionsText: 'name', optionsValue: 'id',
                                               value: position_id,
                                               valueAllowUnset: true,enable: PositionHasOpt"></select>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">Type of Employment</label>
                                                <div class="col-md-8">
                                                    @{ Html.RenderAction("CreateddlEmploymentType", "HCMMasterData", new
                                                        {
                                                            id = "ddlEmploymentType",
                                                            databind = "employment_type_id",
                                                            value = ""
                                                        });}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">Type of Request</label>
                                                <div class="col-md-8">
                                                    <select id="ddlTypeReq" name="ddlTypeReq" class="form-control" data-bind="options: lstTypeReq, optionsText: 'name', optionsValue: 'id',
                                               value: request_type_id,
                                               valueAllowUnset: true,enable: TypeReqHasOpt"></select>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">Target Period</label>
                                                <div class="col-md-8">
                                                    <div class="input-group form-inline" style="float: left;">
                                                        <input ID="txtDatePeriod" name="txtDatePeriod" class="form-control " type="text"
                                                               ToolTip="To" placeholder="-- / -- / ----" data-bind="value : target_start, valueUpdate: 'afterkeydown' " />
                                                        <span class="input-group-addon">
                                                            <i class="glyphicon glyphicon-calendar"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">End Period<br />(for Trainee/Contractor)</label>
                                                <div class="col-md-8">
                                                    <div class="input-group form-inline" style="float: left;">
                                                        <input ID="txtDatePeriodTo" name="txtDatePeriodTo" class="form-control " type="text"
                                                               ToolTip="Start Date" placeholder="-- / -- / ----" data-bind="value : target_end, valueUpdate: 'afterkeydown' " />
                                                        <span class="input-group-addon">
                                                            <i class="glyphicon glyphicon-calendar"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">No. of Headcount</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtNoofHead" name="txtNoofHead" class="form-control" data-bind="value : no_of_head" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group form-group-sm">
                                                    <label class="col-md-4 control-label text-right require">TIF Form Type</label>
                                                    <div class="col-md-8">
                                                        <label class="control-label">
                                                            <input type="radio" name="rdlTIF" id="rdlTIF" class="flat-green radio radio-inline" data-bind='iCheck: { checked: TIF_type}' value="N">Non-Mass<br>
                                                        </label>
                                                        <label class="control-label">
                                                            <input type="radio" name="rdlTIF" id="rdlTIF" class="flat-green radio radio-inline" data-bind='iCheck: { checked: TIF_type}' value="M">Mass<br>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>*@
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-12 control-label oper-label nomallabel">Job Descriptions</label>
                                                <div class="col-md-12" style="margin-top:5px;">
                                                    <textarea rows="10" id="txtjd" cols="50" class="form-control" data-bind="value: job_descriptions , valueUpdate: 'afterkeydown' "></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-12 control-label oper-label nomallabel">Qualification & Experience</label>
                                                <div class="col-md-12" style="margin-top:5px;">
                                                    <textarea rows="10" id="txtqx" cols="50" class="form-control" data-bind="value: qualification_experience, valueUpdate: 'afterkeydown'"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-12 control-label oper-label nomallabel">Special Note</label>
                                                <div class="col-md-12" style="margin-top:5px;">
                                                    <textarea rows="3" id="txtDes" cols="50" class="form-control" data-bind="value: description, valueUpdate: 'afterkeydown' "></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- /.box-body -->
                                <div class="box-footer">
                                    <div class="row">
                                        <div class="col-md-12 text-center">
                                            <button type="button" class="btn btn-primary" onclick="Save();">Submit</button>
                                            <button type="button" class="btn btn-danger" onclick="Cancel();">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-md-5 ">
                    <!-- general form elements -->
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="box box-solid box-ctmPR2">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Headcount Plan</h3>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right" data-bind='text: FY_plan_title'></label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtlbl1" name="txtlbl1" class="form-control" data-bind='value: FY_plan' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Current HC</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtlbl2" name="txtlbl2" class="form-control" data-bind='value: cur_headcount' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.box-body -->

                            </div>
                        </div>


                    </div>

                    <div class="row">
                        <div class="col-lg-12">
                            <div class="box box-solid box-ctmPR4">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Approval Process</h3>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body  no-padding no-pad-bot no-pad-top">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive">
                                                <table class="table table-striped table-bordered table-hover display" id="gvwDataApprove" width="100%">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="box-footer">
                                    <div class="row">
                                        <div class="col-md-12">
                                            Remarks: <span data-bind="text: remark_group_approve" style="color:red;"></span>
                                        </div>
                                    </div>
                                </div>

                                <!-- /.box-body -->

                            </div>
                        </div>
                    </div>
                    <div class="row row collapse in" id="divReplaced">
                        <div class="col-lg-12">
                            <div class="box box-solid box-ctmPR3">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Please specify the name of person being replaced</h3>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body">

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Name</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtName" name="txtName" class="form-control" disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right require">Employee(Name/ID)</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control " style="display:none;" id="txtMGID" name="txtMGID" disabled>
                                                    <input type="text" id="txtSearch" name="txtSearch" class="form-control" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Group</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtgroup" name="txtgroup" class="form-control" disabled />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Rank</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtposition" name="txtposition" class="form-control" disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.box-body -->

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    @*<%--[modal] before Add--%>*@
    <div id="PopupSave" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Submit Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12 text-center">
                                        <label class="control-label" id="lblAccept"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to submit this PR form?</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveData()" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</section>
@section style{

    <link href="~/Scripts/plugins/bootstrapValidate/dist/css/bootstrapValidator.css" rel="stylesheet" />

}

@section scripts{
    <script src="~/Scripts/plugins/bootstrapValidate/dist/js/bootstrapValidator.js"></script>
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.numeric.extensions.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/jquery.inputmask.min.js"></script>
    @*Script for bind Data KnockOut*@

    <script type="text/javascript">
        var url = document.URL;
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);

            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
    </script>

    <script type="text/javascript">
        var sUrlBack ='@Url.Action("PersonnelRequestList", "PersonnelRequest")';
        var objMaxLength = [
            { ctrlID: "txtNoofHead", ctrlType: "txt", MaxLength: 10 },
            { ctrlID: "txtjd", ctrlType: "area", MaxLength: 3000 },
            { ctrlID: "txtqx", ctrlType: "area", MaxLength: 3000 },
            { ctrlID: "txtDes", ctrlType: "area", MaxLength: 3000 }];
        var objModel = @Html.Raw(Json.Encode(Model));
        $(function () {
            //SetAutocom("txtSearch");
            SetTableApprove();
            $('div[id$=divReplaced]').collapse("hide");
            BindData(objModel);
            ko.applyBindings(viewModel);
            ValidateForm();
            SetMaxLeangthJS(objMaxLength);
            setDatePickerFromTo(GetInputByID("txtDatePeriod"), GetInputByID("txtDatePeriodTo"));
            $("input[id$=txtDatePeriod]").change(function () {
                $('#divContent').bootstrapValidator('revalidateField', GetElementName("txtDatePeriod", objControl.txtbox));
            }).keydown(function (e) {
                if (e.which == 8 || e.which == 46) {
                    $('#divContent').bootstrapValidator('updateStatus', GetElementName("txtDatePeriod", objControl.txtbox), "INVALID");

                }
            });
            InputMaskDecimal(GetInputByID("txtNoofHead"), 4, 0);
            SetAutocom("txtSearch");
            @if(Request.QueryString["bUrl"]!=null)
             {
            <text>
            sUrlBack +="?qryStr="+  '@Uri.EscapeDataString(Request.QueryString["bUrl"])';
            </text>
             }
            $("select[id$=ddlGroup]").on("change", function () {
                ActionddlGroup($(this).val());

            });
            $("select[id$=ddlEmploymentType]").on("change", function () {
                ActionddlEmploymentType($(this).val());

            });
            $("select[id$=ddlPosition]").on("change", function () {
                ActionddlPosition($(this).val());

            });
            $("select[id$=ddlTypeReq]").on("change", function () {
                ActionddlRequestType($(this).val());

            });
            $("input[id$=txtNoofHead]").on('change keyup paste', function () {
                var Val = $(this).val();
                if (Val = "") {
                    $('#divContent').bootstrapValidator('updateStatus', GetElementName("txtNoofHead", objControl.txtbox), "INVALID");
                }
                else {
                    $('#divContent').bootstrapValidator('revalidateField', GetElementName("txtNoofHead", objControl.txtbox));
                }
            });
        });
        function Save() {
            var IsPass = true;
            if (!CheckValidateBootstrap("divContent")) {
                IsPass = false;
                FocusValidateBootstrap("divContent");
            }
            if (IsPass) {

                Enumerable.From(objModel.lstApprove).Where(function (w) { return w.create_ddl == "Y" }).ForEach(function (ed) {
                    return ed.app_code = GetValDropdown("ddlApprover" + ed.nStep);
                });
                $("#PopupSave").modal();
            }

        }
        function GetData() {
            var lstData = ko.toJS(viewModel);
            if (lstData != null) {
                lstData.lstApprove_save = Enumerable.From(objModel.lstApprove).ToArray();
                lstData.user_no = GetValTextBox("txtMGID");
            }
            return lstData;
        }
        function SaveData (){
            var IsPass = true;
            if (!CheckValidateBootstrap("divContent")) {
                FocusValidateBootstrap("divContent");
                IsPass = false;
            }
            if (IsPass) {
                $("#PopupSave").modal('hide');
                BlockUI();
                var Param = GetData();

                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("CreatePersonnelRequest", "PersonnelRequest")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccessOk(DialogHeader.Info, "Submission Completed", 'func', function () {
                                var prodId = getParameterByName('bUrl');
                                if (prodId != "") {
                                    window.location.href = sUrlBack;
                                }
                                else {
                                    window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                                }
                            });
                        }
                        else if (respone.result.Status == SysProcess.Duplicate){
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                });
            }
        }
    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            //self.SubgroupHasOpt = ko.observable(false);
            //self.TypeReqHasOpt = ko.observable(false);
            //self.RankHasOpt = ko.observable(false);
            //self.PositionHasOpt = ko.observable(false);
            self.SubgroupHasOpt = ko.observable(true);
            self.TypeReqHasOpt = ko.observable(true);
            self.RankHasOpt = ko.observable(true);
            self.PositionHasOpt = ko.observable(true);

            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh
                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value
                    });
                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
          //self.lstSubGroup = ko.observableArray([]);
            //if (objModel.lstSubGroup != null && objModel.lstSubGroup.length > 0) {
            //    self.SubgroupHasOpt = ko.observable(true);
            //}
            //if (objModel.lstTypeReq != null && objModel.lstTypeReq.length > 0) {
            //    self.TypeReqHasOpt = ko.observable(true);
            //}
            //if (objModel.lstrank != null && objModel.lstrank.length > 0) {
            //    self.RankHasOpt = ko.observable(true);
            //}
            //if (objModel.lstPosition != null && objModel.lstPosition.length > 0) {
            //    self.PositionHasOpt = ko.observable(true);
            //}
        }
        function BindData(value) {
            if (viewModel.Id == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
                //$("input[id*=rdlTIF][value='" + value.TIF_type + "']").iCheck('check');
                if (objModel.lstApprove != undefined && objModel.lstApprove != null && objModel.lstApprove.length > 0) {
                    $('#gvwDataApprove').DataTable().clear().draw();
                    $('#gvwDataApprove').dataTable().fnAddData(objModel.lstApprove);
                    $('#gvwDataApprove').dataTable().fnDraw();

                    setTimeout(function () {
                        $('#gvwDataApprove').DataTable().columns.adjust().draw();
                        $('#gvwDataApprove').DataTable().columns.adjust().responsive.recalc();
                    }, 500);
                }
                else {
                    $('#gvwDataApprove').DataTable().clear().draw();
                    $('#gvwDataApprove').dataTable().fnDraw();
                    $('div[id$=divTable]').collapse("hide");
                }
            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);
                //$("input[id*=rdlTIF][value='" + value.TIF_type + "']").iCheck('check');
            }
        }
        //function for validate form
        function ValidateForm() {
            var objValidatePopUp = {};
            //objValidatePopUp[GetElementName("txtRefNo", objControl.txtbox)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("txtDatePeriod", objControl.txtbox)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("txtNoofHead", objControl.txtbox)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("ddlGroup", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("ddlRank", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("ddlPosition", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("ddlEmploymentType", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("ddlTypeReq", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");

            BindValidateBootstrap("divContent", objValidatePopUp);
        }
        function UnValidateForGroup() {
           $('#divContent').bootstrapValidator('updateStatus', GetElementName("ddlRank", objControl.dropdown), "NOT_VALIDATED");
          $('#divContent').bootstrapValidator('updateStatus', GetElementName("ddlPosition", objControl.dropdown), "NOT_VALIDATED");

        }
        function UnValidateForEmployment() {
           $('#divContent').bootstrapValidator('updateStatus', GetElementName("ddlTypeReq", objControl.dropdown), "NOT_VALIDATED");
        }
        function Cancel() {
            window.location.href = sUrlBack;
        }
        function ClearAuto(vName, vGroup, vPosition, vID) {
            GetInputByID("txtName").val(vName);
            GetInputByID("txtgroup").val(vGroup);
            GetInputByID("txtposition").val(vPosition);
            GetInputByID("txtMGID").val(vID);
        }


        function SetAutocom(txtTarget) {
                        $("input[id$=" + txtTarget + "]").on("keyup", function () {
                            ClearAuto("", "", "", "");
                        });
                        $("input[id$=" + txtTarget + "]").autocomplete({
                            //disabled: true,
                            source: function (request, response) {
                                $.ajax({
                                    global: false,  // <-- this is the key!
                                    dataType: AjaxCall.dataType,
                                    type: AjaxCall.type,
                                    contentType: AjaxCall.contentType,
                                    url: '@Url.Action("UserAutoCompleteAllForPR", "HCMMasterData")',
                        data: JSON.stringify({ SearchItem: request.term }),
                        success: function (data) {
                            UnblockUI();
                            response($.map(data, function (item) {
                                return {
                                    value: item.id,
                                    label: item.id + " : " + item.user_name ,
                                    user_id: item.user_id,
                                    user_no: item.id,
                                    user_name: item.user_name,
                                    unit_name: item.unit_name,
                                    user_position: item.user_position,
                                }
                            }));
                        }
                    });
        },
                        minLength: 1,
                        select: function (event, ui) {
                            ClearAuto(ui.item.user_name, ui.item.unit_name, ui.item.user_position, ui.item.user_no);
                        }});
        }
    </script>
    <script>

        function ActionddlGroup(val) {

            var Param = val;
            if (Param != "") {
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("GetGroupDetail", "PersonnelRequest")',
                    data: JSON.stringify({ SearchItem: Param }),
                    success: function (respone) {

                        if (respone != undefined) {
                            var newList = ko.toJS(viewModel);
                            if (newList.Id != undefined) {
                                newList.sub_group_id = respone.sub_group_id + '';
                                newList.rank_id = respone.rank_id + '';
                                newList.position_id = respone.position_id + '';
                                newList.FY_plan = respone.FY_plan + '';
                                newList.cur_headcount = respone.cur_headcount + '';

                                newList.lstSubGroup = respone.lstSubGroup;
                                newList.lstrank = respone.lstrank;
                                newList.lstPosition = respone.lstPosition;
                                newList.job_descriptions = '';
                                newList.qualification_experience = '';
                                newList.remark_group_approve = respone.remark_group_approve;
                                BindData(newList);
                            }
                            if (respone.lstApprove != undefined && respone.lstApprove != null && objModel.lstApprove.length > 0) {
                                $('#gvwDataApprove').DataTable().clear().draw();
                                $('#gvwDataApprove').dataTable().fnAddData(respone.lstApprove);
                                $('#gvwDataApprove').dataTable().fnDraw();
                            }
                            else {
                                $('#gvwDataApprove').DataTable().clear().draw();
                                $('#gvwDataApprove').dataTable().fnDraw();
                                $('div[id$=divTable]').collapse("hide");
                            }
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        $('#gvwDataApprove').DataTable().columns.adjust().draw();
                        $('#gvwDataApprove').DataTable().columns.adjust().responsive.recalc();
                        UnblockUI();
                        UnValidateForGroup();
                    }
                });
            } else {
                var newList = ko.toJS(viewModel);
                if (newList.Id != undefined) {
                    newList.sub_group_id =  '';
                    newList.rank_id ='';
                    newList.position_id = '';
                    newList.FY_plan ='0 person(s)';
                    newList.cur_headcount ='0 person(s)';
                    newList.lstSubGroup =[{ id: "", name: " - Select - " }];
                    newList.lstrank = [{ id: "", name: " - Select - " }];
                    newList.lstPosition = [{ id: "", name: " - Select - " }];
                    newList.job_descriptions = '';
                    newList.qualification_experience = '';
                    newList.remark_group_approve = '';
                    BindData(newList);
                    UnValidateForGroup();
                }
                if (objModel.lstApprove != undefined && objModel.lstApprove != null && objModel.lstApprove.length > 0) {
                    $('#gvwDataApprove').DataTable().clear().draw();
                    $('#gvwDataApprove').dataTable().fnAddData(objModel.lstApprove);
                    $('#gvwDataApprove').dataTable().fnDraw();

                    setTimeout(function () {
                        $('#gvwDataApprove').DataTable().columns.adjust().draw();
                        $('#gvwDataApprove').DataTable().columns.adjust().responsive.recalc();
                    }, 500);
                }
                else {
                    $('#gvwDataApprove').DataTable().clear().draw();
                    $('#gvwDataApprove').dataTable().fnDraw();
                    $('div[id$=divTable]').collapse("hide");
                }
            }

        }
        function ActionddlEmploymentType(val) {
            var Param = val;
            if (Param != "") {
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("GetEmploymentType", "PersonnelRequest")',
                    data: JSON.stringify({ SearchItem: Param }),
                    success: function (respone) {

                        if (respone != undefined) {
                            var newList = ko.toJS(viewModel);
                            if (newList.Id != undefined) {
                                newList.request_type_id = respone.request_type_id + '';
                                newList.lstTypeReq = respone.lstTypeReq;
                                GetInputByID("txtSearch").val('');
                                $('div[id$=divReplaced]').collapse("hide");
                                $("input[id$=txtNoofHead]").prop('disabled', false);
                                newList.user_no = '';
                                newList.user_name = '';
                                newList.user_position = '';
                                newList.unit_name = '';

                                BindData(newList);

                            }

                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                        UnValidateForEmployment();
                    }
                });
            } else {
                var newList = ko.toJS(viewModel);
                if (newList.Id != undefined) {
                    newList.request_type_id = '';
                    newList.lstTypeReq = [{ id: "", name: " - Select - " }];
                    GetInputByID("txtSearch").val('');
                    $('div[id$=divReplaced]').collapse("hide");
                    $("input[id$=txtNoofHead]").prop('disabled', false);
                    newList.user_no = '';
                    newList.user_name = '';
                    newList.user_position = '';
                    newList.unit_name = '';
                    BindData(newList);
                    UnValidateForEmployment();
                }
            }

        }
          function ActionddlPosition(val) {
            var Param = val;
            if (Param != "") {
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("GetPosition", "PersonnelRequest")',
                    data: JSON.stringify({ SearchItem: Param }),
                    success: function (respone) {

                        if (respone != undefined) {
                            var newList = ko.toJS(viewModel);
                            if (newList.Id != undefined) {
                                newList.job_descriptions = respone.job_descriptions + '';
                                newList.qualification_experience = respone.qualification_experience + '';

                                BindData(newList);
                            }
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                });
            } else {
                var newList = ko.toJS(viewModel);
                if (newList.Id != undefined) {
                    newList.job_descriptions = '';
                    newList.qualification_experience = '';
                    BindData(newList);
                }
            }

        }
         function ActionddlRequestType(val) {
            var Param = val;
            if (Param != "") {
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("GetRequestType", "PersonnelRequest")',
                    data: JSON.stringify({ SearchItem: Param }),
                    success: function (respone) {

                        if (respone != undefined) {
                            var newList = ko.toJS(viewModel);
                            if (newList.Id != undefined) {
                                newList.replaced_user = respone.replaced_user + '';
                                if (respone.replaced_user + "" == "Y") {
                                    $('div[id$=divReplaced]').collapse("show");
                                    newList.no_of_head = '1';
                                    $('#divContent').bootstrapValidator('updateStatus', GetElementName("txtNoofHead", objControl.txtbox), "NOTINVALID");
                                    $("input[id$=txtNoofHead]").prop('disabled', true);
                                } else {
                                    GetInputByID("txtSearch").val('');
                                    $('div[id$=divReplaced]').collapse("hide");
                                    $("input[id$=txtNoofHead]").prop('disabled', false);
                                    newList.user_no =  '';
                                    newList.user_name ='';
                                    newList.user_position = '';
                                    newList.unit_name ='';

                                }

                                BindData(newList);
                            }
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                });
            } else {
                var newList = ko.toJS(viewModel);
                if (newList.Id != undefined) {
                    GetInputByID("txtSearch").val('');
                    $('div[id$=divReplaced]').collapse("hide");
                    $("input[id$=txtNoofHead]").prop('disabled', false);
                    newList.replaced_user = 'N';
                    newList.user_no = '';
                    newList.user_name = '';
                    newList.user_position = '';
                    newList.unit_name = '';
                    BindData(newList);
                }
            }

        }
    </script>
    <script type="text/javascript">
        function SetTableApprove() {
            var objHeadClRequest = [
                { "title": "", "width": "0%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "nStep", "visible": false },
                { "title": "", "width": "35%", "className": "dt-left-ctm", "data": "step_name", "searchable": false, "orderable": false },
                { "title": "Approver", "width": "45%", "className": "dt-left-ctm", "data": "create_ddl", "searchable": false, "orderable": false },
                //{ "title": "Approval Date", "width": "20%", "className": "dt-center-ctm", "data": "approve_date", "searchable": false, "orderable": false },
                //{ "title": "Remark", "width": "5%", "className": "dt-left-ctm", "data": "description", "searchable": false, "orderable": false },
            ];

            var objTableRe = {
                sTableID: "gvwDataApprove",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[0, "asc"]],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                columnDefs: [{
                    "targets": 2,
                    "render": function (data, type, row) {

                        if (data + "" == "Y") {

                            if (row.lstselect != null && row.lstselect != undefined && row.lstselect.length > 0) {
                                return CreatSelect("ddlApprover" + row.nStep, JSON.stringify(row.lstselect), row.default_value, '');
                            }
                            else {
                                return CreatSelect("ddlApprover" + row.nStep, JSON.stringify([{ value: "", text: " - Select - " }]), '');
                            }

                        }
                        else {
                            return row.app_name;
                        }
                    }
                }
                ],
                fixedHeader: {
                    header: false,
                    footer: false
                }

            };

            var table = CreatTableJS(objTableRe);

        }
    </script>
}