@{
    ViewBag.Title = "HCM | View Export Candidate";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}
<section class="content-header">
    <h1>
        Export Candidate
    </h1>
</section>
<section class="content">
    <form class="form-horizontal">
        <div class="row">
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Candidate List </h3>
                    </div>
                    <!-- /.box-header -->
                    <!-- form start -->


                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-12">
                                @*<button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('pdf');"><img src="~/Image/filetype_pdf.png" alt="" height="30"></button>*@
                                @*<button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('xlxs');"><img src="~/Image/filetype_xls.png" alt="" height="30"></button>*@
                                @*<button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcelByID(2,'xlxs');"><img src="~/Image/filetype_xls.png" alt="" height="30"></button>*@
                                <button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('xlxs');"><img src="~/Image/filetype_xls.png" alt="" height="30"></button>

                            </div>
                        </div>


                        <br />
                        <br />
                        <div class="row" id="divTable">

                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover display" id="gvwData">
                                        <thead>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
            <input type="hidden" id="txtSess" name="txtSess" class="form-control" data-bind='value: session' />
        </div>

    </form>
</section>

@section style{
    @*<link href="~/Scripts/plugins/DataTables2/FixedColumns-3.2.2/css/fixedColumns.bootstrap.css" rel="stylesheet" />*@
    <style>
        .dt-HeadGr-ctm {
            background-color: #2952a3;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-total-ctm {
            background-color: #36c61a;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-totalAll-ctm {
            background-color: rgb(255, 222, 35);
            color: rgb(0, 0, 0);
            vertical-align: middle;
        }

        table.dataTable {
            border-collapse: collapse;
            width: 100%;
        }
    </style>
}
@section scripts{
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/DataTables2/datetimeSort.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/dataTables.rowGroup.min.js"></script>

    <script src="~/Scripts/plugins/DataTables2/jquery.dataTables.rowGrouping.js"></script>

    <script type="text/javascript">
    var objModelVEC = @Html.Raw(Json.Encode(Model));
    $(function () {

        SetTable();

        BindData(objModelVEC);

    });

    function Search() {
        var lstSearch = ko.toJS(viewModel)
        return lstSearch;
    };

    function LoadData() {
        $('div[id$=divTable]').collapse("show");
        $('#gvwData').DataTable().columns.adjust().draw();
        var Param = Search();
        BlockUI();
        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadReportClassification", "rSubmited")',
            dataType: "json",
            data: { SearchItem: Param },
            success: function (response) {
                if (response.result.Status == SysProcess.SessionExpired) {1
                    PopupLogin('@Url.Action("Index", "Home")');
                }
                else {
                    var lstData = response.result.lstData;
                    if (lstData == undefined || lstData.length <= 0) {
                        $('div[id$=divTable]').collapse("show");
                        $('#gvwData').DataTable().clear().draw();
                        $('#gvwData').dataTable().fnDraw();
                        $('#gvwData').DataTable().columns.adjust().draw();
                    }
                    else {
                        $('div[id$=divTable]').collapse("show");
                        $('#gvwData').DataTable().clear().draw();
                        $('#gvwData').dataTable().fnAddData(lstData);
                        $('#gvwData').dataTable().fnDraw();
                        $('#gvwData').DataTable().columns.adjust().draw();
                    }
                }
            },
            complete: function (jqXHR, status) {//finaly
                $('#gvwData').DataTable().columns.adjust().draw();
                $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                UnblockUI();
            }
        });
    }

    function SetTable() {


        var objHeadClRequest = [
            { "title": "Prefix", "width": "100px", "className": "dt-center-ctm", "data": "Prefix" },
            { "title": "First Name", "width": "100px", "className": "dt-center-ctm", "data": "First_Name" },
            { "title": "Last Name", "width": "100px", "className": "dt-center-ctm", "data": "Last_Name" },
            { "title": "Nickname", "width": "100px", "className": "dt-center-ctm", "data": "Nickname" },
            { "title": "Alternative_Name_TH", "width": "100px", "className": "dt-center-ctm", "data": "Alternative_Name_TH" },
            { "title": "Gender", "width": "100px", "className": "dt-center-ctm", "data": "Gender" },
            { "title": "Date_of_Birth", "width": "100px", "className": "dt-center-ctm", "data": "Date_of_Birth" },
            { "title": "Birthplace", "width": "100px", "className": "dt-center-ctm", "data": "Birthplace" },
            { "title": "Country_Of_Birth", "width": "100px", "className": "dt-center-ctm", "data": "Country_of_Birth" },
            { "title": "Marital_Status", "width": "100px", "className": "dt-center-ctm", "data": "Marital_Status" },
            { "title": "Nationality", "width": "100px", "className": "dt-center-ctm", "data": "Nationality" },
        ];

        var objTableRe = {
            sTableID: "gvwData",
            nDis: [],
            sProperty: "<'top col-md-6'l>rt<'bottom col-md-6'fi><'bottom col-md-6 text-right'p><'clear'>",//length pangging
            objHeadCl: objHeadClRequest,//Table Headder
            objDataSet: [], //dataset
            nHeadFix: 2,// fix clr
            EmptyTable: EmptyTable,
            order: [[0, "desc"]],
            //scrollX: true,
            //scrollY: true,
            objBeforeClRender: false,
            //lengthMN:[[15, 100, 150, -1], [15, 100, 150, "All"]],
            rowGroup: {
                enable: false
            },
            fixedHeader: {
                header: true,

            },
            //fixedColumns:   {
            //    leftColumns: 2
            //    //Columns:true,
            //}

        };

        var table = CreatTableJS(objTableRe);

    }

    </script>


    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value

                    });

                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }

        function BindData(value) {
            if (viewModel.code == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);
            }

            if (objModelVEC.lstData != undefined && objModelVEC.lstData != null) {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnAddData(objModelVEC.lstData);
                $('#gvwData').dataTable().fnDraw();

                setTimeout(function () {
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                }, 500);
            }
            else {
                $('div[id$=divTable]').collapse("hide");
            }

        }



        $(function () {
            $(window).bind('beforeunload', function () {

                var aSession = [$('input[id$=txtSess]').val()];

                //var sValHdf = $('input[id$=hfdSess]').val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ClearSession", "Base")',
                    cache: false,
                    dataType: "html",
                    data: {
                        sVal: encodeURIComponent(aSession)
                    },
                    complete: function (jqXHR, status) {//finaly
                    }
                });
            });
        });


    // [ ExpViewExportCandidateByID(int candidateID, string sMode)]
    function LoadExcelByID(candidate_id,Val)
    {
        //candidate_id = 2;

        if(viewModel.session != undefined)
        {
            var sVal =  ko.toJS(viewModel.session);
            BlockUI();

            window.open('@Url.Action("ExpViewExportCandidateByID", "rExportCandidate")?candidateID=' + candidate_id +'&sMode='+Val, '_blank');

            setTimeout(function () { UnblockUI(); }, 500);
        }
        else {
            DialogWarning(DialogHeader.Warning,"Error please try again.");
        }
    }




        function LoadExcel(Val)
        {


            if(viewModel.session != undefined)
            {
                var sVal =  ko.toJS(viewModel.session);
                BlockUI();
                window.open('@Url.Action("ExpViewExportCandidate", "rExportCandidate")?qryStr=' + sVal +'&sMode='+Val, '_blank');
                setTimeout(function () { UnblockUI(); }, 500);
            }
            else {
                DialogWarning(DialogHeader.Warning,"Error please try again.");
            }
        }


    </script>


}
