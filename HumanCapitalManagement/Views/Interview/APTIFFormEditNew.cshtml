@model HumanCapitalManagement.ViewModel.MainVM.vInterview_obj_save
@{
    ViewBag.Title = "HCM | Second Evaluator: Confirm / Edit Interview Result (TIF)";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}

<section class="content-header">
    <h1>
        Second Evaluator: Confirm / Edit Interview Result (TIF) 
    </h1>
</section>
<!-- Main content -->
<section class="content">
    <form class="form-horizontal">
        <div id="divContent">
            <div class="row">

                <div class="col-md-12">
                    <div class="row">
                        <div class="col-lg-12">
                            <!-- general form elements -->
                            <div class="box box-solid box-ctmPR">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Personnel Request Form Detail</h3>
                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- /.box-header -->
                                <!-- form start -->
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Group</label>
                                                <div class="col-md-8">

                                                    <input type="text" class="form-control" data-bind='value: group_id' disabled />
                                                </div>
                                            </div>
                                        </div>
                                        @*<div class="col-md-6">
                                                <div class="form-group form-group-sm">
                                                    <label class="col-md-4 control-label text-right nomallabel">SubGroup</label>
                                                    <div class="col-md-8">
                                                        <input type="text" class="form-control" data-bind='value: sub_group_id' disabled />
                                                    </div>
                                                </div>
                                            </div>*@
                                        <div class="col-md-6">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Position</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" data-bind='value: position_id' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Candidate Name</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" data-bind='value: candidate_name' disabled />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Rank fr. PR</label>
                                                <div class="col-md-8">
                                                    <input type="text" class="form-control" data-bind='value: rank_id' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-lg-12">
                    <div class="box box-solid box-ctmPR4">
                        <div class="box-header with-border">
                            <h3 class="box-title">Technical Interview Form</h3>
                            <div class="box-tools pull-right">
                                <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                    <i class="fa fa-refresh"></i>
                                </button>
                            </div>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        @if (!string.IsNullOrEmpty(Model.TIF_type) && (Model.TIF_type == "M" || Model.TIF_type == "N"))
                        {
                            <div class="box-body ">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="callout callout-warning ">
                                            <div>
                                                <h4>
                                                    <u>Rating Criteria</u>
                                                </h4>
                                            </div>
                                            <p>
                                                <div id="ratename1">
                                                    <strong>Excellent</strong> : <em>Clearly surpasses departmental quality standards</em><br />
                                                </div>
                                                <div id="ratename2">
                                                    <strong>Good</strong> : <em>Very good and above the acceptable level but not be able to reach the excellent point</em><br />
                                                </div>
                                                <div id="ratename3">
                                                    <strong>Fair</strong> : <em>Barely meets the minimum standards</em><br />
                                                </div>
                                                <div id="ratename4">
                                                    <strong>Poor</strong> : <em>Does not meet minimum requirements</em><br />
                                                </div>

                                                <div id="ratename5" style="visibility:collapse in;">
                                                    <strong> </strong> <em></em><br />
                                                </div>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="table-responsive">
                                            <table class="table table-striped table-bordered table-hover display" id="gvwData" width="100%">
                                                <thead>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <hr />
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group form-group-sm">
                                            @*<label class="col-md-2 control-label  text-right require ">Result</label>*@
                                            <div class="col-md-8 col-md-offset-2" style=" border:2px solid #f36b11; padding-top: 5px;padding-bottom: 5px;">
                                                <input type="checkbox" id="chkStatus" name="chkStatus" class="flat-green" value="Y" />We (interviewers) recognize and  acknowledge that the confidential information from candidate's previous/current employer will not be disclosed to us during the interview session. We have informed the candidate regarding this matter accordingly.

                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group form-group-sm">
                                            <label class="col-md-2 control-label  text-right nomallabel ">Additional Comments</label>
                                            <div class="col-md-10">
                                                <textarea rows="3" id="txtcomment" cols="50" class="form-control" data-bind='value: comment'
                                                          disabled></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group form-group-sm">
                                            <label class="col-md-4 control-label text-right require">Recommended Rank</label>
                                            <div class="col-md-8">
                                                <select id="ddlRank" name="ddlRank" class="form-control" data-bind="options: lstrank, optionsText: 'name', optionsValue: 'id',
                                                   value: recommended_rank_id,
                                                   valueAllowUnset: true" disabled></select>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group form-group-sm">
                                            <label class="col-md-4 control-label  text-right require ">Interview Result</label>
                                            <div class="col-md-8">
                                                @{ Html.RenderAction("CreateddlTIFStatus", "HCMMasterData", new
                                                    {
                                                        id = "ddlTIFStatus",
                                                        databind = "tif_status_id",
                                                        disable = true,
                                                    });}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @*<div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label  text-right require ">Approval</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtSearch" name="txtSearch" class="form-control" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Approval Name</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtName" name="txtName" class="form-control" data-bind='value: user_name' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Group</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtgroup" name="txtgroup" class="form-control" data-bind='value: unit_name' disabled />
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group form-group-sm">
                                                <label class="col-md-4 control-label text-right nomallabel">Rank</label>
                                                <div class="col-md-8">
                                                    <input type="text" id="txtposition" name="txtposition" class="form-control" data-bind='value: user_rank' disabled />
                                                </div>
                                            </div>
                                        </div>
                                    </div>*@
                                <div class="row">
                                    <div class="col-lg-6 col-lg-offset-3">
                                        <div class="box box-solid box-ctmPR4">
                                            <div class="box-header with-border">
                                                <h3 class="box-title">TIF Confirmation Process</h3>
                                            </div>
                                            <!-- /.box-header -->
                                            <!-- form start -->
                                            <div class="box-body  no-padding no-pad-bot no-pad-top">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="table-responsive">
                                                            <table class="table table-striped table-bordered table-hover display" id="gvwDataApprove" width="100%">
                                                                <thead>
                                                                </thead>
                                                                <tbody></tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <!-- /.box-body -->

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="box-footer text-center">
                                @if (Model.approve_status + "" != "Y")
                                {
                                    <button type="button" id="btnEdit" class="btn btn-primary" onclick="Edit();">Edit</button>
                                    <button type="button" id="btnEditConfirm" class="btn btn-success hide" onclick="Save('Y');">Edit & Confirm</button>
                                    <button type="button" id="btnConfirm" class="btn btn-success" onclick="Approve();">Confirm</button>
                                    <button type="button" class="btn btn-danger" onclick="RollbackData();">Rollback</button>
                                }
                                <button type="button" class="btn btn-warning" onclick="Cancel();">Back</button>
                            </div>
                        }
                        else
                        {
                            <div class="box-body ">
                                <div class="error-page">
                                    <h2 class="headline text-red"><i class="fa fa-warning"></i></h2>
                                    <div class="error-content">
                                        <h3><i class="fa fa-warning text-red"></i> Missing! Type of TIF form</h3>
                                        <p>
                                            Pleace contact, @Model.null_tif_contact.
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <div class="box-footer text-center">
                                <button type="button" class="btn btn-warning" onclick="Cancel();">Back</button>
                            </div>
                        }

                        <!-- /.box-body -->

                    </div>
                </div>
            </div>
        </div>
    </form>
    @*<%--[modal] before Add--%>*@
    <div id="PopupSave" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to submit?</label>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveData()" class="btn btn-primary">OK</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div id="PopupApprove" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to submit?</label>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="ApproveData()" class="btn btn-primary">OK</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <div id="PopupRollback" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #ff6a00;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Rollback confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to Rollback Approved Data?</label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group form-group-sm" style="margin-top:5px;">
                                <label class="col-md-4 control-label text-right require">Remark</label>
                                <div class="col-md-8">
                                    <textarea rows="3" id="txtDesrevise" cols="50" class="form-control" data-bind="value: rejeck , valueUpdate: 'afterkeydown'"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="Rollback()" class="btn btn-primary">OK</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</section>
@section style{
    <link href="~/Scripts/plugins/bootstrapValidate/dist/css/bootstrapValidator.css" rel="stylesheet" />
    <link href="~/Scripts/plugins/bootstrap-select/css/bootstrap-select.css" rel="stylesheet" />
    <style>

        .dt-HeadGr-ctm {
            background-color: #2952a3;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-total-ctm {
            background-color: #36c61a;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-totalAll-ctm {
            background-color: rgb(255, 222, 35);
            color: rgb(0, 0, 0);
            vertical-align: middle;
        }

        table.dataTable {
            border-collapse: collapse;
            width: 100%;
        }

        .Mass-select {
            width: 250px;
        }

        .table-responsive-custom > .dataTables_scrollBody {
            overflow-y: visible !important;
            overflow-x: visible !important;
            overflow: hidden;
        }
    </style>

}


@section scripts{
    <script src="~/Scripts/plugins/bootstrapValidate/dist/js/bootstrapValidator.js"></script>
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.numeric.extensions.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/jquery.inputmask.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/dataTables.rowGroup.min.js"></script>
    @*Script for bind Data KnockOut*@

    <script type="text/javascript">
        var url = document.URL;


        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);

            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        var objModel = @Html.Raw(Json.Encode(Model));
        
       var sUrlBack = '@Url.Action("APTIFFormList", "Interview")';
       $(function () {
        @if (Request.QueryString["bUrl"] != null)
           {
       <text>
           sUrlBack += "?qryStr=" + '@Uri.EscapeDataString(Request.QueryString["bUrl"])';
       </text>
       }

        });

    </script>

    <script type="text/javascript">
        var objMaxLength = [
            { ctrlID: "txtcomment", ctrlType: "area", MaxLength: 1000 }];
        var save_Status = "";
        $(function () {
            SetTableCandidate();
            SetTableApprove();
            BindData(objModel);
            ko.applyBindings(viewModel);
            ValidateForm();
            getRate();
            if (GetInputByID("txtSearch") != undefined) {
                // SetAutocom("txtSearch");
            }
            SetMaxLeangthJS(objMaxLength);
        });
                    //Rating
                    var R1 = null;
                   
                    //Question
                    var qCore1 = null;
                    var qCore2 = null;
                    var qCore3 = null;
                    var qCore4 = null;
                    var qCore5 = null;
                    var qCore6 = null;
                    var qCore7 = null;
                    var qCore8 = null;
                    var qCore9 = null;

                    //Group Core

                    //Result Group
                    var calResult1 = null;
                    var calResult2 = null;
                    var calResult3 = null;
                    
                    var resultR = null;


    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh
                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value
                    });
                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };

        }
        function BindData(value) {
            if (viewModel.Id == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
                $("input[id*=chkStatus][value='" + value.confidentiality_agreement + "']").iCheck('check');
                if (value.TIF_type + "" == "N" || value.TIF_type + "" == "M") {

                    if (objModel.objtifform != undefined && objModel.objtifform != null && objModel.objtifform.lstQuestion != undefined && objModel.objtifform.lstQuestion != null && objModel.objtifform.lstQuestion.length > 0) {
                        $('#gvwData').DataTable().clear().draw();
                        $('#gvwData').dataTable().fnAddData(objModel.objtifform.lstQuestion);
                        $('#gvwData').dataTable().fnDraw();
                        goSetval(objModel.objtifform.lstQuestion);
                        setTimeout(function () {
                            $('#gvwData').DataTable().columns.adjust().draw();
                            $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                        }, 500);
                    }
                    else {
                        $('#gvwData').DataTable().clear().draw();
                        $('#gvwData').dataTable().fnDraw();
                        $('div[id$=divTable]').collapse("hide");
                    }
                    if (objModel.lstApprove != undefined && objModel.lstApprove != null && objModel.lstApprove.length > 0) {
                        $('#gvwDataApprove').DataTable().clear().draw();
                        $('#gvwDataApprove').dataTable().fnAddData(objModel.lstApprove);
                        $('#gvwDataApprove').dataTable().fnDraw();

                        setTimeout(function () {
                            $('#gvwDataApprove').DataTable().columns.adjust().draw();
                            $('#gvwDataApprove').DataTable().columns.adjust().responsive.recalc();
                        }, 500);
                    }
                    else {
                        $('#gvwDataApprove').DataTable().clear().draw();
                        $('#gvwDataApprove').dataTable().fnDraw();
                        $('div[id$=divTable]').collapse("hide");
                    }
                }
            }
            else {
                $("input[id*=chkStatus][value='" + value.confidentiality_agreement + "']").iCheck('check');
                ko.mapping.fromJS(value, {}, viewModel);
            }

        }
        function Cancel() {
            window.location.href = sUrlBack;
        }


    </script>
    <script type="text/javascript">
        function SetTableCandidate() {
            var objHeadClRequest = [
                { "title": "", "width": "0%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "nSeq", "visible": false },
                { "title": "", "width": "0%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "id", "visible": false },
                { "title": "Features used in evaluation", "width": "27%", "className": "dt-left-ctm", "searchable": false, "orderable": false, "data": "question", },
                { "title": "Rating", "width": "18%", "className": "dt-left-ctm", "data": "rating", "searchable": false, "orderable": false },
                { "title": "Reason Supporting the Given Rating", "width": "55%", "className": "dt-left-ctm", "data": "remark", "searchable": false, "orderable": false },
            ];

            var objTableRe = {
                sTableID: "gvwData",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[0, "asc"]],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                columnDefs: [{
                    "targets": 2,
                    "render": function (data, type, row) {
                        return (data + "").replace("(", "<br/>(");
                    }
                },
                {
                    "targets": 3,
                    "render": function (data, type, row) {
                        var sHtml = "";
                        if (objModel.objtifform.lstRating != undefined && objModel.objtifform.lstRating != null && objModel.objtifform.lstRating.length > 0) {
                            sHtml = CreatSelectMass("ddlRating" + row.id, JSON.stringify(objModel.objtifform.lstRating), data, "Y");
                            //sHtml = CreatSelect("ddlRating" + row.id, JSON.stringify(objModel.objtifform.lstRating), data, objModel.approve_status + "");
                        }
                        return sHtml;
                    },
                },
                {
                    "targets": 4,
                    "render": function (data, type, row) {
                        return CreateTextAreaInt("txtRemark" + row.id, 1000, data, "Y");
                        //return CreateTextAreaInt("txtRemark" + row.id, 1000, data, objModel.approve_status + "");
                    }
                }
                ],
                fixedHeader: {
                    header: false,
                    footer: false
                },
                rowGroup: {
                    'startRender': function (rows, header) {
                        return $('<tr/>')
                            .append('<td class="dt-HeadGr-ctm dt-left-ctm" style="height: 25px;font-size: 14px;" colspan="5">' + header + '</td>');
                    },
                    'endRender': null,
                    'dataSrc': 'header'
                },

            };

            var table = CreatTableJS(objTableRe);

        }

        function CreatSelectMass(sID, objJson, sSelectValue, sDisable,rowid) {
                        $("select[id$=" + sID + "]").unbind();
                        var sDis = "";
                        if (sDisable != undefined && sDisable == "Y") {
                            sDis = "disabled";
                        }
                        var sHtml = "<select id='" + sID + "' class='form-control input-sm ' style='width:100%;' " + sDis + " >";
                        if (objJson != undefined) {
                            if (sSelectValue != undefined && sSelectValue != null && sSelectValue != "") {
                                $.each(JSON.parse(objJson), function (i, item) {
                                    var optionhtml = "";
                                    if (item.value + "" == sSelectValue + "") {
                                        optionhtml = '<option value="' +
                                            item.value + '" selected="selected">' + item.text + '</option>';
                                        sHtml += optionhtml;
                                    }
                                    else {
                                        optionhtml = '<option value="' +
                                            item.value + '">' + item.text + '</option>';
                                        sHtml += optionhtml;
                                    }
                                });
                            }
                            else {
                                var optionhtml = "";
                                $.each(JSON.parse(objJson), function (i, item) {
                                    optionhtml = '<option value="' +
                                        item.value + '">' + item.text + '</option>';
                                    sHtml += optionhtml;
                                });
                            }
                        }
                        sHtml += "</select>";

                        //Set Event dropdows
                        $("select[id$=" + sID + "]").bind("change", function () {
                            $("select[id$=" + sID + "]").val($(this).val());
                        });
                        $("select[id$=" + sID + "]").on("change", function () {
                            ddlCal($(this).val(), sID);
                        });

                        return sHtml;
                    }

         function goSetval(lstData) {
                        if (lstData.length > 0 && lstData != undefined) {
                            var qi = lstData;
                            Enumerable.From(qi).ForEach(function (value) {
                                
                                switch (value.id) {
                                    
                                    case ("65"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore1 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            qCore1 = 0;
                                            ddlCal(value.rating, value.id);
                                        }

                                        break;
                                    }
                                    case ("66"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore2 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            return qCore2 = 0;
                                            ddlCal(value.rating, value.id);
                                        }
                                        break;
                                    }
                                    case ("67"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore3 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            qCore3 = 0;
                                            ddlCal(value.rating, value.id);
                                        }
                                        break;
                                    }
                                    case ("68"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore4 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            qCore4 = 0;
                                            ddlCal(value.rating, value.id);
                                        }
                                        break;
                                    }
                                    case ("69"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore5 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            qCore5 = 0;
                                            ddlCal(value.rating, value.id);
                                        }
                                        break;
                                    }
                                    case ("70"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore6 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            qCore6 = 0;
                                            ddlCal(value.rating, value.id);
                                        }
                                        break;
                                    }
                                    case ("71"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore7 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            qCore7 = 0;
                                            ddlCal(value.rating, value.id);
                                        }
                                        break;
                                    } case ("72"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore8 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            qCore8 = 0;
                                            ddlCal(value.rating, value.id);
                                        }
                                        break;
                                    } case ("73"): if (value.rating != null && value.rating != undefined) {
                                        if (value.rating == 5 || value.rating == 6 || value.rating == 7) {
                                            qcore9 = 1;
                                            ddlCal(value.rating, value.id);
                                        }
                                        else if (value.rating == 8 || value.rating == 9) {
                                            qCore9 = 0;
                                            ddlCal(value.rating, value.id);
                                        }
                                        break;
                                    }
                                }                                      
                            });
                        }
                        
                    }

        function ddlCal(val, sID) {
                        var ddlR = sID;
                        R1 = val;
                        switch (ddlR) {
                            case "ddlRating65":
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore1 = 1;
                                }
                                else if (R1 == 8 || R1 == 9 ) {
                                    qCore1 = 0;
                                }
                                break;
                            case "ddlRating66":
                                
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore2 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore2 = 0;
                                }
                                break;
                            case "ddlRating67":
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore3 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore3 = 0;
                                }
                                break;
                            case "ddlRating68":
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore4 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore4 = 0;
                                }
                                break;
                            case "ddlRating69":
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore5 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore5 = 0;
                                }
                                break;
                            case "ddlRating70":
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore6 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore6 = 0;
                                }
                                break;
                            case "ddlRating71":
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore7 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore7 = 0;
                                }
                                break;
                            case "ddlRating72":
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore8 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore8 = 0;
                                }
                                break;
                            case "ddlRating73":
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore9 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore9 = 0;
                                }
                                break;

                            //Get Ans
                            case ("65"):
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore1 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore1 = 0;
                                }
                                break;

                            case ("66"):

                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore2 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore2 = 0;
                                }
                                break;

                            case ("67"):
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore3 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore3 = 0;
                                }
                                break;

                            case ("68"):
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore4 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore4 = 0;
                                }
                                break;

                            case ("69"):
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore5 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore5 = 0;
                                }
                                break;

                            case ("70"):
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore6 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore6 = 0;
                                }
                                break;

                            case ("71"):
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore7 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore7 = 0;
                                }
                                break;

                            case ("72"):
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore8 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore8 = 0;
                                }
                                break;

                            case ("73"):
                                if (R1 == 5 || R1 == 6 || R1 == 7) {
                                    qCore9 = 1;
                                }
                                else if (R1 == 8 || R1 == 9) {
                                    qCore9 = 0;
                                }
                                break;
                                
                        }
                        CalResult();
                        
                    }

        function CalResult() {
                        if (qCore1 != null && qCore2 != null && qCore3 != null && qCore4 != null && qCore5 != null && qCore6 != null && qCore7 != null && qCore8 != null && qCore9 != null) {

                            calResult1 = qCore1 + qCore2 + qCore3;
                            calResult2 = qCore4 + qCore5 + qCore6;
                            calResult3 = qCore7 + qCore8 + qCore9;
                            if (calResult1 != null) {
                                if (calResult1 >= 2) {
                                    calResult1 = 1;
                                }
                                else if (calResult1 < 2) {
                                    calResult1 = 0;
                                }
                            }
                            if (calResult2 != null) {
                                if (calResult2 >= 2) {
                                    calResult2 = 1;
                                }
                                else if (calResult2 < 2) {
                                    calResult2 = 0;
                                }
                            }
                            if (calResult3 != null) {
                                if (calResult3 >= 2) {
                                    calResult3 = 1;
                                }
                                else if (calResult3 < 2) {
                                    calResult3 = 0;
                                }
                            }
                            resultR = calResult1 + calResult2 + calResult3;
                            if (resultR >= 2) {

                                //document.getElementById("ddlTIFStatus").disabled = false;
                                GetSelectByID("ddlTIFStatus").val("1");

                            }
                            else {
                                $("#ddlTIFStatus option[value = 0]").attr('selected', 'selected');
                                document.getElementById("ddlTIFStatus").disabled = true;
                                GetSelectByID("ddlTIFStatus").val("3");
                            }
                        }
                    }

        function CreateTextAreaInt(sID, sMaxlength, sValue, sDisable) {
            $("input[id$=" + sID + "]").unbind();
            var sDis = "";
            if (sDisable != undefined && sDisable == "Y") {
                sDis = "disabled";
            }
            var sSetValue = sValue != undefined && sValue != "" ? "value='" + sValue + "'" : "";
            var sMaxlength = sMaxlength != undefined && sMaxlength != "" ? "maxlength='" + sMaxlength + "'" : "";
            var sHtml = "<textarea rows='3' cols='50'  id='" + sID + "' name='" + sID + "' class='form-control' " + sMaxlength + " " + sSetValue + " style='width:100%;' " + sDis + "  >" + sValue + "</textarea>";

            return sHtml;
        }
        //function for validate form
        function ValidateForm() {
            var objValidatePopUp = {};
            objValidatePopUp[GetElementName("ddlTIFStatus", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("ddlRank", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
            BindValidateBootstrap("divContent", objValidatePopUp);
        }

    </script>
    <script type="text/javascript">
        function SetTableApprove() {
            var objHeadClRequest = [
                { "title": "Evaluator", "width": "10%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "nStep" },
                { "title": "Evaluator’s Name", "width": "35%", "className": "dt-left-ctm", "data": "app_name", "searchable": false, "orderable": false },
                { "title": "Confirmed Date", "width": "25%", "className": "dt-center-ctm", "data": "approve_date", "searchable": false, "orderable": false },
                { "title": "Status", "width": "20%", "className": "dt-center-ctm", "data": "app_code", "searchable": false, "orderable": false },
            ];

            var objTableRe = {
                sTableID: "gvwDataApprove",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[0, "asc"]],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                columnDefs: [{
                    "targets": 2,
                    "render": function (data, type, row) {

                        return data;
                    }
                }
                ],
                fixedHeader: {
                    header: false,
                    footer: false
                }

            };

            var table = CreatTableJS(objTableRe);

        }

        function getRate() {

            objModel.objtifform.lstRating.forEach((item) => {

                if (item.value == "5") {
                    $("div[id$=ratename1]").html("<strong>" + (item.text) + " " + "</strong>: <em>" + (item.detail) + "</em><br />");
                }
                if (item.value == "6") {
                    $("div[id$=ratename2]").html("<strong>" + (item.text) + " " + "</strong>: <em>" + (item.detail) + "</em><br />");
                }
                if (item.value == "7") {
                    $("div[id$=ratename3]").html("<strong>" + (item.text) + " " + "</strong>: <em>" + (item.detail) + "</em><br />");
                }
                if (item.value == "8") {
                    $("div[id$=ratename4]").html("<strong>" + (item.text) + " " + "</strong>: <em>" + (item.detail) + "</em><br />");
                }
                if (item.value == "9") {
                    $("div[id$=ratename5]").html("<strong>" + (item.text) + "" + "</strong>:  <em>" + (item.detail) + "</em><br />");
                    //$("div[id$=ratename5]").css("style=display:block;");
                    document.getElementById("ratename5").style.visibility = "visible";

                }
                if (item.value == "11") {
                    $("div[id$=ratename1]").html("<strong>" + (item.text) + " " + "</strong>: <em>" + (item.detail) + "</em><br />");
                }
                if (item.value == "12") {
                    $("div[id$=ratename2]").html("<strong>" + (item.text) + " " + "</strong>: <em>" + (item.detail) + "</em><br />");
                }
                if (item.value == "13") {
                    $("div[id$=ratename3]").html("<strong>" + (item.text) + " " + "</strong>: <em>" + (item.detail) + "</em><br />");
                }
                if (item.value == "14") {
                    $("div[id$=ratename4]").html("<strong>" + (item.text) + " " + "</strong>: <em>" + (item.detail) + "</em><br />");
                }
                if (item.value == "15") {
                    $("div[id$=ratename5]").html("<strong>" + (item.text) + "" + "</strong>:  <em>" + (item.detail) + "</em><br />");
                }

            })
        }
    </script>
}
@if (Model.approve_status + "" != "Y")
{
    @section scripts2{
        <script type="text/javascript">
          function Save(sVal) {
            var Acceptlst = [];
            var IsPass = true;
            if (!CheckValidateBootstrap("divContent")) {
                IsPass = false;
                FocusValidateBootstrap("divContent");
            }
            if (IsPass && sVal != undefined && sVal != "") {
                save_Status = sVal;
                //set value to rating
                Enumerable.From(objModel.objtifform.lstQuestion).ForEach(function (ed) {

                    return ed.rating = GetValDropdown("ddlRating" + ed.id);

                });

                //set value to remark
                Enumerable.From(objModel.objtifform.lstQuestion).ForEach(function (ed) {
                    return ed.remark = GetValTextArea("txtRemark" + ed.id);
                });
                Acceptlst = Enumerable.From(objModel.objtifform.lstQuestion).ToArray();
                ko.mapping.fromJS(Acceptlst, {}, viewModel.objtifform.lstQuestion);
                var $Accept = GetLabelByID("lblAccept");

                if (Acceptlst.length == 0) {
                    DialogWarning(DialogHeader.Warning, "Please select at least one item.");
                }
                else {

                    //check validate ref no
                    var lstRatingAws = Enumerable.From(objModel.objtifform.lstQuestion).Where(function (w) { return w.rating + "" == "" }).ToArray();
                    var lstRemarkAws = Enumerable.From(objModel.objtifform.lstQuestion).Where(function (w) { return w.remark + "" == "" }).ToArray();
                    if ((lstRatingAws.length > 0 || lstRemarkAws.length > 0) ) {
                        if (lstRatingAws.length > 0) {
                            var sfirst = Enumerable.From(lstRatingAws).FirstOrDefault();
                            DialogWarning(DialogHeader.Warning, "Please select rating. " + sfirst.header);
                            GetSelectByID("ddlRating" + sfirst.id).focus();
                            return false;
                        }
                        else if (lstRemarkAws.length > 0) {
                            var sfirst = Enumerable.From(lstRemarkAws).FirstOrDefault();
                            DialogWarning(DialogHeader.Warning, "Please input remark. " + sfirst.header);
                            GetTextareaByID("txtRemark" + sfirst.id).focus();
                            return false;
                        }
                    }
                    else  {
                        //check validate devit
                        if (Acceptlst.length > 0) {
                            //var AcceptNumber = Enumerable.From(Acceptlst).Sum(function (s) { return ConvertToIntNotnull(s.AMOUNT_AMT) });
                            var strReturnAccept = 'Do you want to save?';
                            $Accept.text(strReturnAccept);
                        }
                        else {
                            $Accept.text('Not specify.');
                        }
                        $("#PopupSave").modal();
                    }
                }
            }

            }

            function GetData() {
                var lstData = ko.toJS(viewModel);
                if (lstData != null) {
                    lstData.confidentiality_agreement = GetValueChkGroupSingelValue("chkStatus");;
                    lstData.approve_status = save_Status;
                }
                return lstData;
            }

         function SaveData() {
             var IsPass = true;
             $("#PopupSave").modal('hide');
             var Param = GetData();// ko.toJS(viewModel);
             if (IsPass && save_Status != "" && Param.confidentiality_agreement == "Y") {
                 BlockUI();
                 $.ajax({
                     dataType: AjaxCall.dataType,
                     type: AjaxCall.type,
                     contentType: AjaxCall.contentType,
                     url: '@Url.Action("ApproveTIFForm", "Interview")',
                     data: JSON.stringify({ ItemData: Param }),
                     success: function (respone) {
                         if (respone.result.Status == SysProcess.SessionExpired) {
                             PopupLogin('@Url.Action("Index", "Home")');
                         } else if (respone.result.Status == SysProcess.Success) {
                             DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {

                                 var prodId = getParameterByName('bUrl');
                                 if (prodId != "") {
                                     window.location.href = sUrlBack;
                                 }
                                 else {
                                     window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                                 }
                             });
                         }
                         else if (respone.result.Status == SysProcess.Duplicate) {
                             DialogWarning(DialogHeader.Warning, respone.result.Msg);
                         }
                         else {
                             DialogWarning(DialogHeader.Warning, respone.result.Msg);
                         }
                     },
                     error: AjaxCall.error,
                     complete: function (jqXHR, status) {//finaly
                         UnblockUI();
                         $("#PopupSave").modal('hide');
                     }
                 });
             }
             else {
                 DialogWarning(DialogHeader.Warning, "Interviewer (Evaluator) must “tick” the box for acknowledgement confidential information from candidate's previous/current employer will not be disclosed to us during the interview session.");
             }
            }
                 function SetAutocom(txtTarget) {
                        $("input[id$=" + txtTarget + "]").on("keyup", function () {
                            var newList = ko.toJS(viewModel);
                            if (newList.Id != undefined) {
                                newList.user_name = '';
                                newList.unit_name = '';
                                newList.user_id = '';
                                newList.user_rank = '';
                                BindData(newList);
                            }
                        });
                        $("input[id$=" + txtTarget + "]").autocomplete({
                            //disabled: true,
                            source: function (request, response) {
                                $.ajax({
                                    global: false,  // <-- this is the key!
                                    dataType: AjaxCall.dataType,
                                    type: AjaxCall.type,
                                    contentType: AjaxCall.contentType,
                                    url: '@Url.Action("UserAutoCompleteAll", "HCMMasterData")',
                        data: JSON.stringify({ SearchItem: request.term }),
                        success: function (data) {
                            UnblockUI();
                            response($.map(data, function (item) {
                                return {
                                    value: item.id,
                                    label: item.id + " : " + item.user_name ,
                                    user_id: item.user_id,
                                    user_no: item.id,
                                    user_name: item.user_name,
                                    unit_name: item.unit_name,
                                    user_rank: item.user_rank,
                                }
                            }));
                        }
                    });
                },
                        minLength: 1,
                        select: function (event, ui) {
                        var newList = ko.toJS(viewModel);
                        if (newList.Id != undefined) {
                            newList.user_name = ui.item.user_name;
                            newList.unit_name = ui.item.unit_name;
                            newList.user_id = ui.item.user_id;
                            newList.user_no = ui.item.user_no;
                            newList.user_rank = ui.item.user_rank;
                            BindData(newList);
                        }

                        }

                        });
            }

            function RollbackData() {
                $("#PopupRollback").modal();
            }

            function Approve() {
                $("#PopupApprove").modal();
            }

            function Rollback() {
                var IsPass = true;
                if (IsPass) {

                    BlockUI();
                    var Param = ko.toJS(viewModel);
                    $.ajax({
                        dataType: AjaxCall.dataType,
                        type: AjaxCall.type,
                        contentType: AjaxCall.contentType,
                        url: '@Url.Action("RollBackTIFForm", "Interview")',
                        data: JSON.stringify({ ItemData: Param }),
                        success: function (respone) {
                            if (respone.result.Status == SysProcess.SessionExpired) {
                                PopupLogin('@Url.Action("Index", "Home")');
                            } else if (respone.result.Status == SysProcess.Success) {
                                DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {
                                    var prodId = getParameterByName('bUrl');
                                    if (prodId != "") {
                                        window.location.href = sUrlBack;
                                    }
                                    else {
                                        window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                                    }
                                });
                            }
                            else if (respone.result.Status == SysProcess.Duplicate) {
                                DialogWarning(DialogHeader.Warning, respone.result.Msg);
                            }
                            else {
                                DialogWarning(DialogHeader.Warning, respone.result.Msg);
                            }
                        },
                        error: AjaxCall.error,
                        complete: function (jqXHR, status) {//finaly
                            UnblockUI();
                            $("#PopupRollback").modal('hide');
                        }
                    });
                }
            }
            function ApproveData() {
                var IsPass = true;
                if (IsPass) {

                    BlockUI();
                    var Param = ko.toJS(viewModel);
                    $.ajax({
                        dataType: AjaxCall.dataType,
                        type: AjaxCall.type,
                        contentType: AjaxCall.contentType,
                        url: '@Url.Action("ApproveData", "Interview")',
                        data: JSON.stringify({ ItemData: Param }),
                        success: function (respone) {
                            if (respone.result.Status == SysProcess.SessionExpired) {
                                PopupLogin('@Url.Action("Index", "Home")');
                            } else if (respone.result.Status == SysProcess.Success) {
                                DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {
                                    var prodId = getParameterByName('bUrl');
                                    if (prodId != "") {
                                        window.location.href = sUrlBack;
                                    }
                                    else {
                                        window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                                    }
                                });
                            }
                            else if (respone.result.Status == SysProcess.Duplicate) {
                                DialogWarning(DialogHeader.Warning, respone.result.Msg);
                            }
                            else {
                                DialogWarning(DialogHeader.Warning, respone.result.Msg);
                            }
                        },
                        error: AjaxCall.error,
                        complete: function (jqXHR, status) {//finaly
                            UnblockUI();
                            $("#PopupApprove").modal('hide');
                        }
                    });
                }
            }
            function Edit() {
                BlockUI();
                $("#btnConfirm").hide();
                setTimeout(function () {
                    $("#btnEditConfirm").removeClass("hide");
                    GetTextareaByID("txtcomment").prop("disabled", false);
                    GetSelectByID("ddlRank").prop("disabled", false);
                    //GetSelectByID("ddlTIFStatus").prop("disabled", false);
                    $('textarea[id*=txtRemark]').prop("disabled", false);
                    $('select[id*=ddlRating]').prop("disabled", false);
                    $("#btnEdit").hide("hide");
                    if (resultR >= 2) {
                        GetSelectByID("ddlTIFStatus").prop("disabled", false);
                    }
                    else if (resultR < 2)
                    {
                        GetSelectByID("ddlTIFStatus").prop("disabled", true);
                    }
                    UnblockUI();
                }, 300);

            }
        </script>
    }
}
