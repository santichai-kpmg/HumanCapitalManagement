
@{
    ViewBag.Title = "HCM | Edit Pool Rank";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}


<section class="content-header">
    <h1>
        Edit Pool Rank
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <form class="form-horizontal">
        <div id="divContent">
            <div class="row">
                <div class="col-md-12">
                    <!-- general form elements -->
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">Detail</h3>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right require">Pool Name</label>
                                        <div class="col-md-8">
                                            <input type="text" id="txtID" name="txtID" class="form-control hidden" data-bind='value: Id' />
                                            @{ Html.RenderAction("CreatePool", "HCMMasterData", new
                                                {
                                                    id = "ddlPool",
                                                    databind = "pool_id",
                                                    value = "",
                                                    disable = true,
                                                });}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right require">Rank Name</label>
                                        <div class="col-md-8">
                                            @{ Html.RenderAction("CreateRank", "HCMMasterData", new
                                                {
                                                    id = "ddlRank",
                                                    databind = "rank_id",
                                                    value = ""
                                                });}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right require">Name</label>
                                        <div class="col-md-8">
                                            <input type="text" id="txtNameEn" name="txtNameEn" class="form-control" data-bind="value : name_en , valueUpdate: 'afterkeydown'" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right nomallabel">Short Name</label>
                                        <div class="col-md-8">
                                            <input type="text" id="txtNewNameSh" name="txtNewNameSh" class="form-control" data-bind='value: short_name_en' />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right require">Status</label>
                                        <div class="col-md-8">
                                            <label class="control-label">
                                                <input type="radio" name="Status" id="rdlStatus" class="flat-green radio radio-inline" data-bind='iCheck: { checked: active_status}' value="Y">Active<br>
                                            </label>
                                            <label class="control-label">
                                                <input type="radio" name="Status" id="rdlStatus" class="flat-green radio radio-inline" data-bind='iCheck: { checked: active_status}' value="N">Inactive<br>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right nomallabel">Special Note</label>
                                        <div class="col-md-8">
                                            <textarea rows="3" id="txtDes" cols="50" class="form-control" data-bind='value: description'></textarea>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <!-- /.box-body -->
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-12 text-center">
                                    <button type="button" class="btn btn-primary" onclick="Save();">Save</button>
                                    <button type="button" class="btn btn-danger" onclick="Cancel();">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    @*<%--[modal] before Add--%>*@
    <div id="PopupSave" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12 text-center">
                                        <label class="control-label" id="lblAccept"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to save?</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveData()" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</section>
@section style{

    <link href="~/Scripts/plugins/bootstrapValidate/dist/css/bootstrapValidator.css" rel="stylesheet" />


}

@section scripts{
    <script src="~/Scripts/plugins/bootstrapValidate/dist/js/bootstrapValidator.js"></script>
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.numeric.extensions.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/jquery.inputmask.min.js"></script>
    <script type="text/javascript">
        var url = document.URL;
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);

            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
    </script>

    <script type="text/javascript">
        var sUrlBack ='@Url.Action("PoolRankList", "PoolRank")';
        var objMaxLength = [
            { ctrlID: "txtNameEn", ctrlType: "txt", MaxLength: 230 },
            { ctrlID: "txtpiority", ctrlType: "txt", MaxLength: 50 },
            { ctrlID: "txtDes", ctrlType: "area", MaxLength: 450 }];
        var objModel = @Html.Raw(Json.Encode(Model));
        $(function () {
            BindData(objModel);
            ko.applyBindings(viewModel);
            ValidateForm();
            SetMaxLeangthJS(objMaxLength);
            InputMaskDecimal(GetInputByID("txtpiority"), 10, 0);
            @if(Request.QueryString["bUrl"]!=null)
             {
            <text>
            sUrlBack +="?qryStr="+  '@Uri.EscapeDataString(Request.QueryString["bUrl"])';
            </text>
             }
        });
        function Save() {
            var IsPass = true;
            if (!CheckValidateBootstrap("divContent")) {
                IsPass = false;
                FocusValidateBootstrap("divContent");
            }
            if (IsPass) {
                $("#PopupSave").modal();
            }

        }
        function SaveData (){
            var IsPass = true;
            if (!CheckValidateBootstrap("divContent")) {
                FocusValidateBootstrap("divContent");
                IsPass = false;
            }
            if (IsPass) {
                $("#PopupSave").modal('hide');
                BlockUI();
                var Param = ko.toJS(viewModel);
                Param.lstData = null;
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("EditPoolRank", "PoolRank")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {

                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {

                                var prodId = getParameterByName('bUrl');
                                if (prodId != "") {
                                    window.location.href = sUrlBack;
                                }
                                else {
                                    window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                                }
                            });
                        }
                        else if (respone.result.Status == SysProcess.Duplicate){
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                });
            }
        }
    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh
                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value
                    });
                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }
        function BindData(value) {
            if (viewModel.Id == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
                $("input[id*=rdlStatus][value=" + value.active_status + "]").iCheck('check');
            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);
                $("input[id*=rdlStatus][value=" + value.active_status + "]").iCheck('check');
            }
        }
        //function for validate form
        function ValidateForm() {
            var objValidatePopUp = {};
            objValidatePopUp[GetElementName("ddlPool", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("ddlRank", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
            objValidatePopUp[GetElementName("txtNameEn", objControl.txtbox)] = addValidate_notEmpty("This value is not valid");
            BindValidateBootstrap("divContent", objValidatePopUp);
        }
        function Cancel() {
            window.location.href = sUrlBack;
        }

    </script>

}