@{
    ViewBag.Title = "HCM | New Joiner On boarding list";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}

<section class="content-header">
    <h1>
        New Joiner On boarding list
    </h1>
</section>


<section class="content">
    <form class="form-horizontal">
        <div class="row">
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Onboarding List </h3>
                    </div>
                    <!-- /.box-header -->
                    <!-- form start -->


                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-12">
                                <button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('xlxs');"><img src="~/Image/filetype_xls.png" alt="" height="30"></button>
                            </div>
                        </div>


                        <br />
                        <br />

                        <div class="row" id="divTable">

                         

                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover display" id="gvwData">
                                        <thead>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>

                            </div> 
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
            <input type="hidden" id="txtSess" name="txtSess" class="form-control" data-bind='value: session' />
        </div>

    </form>
</section>
@section style{

    <style>
        .dt-HeadGr-ctm {
            background-color: #2952a3;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-total-ctm {
            background-color: #36c61a;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-totalAll-ctm {
            background-color: rgb(255, 222, 35);
            color: rgb(0, 0, 0);
            vertical-align: middle;
        }

        table.dataTable {
            border-collapse: collapse;
            width: 100%;
        }
    </style>
}
@section scripts{
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/DataTables2/datetimeSort.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/dataTables.rowGroup.min.js"></script>

    <script src="~/Scripts/plugins/DataTables2/jquery.dataTables.rowGrouping.js"></script>

    <script type="text/javascript">
    var objModelNJOnboard = @Html.Raw(Json.Encode(Model));
    $(function () {

        SetTable();

        BindData(objModelNJOnboard);

    });

    function Search() {
        var lstSearch = ko.toJS(viewModel)
        return lstSearch;
    };

    function LoadData() {
        $('div[id$=divTable]').collapse("show");
        $('#gvwData').DataTable().columns.adjust().draw();
        var Param = Search();
        BlockUI();
        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadReportClassification", "rSubmited")',
            dataType: "json",
            data: { SearchItem: Param },
            success: function (response) {
                if (response.result.Status == SysProcess.SessionExpired) {1
                    PopupLogin('@Url.Action("Index", "Home")');
                }
                else {
                    var lstData = response.result.lstData;
                    if (lstData == undefined || lstData.length <= 0) {
                        $('div[id$=divTable]').collapse("show");
                        $('#gvwData').DataTable().clear().draw();
                        $('#gvwData').dataTable().fnDraw();
                        $('#gvwData').DataTable().columns.adjust().draw();
                    }
                    else {
                        $('div[id$=divTable]').collapse("show");
                        $('#gvwData').DataTable().clear().draw();
                        $('#gvwData').dataTable().fnAddData(lstData);
                        $('#gvwData').dataTable().fnDraw();
                        $('#gvwData').DataTable().columns.adjust().draw();
                    }
                }
            },
            complete: function (jqXHR, status) {//finaly
                $('#gvwData').DataTable().columns.adjust().draw();
                $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                UnblockUI();
            }
        });
    }

    function SetTable() {


        var objHeadClRequest = [

            { "title": "No", "width": "100px", "className": "dt-center-ctm", "data": "No" },
            { "title": "StartDate", "width": "100px", "className": "dt-center-ctm", "data": "StartDate" },
            { "title": "Company", "width": "100px", "className": "dt-center-ctm", "data": "Company" },
            { "title": "Division", "width": "100px", "className": "dt-center-ctm", "data": "Division" },
            { "title": "Group", "width": "100px", "className": "dt-center-ctm", "data": "Group" },
            
            { "title": "PositionTitle", "width": "100px", "className": "dt-center-ctm", "data": "PositionTitle" },
            { "title": "RankForHiring", "width": "100px", "className": "dt-center-ctm", "data": "RankForHiring" },
            { "title": "TypeOfEmployee", "width": "100px", "className": "dt-center-ctm", "data": "TypeOfEmployee" },
            { "title": "EN_Prefix", "width": "100px", "className": "dt-center-ctm", "data": "EN_Prefix" },
            { "title": "EN_FirstName", "width": "100px", "className": "dt-center-ctm", "data": "EN_FirstName" },
            
            { "title": "EN_LastName", "width": "100px", "className": "dt-center-ctm", "data": "EN_LastName" },
            { "title": "EN_NickName", "width": "100px", "className": "dt-center-ctm", "data": "EN_NickName" },
            { "title": "TH_Name", "width": "100px", "className": "dt-center-ctm", "data": "TH_Name" },
            { "title": "Gender", "width": "100px", "className": "dt-center-ctm", "data": "Gender" },
            { "title": "DateOfBirth", "width": "100px", "className": "dt-center-ctm", "data": "DateOfBirth" },
            
            { "title": "Birthplace", "width": "100px", "className": "dt-center-ctm", "data": "Birthplace" },
            { "title": "CountryOfBirth", "width": "100px", "className": "dt-center-ctm", "data": "CountryOfBirth" },
            { "title": "MaritalStatus", "width": "100px", "className": "dt-center-ctm", "data": "MaritalStatus" },
            { "title": "Nationality", "width": "100px", "className": "dt-center-ctm", "data": "Nationality" },
            { "title": "IdentificationNumber", "width": "100px", "className": "dt-center-ctm", "data": "IdentificationNumber" },

            { "title": "PHouseNo", "width": "100px", "className": "dt-center-ctm", "data": "PHouseNo" },
            { "title": "PMooAndSoi", "width": "100px", "className": "dt-center-ctm", "data": "PMooAndSoi" },
            { "title": "PRoad", "width": "100px", "className": "dt-center-ctm", "data": "PRoad" },
            { "title": "PSubDistrict", "width": "100px", "className": "dt-center-ctm", "data": "PSubDistrict" },
            { "title": "PProvince", "width": "100px", "className": "dt-center-ctm", "data": "PProvince" },

            { "title": "PPostalCode", "width": "100px", "className": "dt-center-ctm", "data": "PPostalCode" },
            { "title": "PCountry", "width": "100px", "className": "dt-center-ctm", "data": "PCountry" },
            { "title": "PTelephoneNumber", "width": "100px", "className": "dt-center-ctm", "data": "PTelephoneNumber" },
            { "title": "PMobile", "width": "100px", "className": "dt-center-ctm", "data": "PMobile" },
            { "title": "CHouseNo", "width": "100px", "className": "dt-center-ctm", "data": "CHouseNo" },

            { "title": "CMooAndSoi", "width": "100px", "className": "dt-center-ctm", "data": "CMooAndSoi" },
            { "title": "CRoad", "width": "100px", "className": "dt-center-ctm", "data": "CRoad" },
            { "title": "CSubDistrict", "width": "100px", "className": "dt-center-ctm", "data": "CSubDistrict" },
            { "title": "CDistrict", "width": "100px", "className": "dt-center-ctm", "data": "CDistrict" },
            { "title": "CProvince", "width": "100px", "className": "dt-center-ctm", "data": "CProvince" },

            { "title": "CPostalCode", "width": "100px", "className": "dt-center-ctm", "data": "CPostalCode" },
            { "title": "CCountry", "width": "100px", "className": "dt-center-ctm", "data": "CCountry" },
            { "title": "CTelephoneNumber", "width": "100px", "className": "dt-center-ctm", "data": "CTelephoneNumber" },
            { "title": "CMobile", "width": "100px", "className": "dt-center-ctm", "data": "CMobile" },
            { "title": "BankAccountName", "width": "100px", "className": "dt-center-ctm", "data": "BankAccountName" },

            { "title": "BankAccountNumber", "width": "100px", "className": "dt-center-ctm", "data": "BankAccountNumber" },
            { "title": "BankAccountBranchName", "width": "100px", "className": "dt-center-ctm", "data": "BankAccountBranchName" },
            { "title": "StudentID", "width": "100px", "className": "dt-center-ctm", "data": "StudentID" },
            { "title": "SocialSecurity_TH", "width": "100px", "className": "dt-center-ctm", "data": "SocialSecurity_TH" },
            { "title": "ProvidentFund_TH", "width": "100px", "className": "dt-center-ctm", "data": "ProvidentFund_TH" },

            { "title": "DeathContribution", "width": "100px", "className": "dt-center-ctm", "data": "DeathContribution" },
            { "title": "Country", "width": "100px", "className": "dt-center-ctm", "data": "Country" },
            { "title": "BCurrentGPATranscript", "width": "100px", "className": "dt-center-ctm", "data": "BCurrentGPATranscript" },
            { "title": "Certificate", "width": "100px", "className": "dt-center-ctm", "data": "Certificate" },
            { "title": "BMajorStudy", "width": "100px", "className": "dt-center-ctm", "data": "BMajorStudy" },

            { "title": "RecruitmentStatus", "width": "100px", "className": "dt-center-ctm", "data": "RecruitmentStatus" },
            { "title": "EnglishTestName", "width": "100px", "className": "dt-center-ctm", "data": "EnglishTestName" },
            { "title": "EnglishTestScores", "width": "100px", "className": "dt-center-ctm", "data": "EnglishTestScores" },
            { "title": "EnglishTestDate", "width": "100px", "className": "dt-center-ctm", "data": "EnglishTestDate" },
            { "title": "SourcingChannel", "width": "100px", "className": "dt-center-ctm", "data": "SourcingChannel" },

            { "title": "TraineeNumber", "width": "100px", "className": "dt-center-ctm", "data": "TraineeNumber" },
            { "title": "MilitaryServicesDoc", "width": "100px", "className": "dt-center-ctm", "data": "MilitaryServicesDoc" },
            { "title": "IBMP", "width": "100px", "className": "dt-center-ctm", "data": "IBMP" },
            { "title": "TechnicalTest1Score", "width": "100px", "className": "dt-center-ctm", "data": "TechnicalTest1Score" },
            { "title": "TechnicalTest1Date", "width": "100px", "className": "dt-center-ctm", "data": "TechnicalTest1Date" },

            { "title": "Email", "width": "100px", "className": "dt-center-ctm", "data": "Email" },
            { "title": "BProgram", "width": "100px", "className": "dt-center-ctm", "data": "BProgram" },
            { "title": "OfficialNoteForAnnouncement", "width": "100px", "className": "dt-center-ctm", "data": "OfficialNoteForAnnouncement" },
            { "title": "InternalNoteForHRTeam", "width": "100px", "className": "dt-center-ctm", "data": "InternalNoteForHRTeam" },

        ];

        var objTableRe = {
            sTableID: "gvwData",
            nDis: [],
            sProperty: "<'top col-md-6'l>rt<'bottom col-md-6'fi><'bottom col-md-6 text-right'p><'clear'>",//length pangging
            objHeadCl: objHeadClRequest,//Table Headder
            objDataSet: [], //dataset
            nHeadFix: 2,// fix clr
            EmptyTable: EmptyTable,
            order: [[0, "desc"]],

            objBeforeClRender: false,
            //lengthMN:[[15, 100, 150, -1], [15, 100, 150, "All"]],
            rowGroup: {
                enable: false
            },
            fixedHeader: {
                header: true,
            },
            //fixedColumns:   {
            //    leftColumns: 2,
            //    //Columns:true,
            //},

        };

        var table = CreatTableJS(objTableRe);

    }

    </script>


    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value

                    });

                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }

        function BindData(value) {
            if (viewModel.code == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);
            }

            if (objModelNJOnboard.lstData != undefined && objModelNJOnboard.lstData != null) {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnAddData(objModelNJOnboard.lstData);
                $('#gvwData').dataTable().fnDraw();

                setTimeout(function () {
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                }, 500);
            }
            else {
                $('div[id$=divTable]').collapse("hide");
            }

        }



        $(function () {
            $(window).bind('beforeunload', function () {

                var aSession = [$('input[id$=txtSess]').val()];

                //var sValHdf = $('input[id$=hfdSess]').val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ClearSession", "Base")',
                    cache: false,
                    dataType: "html",
                    data: {
                        sVal: encodeURIComponent(aSession)
                    },
                    complete: function (jqXHR, status) {//finaly
                    }
                });
            });
        });


    // [ ExpViewExportCandidateByID(int candidateID, string sMode)]
    function LoadExcelByID(candidate_id,Val)
    {
        //candidate_id = 2;

        if(viewModel.session != undefined)
        {
            var sVal =  ko.toJS(viewModel.session);
            BlockUI();

            window.open('@Url.Action("ExpNJOnboardingList", "rNewJoiner")?candidateID=' + candidate_id +'&sMode='+Val, '_blank');

            setTimeout(function () { UnblockUI(); }, 500);
        }
        else {
            DialogWarning(DialogHeader.Warning,"Error please try again.");
        }
    }




        function LoadExcel(Val)
        {


            if(viewModel.session != undefined)
            {
                var sVal =  ko.toJS(viewModel.session);
                BlockUI();
                window.open('@Url.Action("ExpNJOnboardingList", "rNewJoiner")?qryStr=' + sVal +'&sMode='+Val, '_blank');
                setTimeout(function () { UnblockUI(); }, 500);
            }
            else {
                DialogWarning(DialogHeader.Warning,"Error please try again.");
            }
        }


    </script>


}


