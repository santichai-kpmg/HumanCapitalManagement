
@{
    ViewBag.Title = "HCM | FY Plan Edit";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}

<section class="content-header">
    <h1>
        FY Plan Edit
    </h1>
</section>

<section class="content">
    <form class="form-horizontal">
        <div class="row">
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <div class="box-tools pull-right">
                            <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                <i class="fa fa-refresh"></i>
                            </button>
                        </div>
                    </div>
                    <!-- form start -->
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-12">
                                @*<button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('pdf');"><img src="~/Image/filetype_pdf.png" alt="" height="30"></button>
                                    <button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('xlxs');"><img src="~/Image/filetype_xls.png" alt="" height="30"></button>*@
                            </div>
                        </div>
                        <div class="row" id="divTable">
                            <div class="col-md-8 col-md-offset-2">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover " cellspacing="0" id="gvwData" width="100%">
                                        <thead>

                                        </thead>
                                        <tfoot>
                                            <tr>
                                                <th colspan="6"></th>
                                            </tr>
                                        </tfoot>
                                        <tbody></tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>

        </div>


        @*<div class="modal-footer">
                <button id="btnOK" type="button" onclick="SaveData()" class="btn btn-primary">OK</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>*@

        <div class="box-footer text-center">
            <button type="button" class="btn btn-primary" onclick="Save('Submit');">Save</button>
            <button type="button" class="btn btn-warning" onclick="Cancel();">Back</button>
        </div>

    </form>


    <div id="PopupSave" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to save?</label>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveData()" class="btn btn-primary">OK</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>


</section>
@section style{
    <style>
        .dt-HeadGr-ctm {
            background-color: #2952a3;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-total-ctm {
            background-color: #36c61a;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-totalAll-ctm {
            background-color: rgb(255, 222, 35);
            color: rgb(0, 0, 0);
            vertical-align: middle;
        }

        table.dataTable {
            border-collapse: collapse;
            width: 100%;
        }
    </style>
}
@section scripts{
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/DataTables2/datetimeSort.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/dataTables.rowGroup.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/FixedHeader-3.1.2/js/dataTables.fixedHeader.min.js"></script>
    <script type="text/javascript">
        var url = document.URL;
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);

            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        var objModel = @Html.Raw(Json.Encode(Model));

       var sUrlBack = '@Url.Action("APTIFFormList", "Interview")';
       $(function () {
        @if (Request.QueryString["bUrl"] != null)
           {
       <text>
           sUrlBack += "?qryStr=" + '@Uri.EscapeDataString(Request.QueryString["bUrl"])';
       </text>
       }

        });

    </script>
    <script type="text/javascript">

        var url = document.URL;

        var objModel = @Html.Raw(Json.Encode(Model));
        var sUrlBack = '@Url.Action("FYPlan", "FYPlan")';

        $(function () {
        @if (Request.QueryString["bUrl"] != null)
           {
       <text>
           sUrlBack += "?qryStr=" + '@Uri.EscapeDataString(Request.QueryString["bUrl"])';
       </text>
       }

        });

        $(function () {
            SetTable();

            //setDatePickerFromTo($("input[id$=txtDateStart]"), $("input[id$=txtDateTo]"));
            BindData(objModel);
            ko.applyBindings(viewModel);

        });


        function GetData() {
            var lstData = ko.toJS(viewModel);

            return lstData;
        }


        function Save(sVal) {
            var Acceptlst = [];
            var IsPass = true;
         
              
                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.para = GetValTextBox("txtPARA" + ed.Id);
                });

                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.aa = GetValTextBox("txtAA" + ed.Id);
                });

                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.sr = GetValTextBox("txtSR" + ed.Id);
                });

                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.am = GetValTextBox("txtAM" + ed.Id);
                });

                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.mgr = GetValTextBox("txtMGR" + ed.Id);
                });

                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.ad = GetValTextBox("txtAD" + ed.Id);
                });

                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.dir = GetValTextBox("txtDIR" + ed.Id);
                });


                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.ptr = GetValTextBox("txtPTR" + ed.Id);
                });


                Acceptlst = Enumerable.From(objModel.lstData).ToArray();
                ko.mapping.fromJS(Acceptlst, {}, viewModel.lstData);

                if (Acceptlst.length == 0) {
                    DialogWarning(DialogHeader.Warning, "Please select at least one item.");
                }
                else {
                    console.log(Acceptlst);
                    $("#PopupSave").modal();
                }

        


        }

         function SaveData() {
             var IsPass = true;
             var Param = GetData();
             //if (IsPass && Param.confidentiality_agreement == "Y") {
             if (IsPass) {
                 BlockUI();
                 $.ajax({
                     dataType: AjaxCall.dataType,
                     type: AjaxCall.type,
                     contentType: AjaxCall.contentType,
                     url: '@Url.Action("CreateFYPlanDetail", "FYPlan")',
                     data: JSON.stringify({ ItemData: Param }),
                     success: function (respone) {
                         if (respone.result.Status == SysProcess.SessionExpired) {
                             PopupLogin('@Url.Action("Index", "Home")');
                         } else if (respone.result.Status == SysProcess.Success) {
                             DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {

                                 var prodId = getParameterByName('bUrl');
                                 if (prodId != "") {
                                     window.location.href = sUrlBack;
                                 }
                                 else {
                                     window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                                 }
                             });
                         }
                         else if (respone.result.Status == SysProcess.Duplicate) {
                             DialogWarning(DialogHeader.Warning, respone.result.Msg);
                         }
                         else {
                             DialogWarning(DialogHeader.Warning, respone.result.Msg);
                         }
                     },
                     error: AjaxCall.error,
                     complete: function (jqXHR, status) {//finaly
                         UnblockUI();
                         $("#PopupSave").modal('hide');
                     }
                 });
             }
        }

        function Cancel() {
            //window.location.reload();
            window.location.href = sUrlBack;
        }

        function SetTable() {
            var objHeadClRequest = [
                { "title": "Group", "width": "20%", "className": "dt-left-ctm", "data": "sgroup" },
                { "title": "PARA", "width": "9%", "className": "dt-right-ctm", "data": "para" },
                { "title": "AA", "width": "8%", "className": "dt-right-ctm", "data": "aa" },
                { "title": "SR", "width": "8%", "className": "dt-right-ctm", "data": "sr" },
                { "title": "AM", "width": "9%", "className": "dt-right-ctm", "data": "am" },
                { "title": "MGR", "width": "9%", "className": "dt-right-ctm", "data": "mgr" },
                { "title": "AD", "width": "9%", "className": "dt-right-ctm", "data": "ad" },
                { "title": "DIR", "width": "9%", "className": "dt-right-ctm", "data": "dir" },
                { "title": "PTR", "width": "9%", "className": "dt-right-ctm", "data": "ptr" },
                //{ "title": "Total", "width": "10%", "className": "dt-right-ctm", "data": "total" },
                { "title": "", "width": "0%", "className": "dt-right-ctm", "data": "division", "searchable": false, "visible": false },
                { "title": "", "width": "0%", "className": "dt-right-ctm", "data": "Id", "searchable": false, "visible": false },
                //{ "title": "Total", "width": "10%", "className": "dt-right-ctm", "data": "total", "visible": false },
                //{ "title": "", "width": "0%", "className": "dt-right-ctm", "data": "division", "searchable": false, "visible": false },
            ];



            var objTableRe = {
                sTableID: "gvwData",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                //order: [[10, "asc"]],
                order: [[9, "asc"]],



                columnDefs: [

                    //{

                    //    "targets": 0,
                    //    "render": function (data, type, row) {

                    //        return data;

                    //    },
                    //},

                    {

                        "targets": 1,
                        "render": function (data, type, row) {

                            return CreatTextbox("txtPARA" + row.Id, 50,data, false);

                        },
                    },

                    {
                        "targets": 2,
                        "render": function (data, type, row) {

                            return CreatTextbox("txtAA" + row.Id, 50, data, true);

                        },
                    },

                    {
                        "targets": 3,
                        "render": function (data, type, row) {

                            return CreatTextbox("txtSR" + row.Id, 50, data, true);

                        },
                    },

                    {
                        "targets": 4,
                        "render": function (data, type, row) {

                            return CreatTextbox("txtAM" + row.Id, 50, data, true);

                            return data;
                        },
                    },

                    {
                        "targets": 5,
                        "render": function (data, type, row) {

                            return CreatTextbox("txtMGR" + row.Id, 50, data, true);

                        },
                    },

                    {
                        "targets": 6,
                        "render": function (data, type, row) {

                            return CreatTextbox("txtAD" + row.Id, 50, data, true);

                        },
                    },


                    {
                        "targets": 7,
                        "render": function (data, type, row) {

                            return CreatTextbox("txtDIR" + row.Id, 50, data, true);

                        },
                    },

                    {
                        "targets": 8,
                        "render": function (data, type, row) {

                            return CreatTextbox("txtPTR" + row.Id, 50, data, true);

                        },
                    }


                ],


                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                rowGroup: {
                    'startRender': function (rows, group) {
                        return $('<tr/>')
                            //.append('<td class="dt-HeadGr-ctm dt-center-ctm" colspan="10">' + group + '</td>');
                            .append('<td class="dt-HeadGr-ctm dt-center-ctm" colspan="9">' + group + '</td>');
                    },

                    /*
                    'endRender': function (rows, group) {
                        var npara = 0;
                        var naa = 0;
                        var nsr = 0;
                        var nam = 0;
                        var nmgr = 0;
                        var nad = 0;
                        var ndir = 0;
                        var nptr = 0;
                        //var ntotal = 0;

                        var amount = rows
                            .data();

                        $.each(amount, function (key, value) {
                            npara = (npara + StringtoInt(value.para + ""));
                            naa = (naa + StringtoInt(value.aa + ""));
                            nsr = (nsr + StringtoInt(value.sr + ""));
                            nam = (nam + StringtoInt(value.am + ""));
                            nmgr = (nmgr + StringtoInt(value.mgr + ""));
                            nad = (nad + StringtoInt(value.ad + ""));
                            ndir = (ndir + StringtoInt(value.dir + ""));
                            nptr = (nptr + StringtoInt(value.ptr + ""));
                            //ntotal = (ntotal + StringtoInt(value.total + ""));

                        });
                        return $('<tr/>')
                            .append('<td class="dt-total-ctm dt-left-ctm" >Total : ' + group + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(npara) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(naa) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nsr) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nam) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nmgr) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nad) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(ndir) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nptr) + '</td>');

                            //.append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(ntotal) + '</td>'
                            //);
                    },
                    */

                    'dataSrc': 'division'
                },
                fixedHeader: {
                    header: false,
                    footer: false
                }

                /*
                ,
                footerCallback: function (tfoot, data, start, end, display) {
                    var api = this.api(), data;
                    var npara = 0;
                    var naa = 0;
                    var nsr = 0;
                    var nam = 0;
                    var nmgr = 0;
                    var nad = 0;
                    var ndir = 0;
                    var nptr = 0;
                    //var ntotal = 0;
                    $.each(objModel.lstData, function (key, value) {
                        npara = (npara + StringtoInt(value.para + ""));
                        naa = (naa + StringtoInt(value.aa + ""));
                        nsr = (nsr + StringtoInt(value.sr + ""));
                        nam = (nam + StringtoInt(value.am + ""));
                        nmgr = (nmgr + StringtoInt(value.mgr + ""));
                        nad = (nad + StringtoInt(value.ad + ""));
                        ndir = (ndir + StringtoInt(value.dir + ""));
                        nptr = (nptr + StringtoInt(value.ptr + ""));
                        //ntotal = (ntotal + StringtoInt(value.total + ""));
                    });
                    // Update footer
                    var sFood = $(tfoot).find('th').eq(0).parent();
                    sFood.html('');
                    sFood.html('<th class=" dt-totalAll-ctm " style="text-align: left;" >Total Thailand</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(npara) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(naa) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nsr) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nam) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nmgr) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nad) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(ndir) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nptr) + '</th>'
                        //+ '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(ntotal) + '</th>'
                    );

                }
                */
            };

            CreatTableJS(objTableRe);
        }
    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value

                    });

                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }
        function BindData(value) {
            if (viewModel.code == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);
            }

            if (objModel.lstData != undefined && objModel.lstData != null) {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnAddData(objModel.lstData);
                $('#gvwData').dataTable().fnDraw();

                setTimeout(function () {
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                }, 500);
            }
            else {
                $('div[id$=divTable]').collapse("hide");
            }

        }


        $(function () {
            $(window).bind('beforeunload', function () {

                var aSession = [$('input[id$=txtSess]').val()];

                //var sValHdf = $('input[id$=hfdSess]').val();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ClearSession", "Base")',
                    cache: false,
                    dataType: "html",
                    data: {
                        sVal: encodeURIComponent(aSession)
                    },
                    complete: function (jqXHR, status) {//finaly
                    }
                });
            });
        });


        @*
        function LoadExcel(Val)
        {
            if(viewModel.session != undefined)
            {
                var sVal =  ko.toJS(viewModel.session);
                BlockUI();
                window.open('@Url.Action("ExpHCPlanAndSummary", "rHeadcount")?qryStr=' + sVal +'&sMode='+Val, '_blank');
                setTimeout(function () { UnblockUI(); }, 500);
            }
            else {
                DialogWarning(DialogHeader.Warning,"Error please try again.");
            }
        }
        *@
    </script>

}