@{
    ViewBag.Title = "HCM | Create User Permission";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}


@*@if (ViewBag.IsAdmin == null || !ViewBag.IsAdmin)
    {

        Html.RenderAction("ErrorNopermission", "MasterPage");
        return;
    }*@

<section class="content-header">
    <h1>
        Create User Permission
    </h1>
</section>
<!-- Main content -->
<section class="content">
    <form class="form-horizontal">
        <div id="divContent">
            <div class="row">
                <div class="col-md-12">
                    <!-- general form elements -->
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">Detail</h3>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="nav-tabs-custom">
                                        <ul class="nav nav-tabs">
                                            <li class="active"><a href="#tab_1" data-toggle="tab">Single User</a></li>
                                            <li><a href="#tab_2" data-toggle="tab">Multi User</a></li>
                                        </ul>
                                        <div class="tab-content">
                                            <div class="tab-pane active" id="tab_1">
                                                <div id="divContent1">
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group form-group-sm">
                                                                <label class="col-md-4 control-label text-right require">User ID</label>
                                                                <div class="col-md-8">
                                                                    <input type="text" id="txtID" name="txtID" class="form-control hidden" data-bind='value: Id' />
                                                                    <input type="text" id="txtSearch" name="txtSearch" class="form-control" />
                                                                    <input type="text" class="form-control " style="display:none;" id="txtMGID" name="txtMGID" disabled>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group form-group-sm">
                                                                <label class="col-md-4 control-label text-right nomallabel">User Name</label>
                                                                <div class="col-md-8">
                                                                    <input type="text" id="txtName" name="txtName" class="form-control" data-bind='value: user_name' disabled />
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <div class="form-group form-group-sm">
                                                                <label class="col-md-4 control-label text-right nomallabel">Group</label>
                                                                <div class="col-md-8">
                                                                    <input type="text" id="txtgroup" name="txtgroup" class="form-control" data-bind='value: unit_name' disabled />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="box-footer">
                                                    <div class="row">
                                                        <div class="col-md-12 text-center">
                                                            <button type="button" class="btn btn-primary" onclick="Save();">Save</button>
                                                            <button type="button" class="btn btn-danger" onclick="Cancel();">Cancel</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="tab-pane" id="tab_2">
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div id="divContent2">
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <h4 class="box-title">List of user</h4>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-md-6">
                                                                    <div class="form-group form-group-sm">
                                                                        <label class="col-md-4 control-label text-right nomallabel">Unit Group</label>
                                                                        <div class="col-md-8">

                                                                            @{ Html.RenderAction("CreateDivisionCode", "HCMMasterData", new
                                                                                {
                                                                                    id = "ddlGroup",
                                                                                });}
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <div class="form-group form-group-sm">
                                                                        <label class="col-md-4 control-label text-right nomallabel">Rank</label>
                                                                        <div class="col-md-8">

                                                                            @{ Html.RenderAction("CreateddlRankFromHRIS", "HCMMasterData2", new
                                                                                {
                                                                                    id = "ddlRank",
                                                                                });}
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <br />
                                                            <div class="row">
                                                                <div class="col-md-12 text-center">
                                                                    <button id="btnUpdate" type="button" onclick="SearchPopupCan()" class="btn btn-success">Search</button>
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <div class="table-responsive">
                                                                        <table class="table table-striped table-bordered table-hover table-responsive-custom" id="gvwDatamany" width="100%">
                                                                            <thead>
                                                                            </thead>
                                                                            <tbody></tbody>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="box-footer">
                                                            <div class="row">
                                                                <div class="col-md-12 text-center">
                                                                    <button type="button" class="btn btn-primary" onclick="SaveMany();">Save</button>
                                                                    <button type="button" class="btn btn-danger" onclick="Cancel();">Cancel</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right require">Group Permission</label>
                                        <div class="col-md-8">
                                            @{ Html.RenderAction("CreateGroupPermission", "HCMMasterData", new
                                                {
                                                    id = "ddlGroupPermission",
                                                    databind = "group_permiss_id",
                                                    value = ""
                                                });}
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group form-group-sm">
                                        <label class="col-md-4 control-label text-right nomallabel">Special Note</label>
                                        <div class="col-md-8">
                                            <textarea rows="3" id="txtDes" cols="50" class="form-control" data-bind='value: description'></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="row" id="divTable">
                                <div class="col-md-6">
                                    <div class="box box-solid box-info">
                                        <div class="box-header with-border">
                                            <i class="fa fa-text-width"></i>
                                            <h3 class="box-title">Menu List Data</h3>
                                            <div class="box-tools pull-right">
                                                <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                                    <i class="fa fa-refresh"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <!-- /.box-header -->
                                        <div class="box-body">
                                            <div class="table-responsive">
                                                <table class="table table-striped table-bordered table-hover display" id="gvwData" width="100%">
                                                    <thead>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <!-- /.box-body -->
                                        @*<div class="overlay">
                                                <i class="fa fa-refresh fa-spin"></i>
                                            </div>*@
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="box box-solid box-info">
                                        <div class="box-header with-border">
                                            <i class="fa fa-text-width"></i>
                                            <h3 class="box-title">Group List Data</h3>
                                        </div>
                                        <!-- /.box-header -->
                                        <div class="box-body">
                                            @{ Html.RenderAction("CreateGroupForSelectBox", "HCMMasterData", new
                                                {
                                                    id = "boxDivision",
                                                    value = new string[] { }
                                                });}
                                            @*<select id='pre-selected-options' multiple='multiple' class="form-control" >
                                                    <optgroup label='Friends'>
                                                        <option value='1'>Yoda</option>
                                                        <option value='2' selected disabled>Obiwan</option>
                                                    </optgroup>
                                                    <optgroup label='Enemies'>
                                                        <option value='3'>Palpatine</option>
                                                        <option value='4' disabled>Darth Vader</option>
                                                    </optgroup>
                                                </select>*@

                                        </div>
                                        <!-- /.box-body -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /.box-body -->

                    </div>
                </div>
            </div>
        </div>
    </form>
    @*<%--[modal] before Add--%>*@
    <div id="PopupSave" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreatePopUp">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12 text-center">
                                        <label class="control-label" id="lblAccept"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to save?</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveData()" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
    @*<%--[modal] before Add--%>*@
    <div id="PopupSaveMany" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #337ab7;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Saving Confirmation</b></span>
                </div>
                <div class="modal-body">
                    <div id="divCreateMany">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12 text-center">
                                        <label class="control-label" id="lblAccept"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12 text-center">Do you want to save?</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnOK" type="button" onclick="SaveDataMany()" class="btn btn-primary">OK</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</section>
@section style{

    <link href="~/Scripts/plugins/bootstrapValidate/dist/css/bootstrapValidator.css" rel="stylesheet" />
    <link href="~/Scripts/plugins/lou-multi-select/css/multi-select.css" rel="stylesheet" />
    <style>
        .ms-container {
            width: 470px;
        }

            .ms-container .ms-list {
                height: 400px;
            }
    </style>
}

@section scripts{
    <script src="~/Scripts/plugins/bootstrapValidate/dist/js/bootstrapValidator.js"></script>
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/lou-multi-select/js/jquery.multi-select.js"></script>
    <script type="text/javascript">
        var url = document.URL;
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);

            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
    </script>

    <script type="text/javascript">

                        var sUrlBack = '@Url.Action("UserPermissionList", "UserPermission")';

                        var objMaxLength = [
                            { ctrlID: "txtDes", ctrlType: "area", MaxLength: 500 }];

                        var objModel = @Html.Raw(Json.Encode(Model));
        var objModelMany = [];
                        $(function () {

                            SetTable();
                            SetTableUser();
                            BindData(objModel);
                            ko.applyBindings(viewModel);
                            ValidateForm();
                            SetMaxLeangthJS(objMaxLength);
                            $("select[id$=ddlGroupPermission]").on("change", function () {
                                LoadGroupPermis($(this).val());
                            });
                            SetAutocom("txtSearch");
                            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                                if (e.target.hash == '#tab_1') {
                                }
                                else if (e.target.hash == '#tab_2') {
                                    $('#gvwDatamany').DataTable().columns.adjust().draw();
                                }

                            });

                    @if (Request.QueryString["bUrl"] != null)
                        {
                    <text>
                        sUrlBack += "?qryStr=" + '@Uri.EscapeDataString(Request.QueryString["bUrl"])';
                    </text>
                    }   });
                function Save() {
                    var IsPass = true;
                    if (!CheckValidateBootstrap("divContent")) {
                        IsPass = false;
                        FocusValidateBootstrap("divContent");
                    }
                    if (IsPass) {

                        //set value to View
                        Enumerable.From(objModel.lstData).ForEach(function (ed) {
                            return ed.view_value = GetValueChkGroupSingelValue("chkView" + ed.menu_id, "");
                        });
                        //set value to Add
                        Enumerable.From(objModel.lstData).ForEach(function (ed) {
                            return ed.add_value = GetValueChkGroupSingelValue("chkAdd" + ed.menu_id, "");
                        });
                        //set value to Edit
                        Enumerable.From(objModel.lstData).ForEach(function (ed) {
                            return ed.edit_value = GetValueChkGroupSingelValue("chkEdit" + ed.menu_id, "");
                        });
                        //set value to Approve
                        Enumerable.From(objModel.lstData).ForEach(function (ed) {
                            return ed.approve_value = GetValueChkGroupSingelValue("chkApprove" + ed.menu_id, "");
                        });
                        //set value to Detail
                        Enumerable.From(objModel.lstData).ForEach(function (ed) {
                            return ed.detail_value = GetValueChkGroupSingelValue("chkDetail" + ed.menu_id, "");
                        });
                        ko.mapping.fromJS(Enumerable.From(objModel.lstData).Where(function (w) { return (w.view_value == "Y" || w.add_value == "Y" || w.edit_value == "Y" || w.approve_value == "Y" || w.detail_value == "Y") }).ToArray(), {}, viewModel.lstDataSave);
                        $("#PopupSave").modal();
                    }

        }
        function GetData() {
            var lstData = ko.toJS(viewModel);
            if (lstData != null) {
                lstData.lstData = null;
                lstData.aUnitCode = GetValDropdown('boxDivision');
                lstData.user_no = GetValTextBox("txtMGID");
            }
            return lstData;
        }
       function SaveData() {
           var IsPass = true;
           if (!CheckValidateBootstrap("divContent")) {
               FocusValidateBootstrap("divContent");
               IsPass = false;
           }
           if (IsPass) {
               $("#PopupSave").modal('hide');
               BlockUI();
               var Param = GetData();//ko.toJS(viewModel);

               $.ajax({
                   dataType: AjaxCall.dataType,
                   type: AjaxCall.type,
                   contentType: AjaxCall.contentType,

                   url: '@Url.Action("CreateUserPermission", "UserPermission")',
           data: JSON.stringify({ ItemData: Param }),
           success: function (respone) {

               if (respone.result.Status == SysProcess.SessionExpired) {
                   PopupLogin('@Url.Action("Index", "Home")');
                            } else if (respone.result.Status == SysProcess.Success) {
           DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {

               var prodId = getParameterByName('bUrl');
               if (prodId != "") {
                   window.location.href = sUrlBack;
               }
               else {
                         window.location.href = sUrlBack;
                        // window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
               }
           });
       }
       else if (respone.result.Status == SysProcess.Duplicate) {
           DialogWarning(DialogHeader.Warning, respone.result.Msg);
       }
       else {
           DialogWarning(DialogHeader.Warning, respone.result.Msg);
       }
       },
       error: AjaxCall.error,
       complete: function (jqXHR, status) {//finaly
       UnblockUI();
       }
       });
       }
       }

    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
                    var viewModel = {

                    };
                    function ViewModel() {
                        var self = this;
                        self.conditionChecked = ko.observable(false);
                        self.loadCondition = function () {
                            //ajax request to get condition value. Suppose ajax request returned value "used". so
                            self.conditionChecked("used");
                        }
                        self.loadCondition();
                        ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh
                            init: function (element, valueAccessor) {
                                var ctrl = $(element);
                                var sID = ctrl[0].id;
                                //initialize icheck to the element
                                $(element).iCheck({
                                    radioClass: 'iradio_flat-green'
                                });
                                $(element).on('ifChecked', function (event) {

                                    var observable = valueAccessor();
                                    observable.checked(event.target.defaultValue); //assigning selected value
                                });
                            },
                            update: function (element, valueAccessor) {
                                var observable = valueAccessor();
                            }
                        };
                    }
                    function BindData(value) {
                        if (viewModel.IdEncrypt == undefined) {
                            viewModel = ko.mapping.fromJS(value);
                            ViewModel();
                            if (objModel.lstData != undefined && objModel.lstData != null) {
                                $('#gvwData').DataTable().clear().draw();
                                $('#gvwData').dataTable().fnAddData(objModel.lstData);
                                $('#gvwData').dataTable().fnDraw();
                                setTimeout(function () {
                                    $('#gvwData').DataTable().columns.adjust().draw();
                                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                                }, 500);
                            }
                            else {
                                $('#gvwData').DataTable().clear().draw();
                                $('#gvwData').dataTable().fnDraw();
                            }
                        }
                        else {
                            ko.mapping.fromJS(value, {}, viewModel);
                        }
                    }
                    //function for validate form
                    function ValidateForm() {
                        var objValidatePopUp = {};
                        objValidatePopUp[GetElementName("txtSearch", objControl.txtbox)] = addValidate_notEmpty("This value is not valid");
                        objValidatePopUp[GetElementName("ddlGroupPermission", objControl.dropdown)] = addValidate_notEmpty("This value is not valid");
                        BindValidateBootstrap("divContent", objValidatePopUp);
                    }
                    function Cancel() {
                        window.location.href = sUrlBack;
                    }
                    function SetTable() {
                        var objHeadClRequest = [
                            { "title": "", "width": "0%", "className": "dt-left-ctm", "data": "n_seq", "visible": false },
                            { "title": "Menu Name", "width": "45%", "className": "dt-left-ctm", "data": "menu_name", "orderable": false },
                            { "title": "View", "width": "10%", "className": "dt-center-ctm", "data": "view_action", "orderable": false },
                            { "title": "Detail", "width": "11%", "className": "dt-center-ctm", "data": "detail_action", "orderable": false },
                            { "title": "Add", "width": "10%", "className": "dt-center-ctm", "data": "add_action", "orderable": false },
                            { "title": "Add/Edit", "width": "12%", "className": "dt-center-ctm", "data": "edit_action", "orderable": false },
                            { "title": "Approve", "width": "12%", "className": "dt-center-ctm", "data": "approve_action", "orderable": false },
                            { "title": "", "width": "0%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "visible": false, "data": "menu_id" },
                            { "title": "", "width": "0%", "className": "dt-center-ctm", "data": "menu_level", "visible": false },
                        ];

                        var objTableRe = {
                            sTableID: "gvwData",
                            nDis: [],
                            sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                            objHeadCl: objHeadClRequest,//Table Headder
                            objDataSet: [], //dataset
                            nHeadFix: 0,// fix clr
                            EmptyTable: EmptyTable,
                            order: [[0, "asc"]],
                            columnDefs: [{
                                "targets": 1,
                                "render": function (data, type, row) {
                                    return EditNameMenu(row.menu_level) + data;
                                }
                            },
                            {
                                "targets": 2,
                                "render": function (data, type, row) {
                                    if (data != undefined && data == "Y") {
                                        return CreateSingleCheckBok("chkView" + row.menu_id, "");
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            {
                                "targets": 4,
                                "render": function (data, type, row) {
                                    if (data != undefined && data == "Y") {
                                        return CreateSingleCheckBok("chkAdd" + row.menu_id, "");
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            {
                                "targets": 5,
                                "render": function (data, type, row) {
                                    if (data != undefined && data == "Y") {
                                        return CreateSingleCheckBok("chkEdit" + row.menu_id, "");
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            {
                                "targets": 6,
                                "render": function (data, type, row) {
                                    if (data != undefined && data == "Y") {
                                        return CreateSingleCheckBok("chkApprove" + row.menu_id, "");
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            {
                                "targets": 3,
                                "render": function (data, type, row) {
                                    if (data != undefined && data == "Y") {
                                        return CreateSingleCheckBok("chkDetail" + row.menu_id, "");
                                    }
                                    else {
                                        return "";
                                    }
                                }
                            },
                            ],
                            objBeforeClRender: false,
                            lengthMN: [[-1], ["All"]],
                        };

                        var table = CreatTableJS(objTableRe);
                        //new $.fn.dataTable.FixedHeader($('#gvwData'));
                        $('#' + objTableRe.sTableID + '').dataTable().on('draw.dt', function (settings) {
                            SetICheck();
                        });
                    }
                    function EditNameMenu(nNum) {
                        var Return = "";
                        if (nNum != undefined && nNum > 1) {
                            for (i = 1; i <= nNum * 2; i++) {
                                Return += "&nbsp";
                            }

                        }
                        //&nbsp;
                        return Return;
                    }


                    @*function SetAutocom(txtTarget) {
                        $("input[id$=" + txtTarget + "]").on("keyup", function () {
                            var newList = ko.toJS(viewModel);
                            if (newList.IdEncrypt != undefined) {
                                newList.user_name = '';
                                newList.user_last_name = '';
                                newList.unit_name = '';
                                newList.user_id = '';
                                BindData(newList);
                            }
                        });
                        $("input[id$=" + txtTarget + "]").autocomplete({
                            //disabled: true,
                            source: function (request, response) {
                                $.ajax({
                                    dataType: AjaxCall.dataType,
                                    type: AjaxCall.type,
                                    contentType: AjaxCall.contentType,
                                    url: '@Url.Action("UserAutoComplete", "UserPermission")',
                            data: JSON.stringify({ SearchItem: request.term }),
                            success: function (data) {
                                UnblockUI();
                                response($.map(data, function (item) {
                                    return {
                                        value: item.id,
                                        label: item.id + " : " + item.user_name ,
                                        user_id: item.user_id,
                                        user_no: item.id,
                                        user_name: item.user_name,
                                        user_last_name: item.user_last_name,
                                        unit_name: item.unit_name,
                                    }
                                }));
                            }
                        });
                },
                minLength: 1,
                select: function (event, ui) {
                var newList = ko.toJS(viewModel);
                    if (newList.IdEncrypt != undefined) {
                    newList.user_name = ui.item.user_name;
                    newList.user_last_name = ui.item.user_last_name;
                    newList.unit_name = ui.item.unit_name;
                    newList.user_id = ui.item.user_id;
                    newList.user_no = ui.item.user_no;
                    BindData(newList);
                }

                }

                });
        }*@
            function ClearAuto(vName, vGroup, vPosition, vID) {
                GetInputByID("txtName").val(vName);
                GetInputByID("txtgroup").val(vGroup);
                GetInputByID("txtMGID").val(vID);
            }
         function SetAutocom(txtTarget) {
                        $("input[id$=" + txtTarget + "]").on("keyup", function () {
                            ClearAuto("", "", "", "");
                        });
                        $("input[id$=" + txtTarget + "]").autocomplete({
                            //disabled: true,
                            source: function (request, response) {
                                $.ajax({
                                    global: false,  // <-- this is the key!
                                    dataType: AjaxCall.dataType,
                                    type: AjaxCall.type,
                                    contentType: AjaxCall.contentType,
                             url: '@Url.Action("UserAutoComplete", "UserPermission")',
                        data: JSON.stringify({ SearchItem: request.term }),
                        success: function (data) {
                            UnblockUI();
                            response($.map(data, function (item) {
                                return {
                                    value: item.id,
                                    label: item.id + " : " + item.user_name ,
                                    user_id: item.user_id,
                                    user_no: item.id,
                                    user_name: item.user_name,
                                    unit_name: item.unit_name,
                                    user_position: item.user_position,
                                }
                            }));
                        }
                    });
                },
                        minLength: 1,
                        select: function (event, ui) {
                            ClearAuto(ui.item.user_name, ui.item.unit_name, ui.item.user_position, ui.item.user_no);
                        }
                        });
        }
    </script>
    <script type="text/javascript">
                    function LoadGroupPermis(sVal) {
                        UnCheckedAll();
                        var Param = sVal;
                        $.ajax({
                            dataType: AjaxCall.dataType,
                            type: AjaxCall.type,
                            contentType: AjaxCall.contentType,

                            url: '@Url.Action("LoadGroupPermis", "UserPermission")',

                    data: JSON.stringify({ SearchItem: Param }),
                    success: function (respone) {
                        if (respone.Status == SysProcess.SessionExpired) {

                @*PopupLogin('@Url.Action("Index", "Home")');*@

                } else if (respone.Status == SysProcess.Success) {
                    var lstData = respone.lstData;
                    if (lstData != undefined && lstData.length > 0) {
                        $.each(lstData, function (key, value) {
                            if (value.Action_Type == "1") {
                                $('#chkView' + value.menu_id).iCheck('check');
                            }
                            else if (value.Action_Type == "2") {
                                $('#chkAdd' + value.menu_id).iCheck('check');
                            }
                            else if (value.Action_Type == "3") {
                                $('#chkEdit' + value.menu_id).iCheck('check');
                            }
                            else if (value.Action_Type == "4") {
                                $('#chkApprove' + value.menu_id).iCheck('check');
                            }
                            else if (value.Action_Type == "5") {
                                $('#chkDetail' + value.menu_id).iCheck('check');
                            }
                        });
                    }
                }
                else {
                    DialogWarning(DialogHeader.Warning, respone.Msg);
                }
                },
                error: AjaxCall.error,
                complete: function (jqXHR, status) {//finaly
                UnblockUI();
                }
                });
                }
                function UnCheckedAll() {
                $('input[id*=chk]').iCheck('uncheck');
                }
    </script>
    <script type="text/javascript">
        function SetTableUser() {
            var objHeadClRequest = [
                { "title": chkAll(), "width": "5%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "id" },
                { "title": "Username", "width": "10%", "className": "dt-left-ctm", "data": "user_name" },
                { "title": "Group", "width": "10%", "className": "dt-center-ctm", "data": "unit_name" },
                { "title": "Rank", "width": "10%", "className": "dt-center-ctm", "data": "user_rank"},
                { "title": "Rank", "width": "10%", "className": "dt-center-ctm", "data": "user_no", "visible": false },
            ];

            var objTableRe = {
                sTableID: "gvwDatamany",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[1, "asc"]],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                scrollY: '50vh',
                columnDefs: [{
                    "targets": 0,
                    "render": function (data) {
                        return CreateRadioMultiUser(data);
                    }
                }],
            };
            var table = CreatTableJS(objTableRe);
            $('#' + objTableRe.sTableID + '').dataTable().on('draw.dt', function (settings) {
                $("div[id$=" + objTableRe.sTableID + "_wrapper] div.icheckbox_flat-green input[id$=chkRow]").iCheck('uncheck');
                UnCheckCheckBoxHeader("ckbAll");
                SetICheck();
                SetCheckBoxSelectRowInGrid("gvwDatamany", "ckbAll", "chUser", "");
                $('div[id=' + objTableRe.sTableID + '_wrapper] div.DTFC_ScrollWrapper ').height($('div[id=' + objTableRe.sTableID + '_wrapper] div.DTFC_ScrollWrapper div.dataTables_scroll').height());

            });
        }
            function SearchPopupCan() {
            var Param = {
                group_id: GetValDropdown("ddlGroup"),
                rank_id: GetValDropdown("ddlRank"),
                };
                if (Param.group_id != "" && Param.rank_id != "") {
                    BlockUI();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("LoadListofUser", "UserPermission")',
                        dataType: "json",
                        data: { SearchItem: Param },
                        success: function (response) {
                            if (response.result.Status == SysProcess.SessionExpired) {
                                PopupLogin('@Url.Action("Index", "Home")');
                            }
                            else {
                                var lstData = response.result.lstData;
                                if (lstData == undefined || lstData.length <= 0) {
                                    $('#gvwDatamany').DataTable().clear().draw();
                                    $('#gvwDatamany').dataTable().fnDraw();
                                    $('#gvwDatamany').DataTable().columns.adjust().draw();
                                    objModelMany = [];
                                }
                                else {
                                    $('#gvwDatamany').DataTable().clear().draw();
                                    $('#gvwDatamany').dataTable().fnAddData(lstData);
                                    $('#gvwDatamany').dataTable().fnDraw();
                                    $('#gvwDatamany').DataTable().columns.adjust().draw();
                                    objModelMany = lstData;
                                }

                            }
                        },
                        complete: function (jqXHR, status) {//finaly
                            $('#gvwDatamany').DataTable().columns.adjust().draw();
                            $('#gvwDatamany').DataTable().columns.adjust().responsive.recalc();
                            UnCheckCheckBoxHeader("ckbAll");
                            SetICheck();
                            SetCheckBoxSelectRowInGrid("gvwDatamany", "ckbAll", "chUser", "");
                            UnblockUI();
                        }
                    });
                }
                else {
                    if (Param.group_id == "") {
                        DialogWarning(DialogHeader.DialogWarning,"Please Select UnitGroup")
                    }
                    else if (Param.rank_id == "") {
                        DialogWarning(DialogHeader.DialogWarning, "Please Select Rank")
                    }
                }

        }
        function SaveMany() {
            var IsPass = true;
            if (!CheckValidateBootstrap("divContent")) {
                IsPass = false;
                FocusValidateBootstrap("divContent");
            }
            if (IsPass) {

                //set value to View
                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.view_value = GetValueChkGroupSingelValue("chkView" + ed.menu_id, "");
                });
                //set value to Add
                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.add_value = GetValueChkGroupSingelValue("chkAdd" + ed.menu_id, "");
                });
                //set value to Edit
                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.edit_value = GetValueChkGroupSingelValue("chkEdit" + ed.menu_id, "");
                });
                //set value to Approve
                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.approve_value = GetValueChkGroupSingelValue("chkApprove" + ed.menu_id, "");
                });
                //set value to Detail
                Enumerable.From(objModel.lstData).ForEach(function (ed) {
                    return ed.detail_value = GetValueChkGroupSingelValue("chkDetail" + ed.menu_id, "");
                });
                ko.mapping.fromJS(Enumerable.From(objModel.lstData).Where(function (w) { return (w.view_value == "Y" || w.add_value == "Y" || w.edit_value == "Y" || w.approve_value == "Y" || w.detail_value == "Y") }).ToArray(), {}, viewModel.lstDataSave);
                var Acceptlst = [];
                Enumerable.From(objModelMany).ForEach(function (ed) { return ed.statusvalue = GetValueChkGroupSingelValue("chUser"+ed.id + ""); });

                Acceptlst = Enumerable.From(objModelMany).Where(function (w) { return w.statusvalue == "Y" }).ToArray();
                var $Accept = GetLabelByID("lblAccept");

                if (Acceptlst.length == 0) {
                    DialogWarning(DialogHeader.Warning, "Please select at least one item.");
                }
                else {

                    if (Acceptlst.length > 0) {
                        //var AcceptNumber = Enumerable.From(Acceptlst).Sum(function (s) { return ConvertToIntNotnull(s.AMOUNT_AMT) });
                        var strReturnAccept = 'Do you want to approve ' + Acceptlst.length + ' entries?';
                        $Accept.text(strReturnAccept);
                    }
                    else {
                        $Accept.text('Not specify.');
                    }
                    $("#PopupSaveMany").modal();
                }
            }

        }
        function GetDataMany() {
            var lstData = ko.toJS(viewModel);
            if (lstData != null) {
                lstData.lstData = null;
                lstData.aUnitCode = GetValDropdown('boxDivision');
                lstData.lstUser = Enumerable.From(objModelMany).Where(function (w) { return w.statusvalue == "Y" }).Select(function (x) {
                    return {
                        user_no: x['user_no'],
                    }
                }).ToArray();
            }
            return lstData;
        }
         function SaveDataMany(){
            var IsPass = true;
             $("#PopupSaveMany").modal("hide");
            if (IsPass) {
                BlockUI();
                var Param = GetDataMany();
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url: '@Url.Action("CreateMultiUserPermission", "UserPermission")',
                    data: JSON.stringify({ ItemData: Param }),
                    success: function (respone) {
                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {
                            var prodId = getParameterByName('bUrl');
                            if (prodId != "") {
                                window.location.href = sUrlBack;
                            }
                            else {
                                window.location.href = sUrlBack + '?qryStr=%7B%0D%0A%20%20"active_status"%3A%20"Y"%0D%0A%7D';
                            }
                            });
                        }
                        else if (respone.result.Status == SysProcess.Duplicate) {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                 });
            }
        }
        function CreateRadioMultiUser(sID) {
            var sHtml = '<input type="checkbox" id="' + sID + 'chUser" name="chUser' + sID + '" class="flat-green" value="Y"  />';
            return sHtml;
        }
    </script>
}