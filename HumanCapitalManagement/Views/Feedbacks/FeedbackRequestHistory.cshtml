
@{
    ViewBag.Title = "HCM | 360 Feedback";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}




<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        My Requests
    </h1>
    <div class="row" hidden>
        <div class="box box-solid">
            <div class="box-body no-border no-pad-top no-pad-bot">
                <div class="row" id="search">

                </div>

            </div>
        </div>
    </div>

</section>

<!-- Main content -->
<div class="collapse in">
    <section class="content no-pad-top ">
        <form class="form-horizontal">
            <div class="row">
                <div class="col-md-12">
                    <!-- general form elements -->
                    <div class="box box-primary">
                        <div class="box-header with-border">

                            <div class="box-tools pull-right">
                                <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                    <i class="fa fa-refresh"></i>
                                </button>
                            </div>
                        </div>
                        <!-- /.box-header -->
                        <!-- form start -->
                        <div class="box-body">

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="nav-tabs-custom">
                                        <ul class="nav nav-tabs">
                                            <li class="active"><a href="#tab_1" data-toggle="tab">Feedback request from others</a></li>
                                            <li><a href="#tab_2" data-toggle="tab">Feedback request sent to others</a></li>


                                        </ul>
                                        <div class="tab-content">
                                            <div class="tab-pane active" id="tab_1">
                                                <div class="table-responsive">
                                                    <table class="table table-striped table-bordered table-hover display" id="gvwDataRe" width="100%">
                                                        <thead>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>

                                            <div class="tab-pane" id="tab_2">
                                                <div class="table-responsive">
                                                    <table class="table table-striped table-bordered table-hover display" id="gvwData" width="100%">
                                                        <thead>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>


                            </div>
                            <!-- /.box-body -->
                        </div>
                    </div>

                </div>

        </form>
    </section>
</div>

@section scripts{

    <script src="~/Scripts/plugins/bootstrapValidate/dist/js/bootstrapValidator.js"></script>
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/inputmask.numeric.extensions.min.js"></script>
    <script src="~/Scripts/plugins/jquery-inputmask/min/inputmask/jquery.inputmask.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>

    <script src="~/Scripts/plugins/moment/moment.js"></script>


    <script type="text/javascript">
var objModel = @Html.Raw(Json.Encode(Model));

              $(window).bind("load", function () {
            $('#gvwData').DataTable().columns.adjust().draw();
        });



        $(function () {

            SetTable();
            BindData(objModel);
            ko.applyBindings(viewModel);
            $('#gvwData').DataTable().columns.adjust().draw();
            if (objModel != null) {

                var getdata = objModel.lstData;
                var getdatare = objModel.lstDataRe;
                if (getdata != undefined && getdata != null && getdata.length > 0) {
                    $('#gvwData').DataTable().clear().draw();
                    $('#gvwData').dataTable().fnAddData(getdata);
                    $('#gvwData').dataTable().fnDraw();

                    $('#gvwData').DataTable().columns.adjust().draw();
                }
                else {
                    $('#gvwData').DataTable().clear().draw();
                    $('#gvwData').dataTable().fnDraw();
                }

                if (getdatare != undefined && getdatare != null && getdatare.length > 0) {
                    $('#gvwDataRe').DataTable().clear().draw();
                    $('#gvwDataRe').dataTable().fnAddData(getdatare);
                    $('#gvwDataRe').dataTable().fnDraw();

                    $('#gvwDataRe').DataTable().columns.adjust().draw();
                }
                else {
                    $('#gvwDataRe').DataTable().clear().draw();
                    $('#gvwDataRe').dataTable().fnDraw();
                }
            }


            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                if (e.target.hash == '#tab_1') {
                    $('#gvwDataRe').DataTable().columns.adjust().draw();
                }
                else if (e.target.hash == '#tab_2') {
                    $('#gvwData').DataTable().columns.adjust().draw();
                }
            });
        });


        function SetTable() {

            var objHead = [
                { "title": "", "width": "2%", "className": "dt-center-ctm" },
                { "title": " Name", "width": "15%", "className": "dt-center-ctm", "data": "Given_User" },
                { "title": " Date", "width": "10%", "className": "dt-center-ctm", "data": "Create_Date" },
                { "title": " Status", "width": "10%", "className": "dt-center-ctm", "data": "Status" }
            ];

            var objTable = {
                sTableID: "gvwData",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHead,//Table Headder
                objDataSet: [], //dataset

                EmptyTable: EmptyTable,
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                //rowGroup: {
                //    dataSrc: 'Test_name_en'
                //},
                columnDefs: [
                    {

                        "render": function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        },
                        "targets": 0
                    },


                    {
                        "render": function (data, type, row) {
                            return data == "Y" ? "<span class='fa fa-circle text-success'></span>&nbsp; Completed" : "<span class='fa fa-circle text-warning'></span>&nbsp; Requested";
                        },
                        "targets": 3
                    }
                ]
            };

            var objHeadClRequest = [
                { "title": "", "width": "2%", "className": "dt-center-ctm" },
                { "title": " Give", "width": "5%", "className": "dt-center-ctm", "data": "Edit" },
                { "title": " Name", "width": "15%", "className": "dt-center-ctm", "data": "Request_User" },
                { "title": " Date", "width": "10%", "className": "dt-center-ctm", "data": "Create_Date" },
                { "title": " Status", "width": "10%", "className": "dt-center-ctm", "data": "Type" }
            ];

            var objTableRe = {
                sTableID: "gvwDataRe",
                nDis: [],
                sProperty: "<'top col-md-6'>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset

                EmptyTable: EmptyTable,
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                //rowGroup: {
                //    dataSrc: 'Test_name_en'
                //},
                columnDefs: [
                    {

                        "render": function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        },
                        "targets": 0
                    },


                    {
                        "render": function (data, type, row) {
                            return data == "R" ? "Request" : "Given";
                        },
                        "targets": 4
                    }
                ]
            };

            CreatTableJS(objTable);
            CreatTableJS(objTableRe);
        }





    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value

                    });

                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }
        function BindData(value) {
            if (viewModel == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();

            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);

            }


        }
        function ClearAuto(vName, vGroup, vPosition, vID) {
             GetInputByID("txtName").val(vName);
             GetInputByID("txtgroup").val(vGroup);
             GetInputByID("txtposition").val(vPosition);
            GetInputByID("txtMGID").val(vID);

            $('.nameget').text(vName);
            if (vID != "")
            {
                getimage(vID);
            }
         }

        function SetAutocom(txtTarget) {
            $("input[id$=" + txtTarget + "]").on("keyup", function () {
                ClearAuto("", "", "", "");
            });
            $("input[id$=" + txtTarget + "]").autocomplete({
                //disabled: true,
                source: function (request, response) {
                    $.ajax({
                        dataType: AjaxCall.dataType,
                        global: false,
                        type: AjaxCall.type,
                        contentType: AjaxCall.contentType,
                        url: '@Url.Action("UserAutoCompleteAll", "HCMMasterData")',
                        data: JSON.stringify({ SearchItem: request.term }),
                        success: function (data) {
                            UnblockUI();
                            response($.map(data, function (item) {
                                return {
                                    value: item.id,
                                    label: item.id + " : " + item.user_name,
                                    user_id: item.user_id,
                                    user_no: item.id,
                                    user_name: item.user_name,
                                    unit_name: item.unit_name,
                                    user_rank: item.user_rank,
                                }
                            }));
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    ClearAuto(ui.item.user_name, ui.item.unit_name, ui.item.user_rank, ui.item.user_no);

                }

            });
        }
    </script>
}
<!-- /.content -->
