
@{
    ViewBag.Title = "HCM | Current Employee by Rank";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Current Employee by Rank
    </h1>
    @*<form class="form-horizontal">
            <div class="row">
                <!--<div class="col-lg-12">-->
                <div class="box box-solid">
                    <div class="box-body no-border no-pad-top no-pad-bot">
                        <div class="row row-search" id="search">
                            <div class="form-group form-group-sm col-xs-9">
                                <div class="input-group">
                                    <span class="input-group-addon nomallabel">FY Year</span>
                                    <select data-filter="make" class="filter-make filter form-control">
                                        <option value="">-- Select --</option>
                                        <option value="">Show All</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group form-group-sm col-xs-3 text-center">
                                <button type="button" class="btn btn-info" onclick="LoadData();">Search</button>
                                <button type="button" class="btn btn-danger" onclick="Cancel();">Clear</button>
                            </div>
                        </div>
                        <div class="row row-search" id="filter">
                            <div class="form-group form-group-sm col-sm-6 col-xs-6">
                                <div class="input-group">
                                    <span class="input-group-addon nomallabel">condition1</span>
                                    <select data-filter="make" class="filter-make filter form-control">
                                        <option value="">-- select --</option>
                                        <option value="">show all</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group form-group-sm col-sm-6 col-xs-6">
                                <div class="input-group">
                                    <span class="input-group-addon nomallabel">condition2</span>
                                    <select data-filter="model" class="filter-model filter form-control">
                                        <option value="">-- select --</option>
                                        <option value="">show all</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--</div>-->
            </div>
        </form>*@

</section>

<!-- Main content -->
<section class="content">
    <form class="form-horizontal">
        <div class="row">
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <div class="box-tools pull-right">
                            <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                <i class="fa fa-refresh"></i>
                            </button>
                        </div>
                    </div>
                    <!-- form start -->
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-12">
                                @*<button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('pdf');"><img src="~/Image/filetype_pdf.png" alt="" height="30"></button>
                                    <button type="button" id="btnExport" class="btn btn-default" onclick="LoadExcel('xlxs');"><img src="~/Image/filetype_xls.png" alt="" height="30"></button>*@
                            </div>
                        </div>
                        <div class="row" id="divTable">
                            <div class="col-md-8 col-md-offset-2">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover " cellspacing="0" id="gvwData" width="100%">
                                        <thead>

                                        </thead>
                                        <tfoot>
                                            <tr>
                                                <th colspan="6"></th>
                                            </tr>
                                        </tfoot>
                                        <tbody></tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            </div>
            <input type="hidden" id="txtSess" name="txtSess" class="form-control" data-bind='value: session' />
        </div>

    </form>
</section>
@section style{
    <style>
        .dt-HeadGr-ctm {
            background-color: #2952a3;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-total-ctm {
            background-color: #36c61a;
            color: rgb(255, 255, 255);
            vertical-align: middle;
        }

        .dt-totalAll-ctm {
            background-color: rgb(255, 222, 35);
            color: rgb(0, 0, 0);
            vertical-align: middle;
        }

        table.dataTable {
            border-collapse: collapse;
            width: 100%;
        }
    </style>
}
@section scripts{
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/DataTables2/datetimeSort.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/dataTables.rowGroup.min.js"></script>
    <script src="~/Scripts/plugins/DataTables2/FixedHeader-3.1.2/js/dataTables.fixedHeader.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script type="text/javascript">
        var objModel = @Html.Raw(Json.Encode(Model));
        $(function () {
            SetTable();
            //setDatePickerFromTo($("input[id$=txtDateStart]"), $("input[id$=txtDateTo]"));
            BindData(objModel);
            // ko.applyBindings(viewModel);
        });

        function Search() {
            var lstSearch = ko.toJS(viewModel)
            return lstSearch;
        };
        function LoadData() {
            $('div[id$=divTable]').collapse("show");
            $('#gvwData').DataTable().columns.adjust().draw();
            var Param = Search();
            BlockUI();
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadReportClassification", "rSubmited")',
                dataType: "json",
                data: { SearchItem: Param },
                success: function (response) {
                    if (response.result.Status == SysProcess.SessionExpired) {1
                        PopupLogin('@Url.Action("Index", "Home")');
                    }
                    else {
                        var lstData = response.result.lstData;
                        if (lstData == undefined || lstData.length <= 0) {
                            $('div[id$=divTable]').collapse("show");
                            $('#gvwData').DataTable().clear().draw();
                            $('#gvwData').dataTable().fnDraw();
                            $('#gvwData').DataTable().columns.adjust().draw();
                        }
                        else {
                            $('div[id$=divTable]').collapse("show");
                            $('#gvwData').DataTable().clear().draw();
                            $('#gvwData').dataTable().fnAddData(lstData);
                            $('#gvwData').dataTable().fnDraw();
                            $('#gvwData').DataTable().columns.adjust().draw();
                        }
                    }
                },
                complete: function (jqXHR, status) {//finaly
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                    UnblockUI();
                }
            });
        }


        function Cancel() {
            window.location.reload();
        }

        function SetTable() {
            var objHeadClRequest = [
                { "title": "Group", "width": "20%", "className": "dt-left-ctm", "data": "sgroup" },
                { "title": "PARA", "width": "9%", "className": "dt-right-ctm", "data": "para" },
                { "title": "AA", "width": "8%", "className": "dt-right-ctm", "data": "aa" },
                { "title": "SR", "width": "8%", "className": "dt-right-ctm", "data": "sr" },
                { "title": "AM", "width": "9%", "className": "dt-right-ctm", "data": "am" },
                { "title": "MGR", "width": "9%", "className": "dt-right-ctm", "data": "mgr" },
                { "title": "AD", "width": "9%", "className": "dt-right-ctm", "data": "ad" },
                { "title": "DIR", "width": "9%", "className": "dt-right-ctm", "data": "dir" },
                { "title": "PTR", "width": "9%", "className": "dt-right-ctm", "data": "ptr" },
                { "title": "Total", "width": "10%", "className": "dt-right-ctm", "data": "total" },
                {  "title": "", "width": "0%", "className": "dt-right-ctm", "data": "division", "searchable": false, "visible": false },
            ];

            var objTableRe = {
                sTableID: "gvwData",
                nDis: [],
                sProperty: "<'top col-md-6'B>rt<'bottom col-md-6'><'bottom col-md-6 text-right'><'clear'>",
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                order: [[10, "asc"]],
                //columnDefs: [],
                objBeforeClRender: false,
                lengthMN: [[-1], ["All"]],
                rowGroup: {
                    'startRender': function (rows, group) {
                        return $('<tr/>')
                            .append('<td class="dt-HeadGr-ctm dt-center-ctm" colspan="10">' + group + '</td>');
                    },
                    'endRender': function (rows, group) {
                        var npara = 0;
                        var naa = 0;
                        var nsr = 0;
                        var nam = 0;
                        var nmgr = 0;
                        var nad = 0;
                        var ndir = 0;
                        var nptr = 0;
                        var ntotal = 0;

                        var amount = rows
                            .data();

                        $.each(amount, function (key, value) {
                            npara = (npara + StringtoInt(value.para + ""));
                            naa = (naa + StringtoInt(value.aa + ""));
                            nsr = (nsr + StringtoInt(value.sr + ""));
                            nam = (nam + StringtoInt(value.am + ""));
                            nmgr = (nmgr + StringtoInt(value.mgr + ""));
                            nad = (nad + StringtoInt(value.ad + ""));
                            ndir = (ndir + StringtoInt(value.dir + ""));
                            nptr = (nptr + StringtoInt(value.ptr + ""));
                            ntotal = (ntotal + StringtoInt(value.total + ""));

                        });
                        return $('<tr/>')
                            .append('<td class="dt-total-ctm dt-left-ctm" >Total : ' + group + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(npara) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(naa) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nsr) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nam) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nmgr) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nad) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(ndir) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(nptr) + '</td>')
                            .append('<td class="dt-total-ctm dt-right-ctm" >' + StringtoCount(ntotal) + '</td>');
                    },
                    'dataSrc': 'division'
                },
                fixedHeader: {
                    header: true,
                    footer: false
                },
                footerCallback: function (tfoot, data, start, end, display) {
                    var api = this.api(), data;
                    var npara = 0;
                    var naa = 0;
                    var nsr = 0;
                    var nam = 0;
                    var nmgr = 0;
                    var nad = 0;
                    var ndir = 0;
                    var nptr = 0;
                    var ntotal = 0;
                    $.each(objModel.lstData, function (key, value) {
                        npara = (npara + StringtoInt(value.para + ""));
                        naa = (naa + StringtoInt(value.aa + ""));
                        nsr = (nsr + StringtoInt(value.sr + ""));
                        nam = (nam + StringtoInt(value.am + ""));
                        nmgr = (nmgr + StringtoInt(value.mgr + ""));
                        nad = (nad + StringtoInt(value.ad + ""));
                        ndir = (ndir + StringtoInt(value.dir + ""));
                        nptr = (nptr + StringtoInt(value.ptr + ""));
                        ntotal = (ntotal + StringtoInt(value.total + ""));
                    });
                    // Update footer
                    var sFood = $(tfoot).find('th').eq(0).parent();
                    sFood.html('');
                    sFood.html('<th class=" dt-totalAll-ctm " style="text-align: left;" >Total Thailand</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(npara) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(naa) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nsr) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nam) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nmgr) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nad) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(ndir) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(nptr) + '</th>'
                        + '<th class="dt-totalAll-ctm " style="text-align: right;">' + StringtoCount(ntotal) + '</th>');

                }
            };

            CreatTableJSRank(objTableRe);
        }
        function CreatTableJSRank(objOption) {
            var dTable2;

            if (objOption.objHeadCl != undefined
                && objOption.sTableID != undefined && objOption.sTableID != ""
                && objOption.objHeadCl != null && objOption.objHeadCl != "") {
                //add render text
                var bRender = true;
                if (objOption.objBeforeClRender != undefined && !objOption.objBeforeClRender == true) {
                    bRender = objOption.objBeforeClRender;
                }
                var aColumnotText = ["sview", "edit", "view", "chk", "submit"]
                var aColumnDef = [];
                if (objOption.columnDefs == undefined) {
                    objOption.columnDefs = [];

                }
                else {
                    aColumnDef = objOption.columnDefs.map(function (a) { return a.targets; });
                    if (contains(aColumnDef, "_all")) {
                        bRender = false;
                    }
                }

                if (objOption.objHeadClRender != undefined) {
                    aColumnotText = objOption.objHeadClRender;
                }
                if (bRender) {

                    $.each(objOption.objHeadCl, function (key, data) {
                        if (!contains(aColumnotText, data.data.toLowerCase()) && !containsNumber(aColumnDef, key)) {
                            if (!data.hasOwnProperty("render")) {
                                objOption.objHeadCl[key]["render"] = $.fn.dataTable.render.text();
                            }
                        }
                    });
                }

                //Option FixHeader
                var bFixHeader = true;
                var nFixHeadder = 0;
                var bProcess = false;
                var bScorllY = false;
                var bScorllX = false;
                var srowGroup = {};
                var sfixedHeader = {
                    header: false,
                    footer: false,
                };
                var sfooter = null;
                var sresponsive = false;

                if (objOption.processing != undefined) { bProcess = true; }

                if (objOption.createdRow == undefined) { objOption.createdRow = function () { }; }
                if (objOption.nHeadFix != undefined && objOption.nHeadFix > 0) {
                    bFixHeader = true;
                    bScorllX = true;
                    nFixHeadder = objOption.nHeadFix;
                }
                if (objOption.nDis != undefined && objOption.nDis == "") { nDis = []; }
                var lengthMenu = [[50, 100, 150, -1], [50, 100, 150, "All"]];
                if (objOption.lengthMN != undefined) {
                    lengthMenu = objOption.lengthMN;
                }
                if (objOption.bFixHeader != undefined) {
                    bFixHeader = objOption.bFixHeader;
                    bScorllX = true;
                }
                if (objOption.rowGroup != undefined) {
                    srowGroup = objOption.rowGroup;
                }
                if (objOption.fixedHeader != undefined) {
                    sfixedHeader = objOption.fixedHeader;
                }

                if (objOption.footerCallback != undefined) {
                    sfooter = objOption.footerCallback;
                }

                if (objOption.responsive != undefined) {
                    sresponsive = objOption.responsive;
                }


                if (objOption.scrollY != undefined) {
                    if (objOption.scrollY) {
                        bScorllY = objOption.scrollY;
                    }
                }


                var dTable = $('#' + objOption.sTableID).DataTable({
                    "data": objOption.objDataSet != undefined ? objOption.objDataSet : [],
                    "bFilter": false,
                    "dom": objOption.sProperty != undefined ? objOption.sProperty : "",
                    "buttons": [
                        'excelHtml5',
                    ],
                    "language": {
                        "emptyTable": objOption.EmptyTable,
                    },
                    "zeroRecords": "No matching records found",
                    "scrollX": bScorllX,
                    "scrollY": bScorllY,
                    "scrollCollapse": bFixHeader,
                    "fixedColumns": {
                        "leftColumns": nFixHeadder
                    },
                    "fixedHeader": sfixedHeader,
                    "columns": objOption.objHeadCl,
                    "columnDefs": objOption.columnDefs,
                    "createdRow": objOption.createdRow,
                    "order": objOption.order,
                    "lengthMenu": lengthMenu,
                    "bRetrieve": true,
                    "drawCallback": function () {

                        if (objOption.drawCallback != undefined) {

                            objOption.drawCallback();
                        }
                        //$("table >tbody input[type=checkbox] ").iCheck({
                        //    checkboxClass: 'icheckbox_flat-green',
                        //    radioClass: 'iradio_flat-green'
                        //});
                    },
                    //"fnDrawCallback": function () {
                    //    //EDIT OFFICE FORM
                    //    // SetICheck();
                    //    UnCheckCheckBoxHeader("ckbAll");

                    //    //$("div[id$=" + objOption.sTableID + "_wrapper]   input[type=checkbox]").iCheck({
                    //    //    checkboxClass: 'icheckbox_flat-green',
                    //    //    radioClass: 'iradio_flat-green'
                    //    //});
                    //    // SetCheckBoxSelectRowInGrid("gvwData", "ckbAll", "chkRow", "fix");
                    "processing": bProcess,
                    //"initComplete": function (settings, json) {
                    //    setTimeout(function () {
                    //        $('#' + objOption.sTableID).DataTable().columns.adjust().draw()
                    //    }, 500);
                    //}
                    //},
                    "rowGroup": srowGroup,
                    "responsive": sresponsive,
                    "bAutoWidth": true,
                    "footerCallback": sfooter,

                });

                //dTable.dataTable
                if (objOption.nRunningNumber != undefined && objOption.nRunningNumber[0] == "true") {
                    dTable.on('order.dt search.dt', function () {
                        dTable.column(objOption.nRunningNumber[1], { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                            cell.innerHTML = i + 1;
                        });
                    }).draw();
                }
                dTable2 = dTable;
                //$('#' + objOption.sTableID + "_info").addClass("col-md-6");
                //$('#' + objOption.sTableID + "_paginate").addClass("col-md-6 text-right");
            }
            return dTable2;
        };
    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">
        var viewModel = {

        };
        function ViewModel() {
            var self = this;
            self.conditionChecked = ko.observable(false);
            self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
            ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                    var ctrl = $(element);
                    var sID = ctrl[0].id;
                    //initialize icheck to the element
                    $(element).iCheck({
                        radioClass: 'iradio_flat-green'
                    });
                    $(element).on('ifChecked', function (event) {

                        var observable = valueAccessor();
                        observable.checked(event.target.defaultValue); //assigning selected value

                    });

                },
                update: function (element, valueAccessor) {
                    var observable = valueAccessor();
                }
            };
        }
        function BindData(value) {
            if (viewModel.code == undefined) {
                viewModel = ko.mapping.fromJS(value);
                ViewModel();
            }
            else {
                ko.mapping.fromJS(value, {}, viewModel);
            }

            if (objModel.lstData != undefined && objModel.lstData != null) {
                $('#gvwData').DataTable().clear().draw();
                $('#gvwData').dataTable().fnAddData(objModel.lstData);
                $('#gvwData').dataTable().fnDraw();

                setTimeout(function () {
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                }, 500);
            }
            else {
                $('div[id$=divTable]').collapse("hide");
            }

        }
        $(function () {
            $(window).bind('beforeunload', function () {

                var aSession = [$('input[id$=txtSess]').val()];

                //var sValHdf = $('input[id$=hfdSess]').val();

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ClearSession", "Base")',
                    cache: false,
                    dataType: "html",
                    data: {
                        sVal: encodeURIComponent(aSession)
                    },
                    complete: function (jqXHR, status) {//finaly
                    }
                });
            });
        });


        function LoadExcel(Val)
        {
            if(viewModel.session != undefined)
            {
                var sVal =  ko.toJS(viewModel.session);
                BlockUI();
                window.open('@Url.Action("ExpHCPlanAndSummary", "rHeadcount")?qryStr=' + sVal +'&sMode='+Val, '_blank');
                setTimeout(function () { UnblockUI(); }, 500);
            }
            else {
                DialogWarning(DialogHeader.Warning,"Error please try again.");
            }
        }
    </script>
}
<!-- /.content -->