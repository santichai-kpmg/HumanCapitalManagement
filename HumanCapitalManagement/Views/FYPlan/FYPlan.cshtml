
@{
    ViewBag.Title = "HCM | FY Plan";
    Layout = "~/Views/Shared/_LPMaster.cshtml";
}


<section class="content-header">
    <h1>
        FY Plan
    </h1>
    <div class="row">
        <div class="box box-solid">
            <div class="box-body no-border no-pad-top no-pad-bot">
                <div class="row" id="search">
                    <div class="form-group form-group-sm col-sm-4  col-xs-4">
                        <div class="input-group">
                            <span class="input-group-addon nomallabel">FY Year</span>

                            @{ Html.RenderAction("CreateddlFYPlanActiveYear", "FYPlan", new
                                {
                                    id = "ddlFYYear",
                                    databind = "fy_year",
                                    value = ""

                                }); }



                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group form-group-sm col-xs-12  text-left">
                        <button type="button" class="btn btn-info" onclick="LoadData();">Search</button>
                        <button type="button" class="btn btn-primary" onclick="AddData();">Create</button>
                        @*<button type="button" class="btn btn-info" onclick="alert('btn Loaded!!');">Search</button>*@
                        @*<button type="button" class="btn btn-info" onclick="alert('btn Loaded!!');LoadData();">Search</button>*@
                    </div>
                </div>

            </div>
        </div>
    </div>


    <div id="PopupUpdate" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog  widthPOP">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #605ca8;">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <span class="modal-title"><b style="color: white;">Create FY Plan</b></span>
                </div>
                <div id="divUpdatePopUp">
                    <div class="modal-body">
                        <form class="form-horizontal" autocomplete="off">
                            <div id="pvUpCandidate">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group form-group-sm">
                                            <label class="col-md-4 control-label text-right require">FY Year</label>
                                            <div class="col-md-8">
                                                <div class="input-group form-inline" style="float: left;">
                                                    <input ID="txtDateFYPlan" name="txtDateFYPlan" class="form-control " type="text"
                                                           ToolTip="Year" placeholder="-- / -- / ----" />
                                                    <span class="input-group-addon">
                                                        <i class="glyphicon glyphicon-calendar"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id="btnUpdate" type="button" onclick="CreateNew()" class="btn btn-primary">Create</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>


</section>



<div class="collapse in" id="divTable">
    <section class="content no-pad-top ">
        <form class="form-horizontal">
            <div class="row">
                <div class="col-md-12">
         
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            Search Results
                            <div class="box-tools pull-right">
                                <button id="btnRefeshTable" type="button" class="btn btn-box-tool" onclick="RefreshTable(this)">
                                    <i class="fa fa-refresh"></i>
                                </button>
                            </div>
                        </div>
                
                        <div class="box-body">
                            <div class="row ">
                                <div class="col-md-12">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered table-hover display" id="gvwData" width="100%">
                                            <thead>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>
      
                    </div>
                </div>

            </div>

        </form>

    </section>
</div>

@section scripts{
    <script src="~/Scripts/plugins/knockout-3.4.2.js"></script>
    <script src="~/Scripts/plugins/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/plugins/DataTables2/datetimeSort.js"></script>
    <script src="~/Scripts/plugins/jsLinq/linq.min.js"></script>
    <script src="~/Scripts/plugins/jsLinq/jquery.linq.min.js"></script>

    <script type="text/javascript">
       var objModel = @Html.Raw(Json.Encode(Model));
        $(function () {

            
            SetTable();
            BindData(objModel);
            ko.applyBindings(viewModel);
            SetDatePickerYear(GetInputByID("txtDateFYPlan"));

        });

        function AddData() {
            $("#PopupUpdate").modal({ backdrop: 'static', keyboard: false });
        }

        function CreateNew(){
            var IsPass = true;
            if (IsPass) {
                $("#PopupUpdate").modal('hide');
                BlockUI();
                var Param = { fy_year: GetValTextBox("txtDateFYPlan") };
                $.ajax({
                    dataType: AjaxCall.dataType,
                    type: AjaxCall.type,
                    contentType: AjaxCall.contentType,
                    url:'@Url.Action("CreateFYPlan", "FYPlan")',
                    data: JSON.stringify({ ItemData : Param }),
                    success: function (respone) {

                        if (respone.result.Status == SysProcess.SessionExpired) {
                            PopupLogin('@Url.Action("Index", "Home")');
                        } else if (respone.result.Status == SysProcess.Success) {
                            DialogSuccessOk(DialogHeader.Info, DialogMsg.SaveComplete, 'func', function () {

                                //window.location.href = '@Url.Action("PTRMailBoxEdit", "PTRMailBox")?qryStr=' + respone.result.IdEncrypt;
                            });
                        }
                        else if (respone.result.Status == SysProcess.Duplicate){
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                        else {
                            DialogWarning(DialogHeader.Warning, respone.result.Msg);
                        }
                    },
                    error: AjaxCall.error,
                    complete: function (jqXHR, status) {//finaly
                        UnblockUI();
                    }
                });
            }
        }

        function Search() {
            var lstSearch = ko.toJS(viewModel)
            
            return lstSearch;
        };

        function LoadData() {



            $('div[id$=divTable]').collapse("show");
            $('#gvwData').DataTable().columns.adjust().draw();



            var Param = Search();


            

            BlockUI();
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadFYPlanList", "FYPlan")',
                dataType: "json",
                data: { SearchItem: Param },
                success: function (response) {
                    if (response.result.Status == SysProcess.SessionExpired) {
                        //1
                        PopupLogin('@Url.Action("Index", "Home")');
                    }
                    else {
                      
                        var lstData = response.result.lstData;
                        if (lstData == undefined || lstData.length <= 0) {
                            $('div[id$=divTable]').collapse("show");
                            $('#gvwData').DataTable().clear().draw();
                            $('#gvwData').dataTable().fnDraw();
                            $('#gvwData').DataTable().columns.adjust().draw();
                        }
                        else {
                            $('div[id$=divTable]').collapse("show");
                            $('#gvwData').DataTable().clear().draw();
                            $('#gvwData').dataTable().fnAddData(lstData);
                            $('#gvwData').dataTable().fnDraw();
                            $('#gvwData').DataTable().columns.adjust().draw();
                        }
                    }
                },
                complete: function (jqXHR, status) {//finally
                    $('#gvwData').DataTable().columns.adjust().draw();
                    $('#gvwData').DataTable().columns.adjust().responsive.recalc();
                    UnblockUI();
                }
            });
        }

        function Cancel() {
            window.location.reload();
        }

        function SetTable() {
            var objHeadClRequest = [

                { "title": "Edit", "width": "5%", "className": "dt-center-ctm", "searchable": false, "orderable": false, "data": "Edit" },
                { "title": "FY Year", "width": "10%", "className": "dt-center-ctm", "data": "fy_year" },
                { "title": "Status", "width": "18%", "className": "dt-center-ctm", "data": "active_status" },
                { "title": "Created Date", "width": "11%", "className": "dt-center-ctm", "data": "create_date" },
                { "title": "Update Date", "width": "11%", "className": "dt-center-ctm", "data": "update_date" },
                { "title": "Update By", "width": "11%", "className": "dt-center-ctm", "data": "update_user" },
            ];

            var objTableRe = {
                sTableID: "gvwData",
                nDis: [],
                sProperty: "<'top col-md-6'l>rt<'bottom col-md-6'fi><'bottom col-md-6 text-right'p><'clear'>",//length pangging
                objHeadCl: objHeadClRequest,//Table Headder
                objDataSet: [], //dataset
                nHeadFix: 0,// fix clr
                EmptyTable: EmptyTable,
                //order: [[3, "desc"]],
                columnDefs: [{
                    "targets": 3,
                    "type": "date-th",
                }, {
                    "targets": 4,
                    "type": "date-th",
                }],
                objBeforeClRender: false,
            };
            //fy_year,active_status,create_date,create_user,update_date,update_user
            var table = CreatTableJS(objTableRe);
            //new $.fn.dataTable.FixedHeader($('#gvwData'));
        }
            function Edit(sVal) {
                BlockUI();

                window.location.href  = '@Url.Action("FYPlanEdit", "FYPlan")?qryStr=' + sVal;


            }
    </script>
    @*Script for bind Data KnockOut*@
    <script type="text/javascript">

            var viewModel = {

            };
            function ViewModel() {
                var self = this;
            self.conditionChecked = ko.observable(false);
                self.loadCondition = function () {
                //ajax request to get condition value. Suppose ajax request returned value "used". so
                self.conditionChecked("used");
            }
            self.loadCondition();
                ko.bindingHandlers.iCheck = { // integrating icheck plugin using bh

                init: function (element, valueAccessor) {
                        var ctrl = $(element);
            var sID = ctrl[0].id;
            //initialize icheck to the element
                        $(element).iCheck({
                radioClass: 'iradio_flat-green'
        });
                        $(element).on('ifChecked', function (event) {

                            var observable = valueAccessor();
            observable.checked(event.target.defaultValue); //assigning selected value

        });

},
                    update: function (element, valueAccessor) {
                        var observable = valueAccessor();
        }
};
}
            function BindData(value) {
                if (viewModel.name == undefined) {
                viewModel = ko.mapping.fromJS(value);
            ViewModel();
        }
                else {
                ko.mapping.fromJS(value, {}, viewModel);
            }

                if (objModel.lstData != undefined && objModel.lstData != null) {
                $('#gvwData').DataTable().clear().draw();
            $('#gvwData').dataTable().fnAddData(objModel.lstData);
            $('#gvwData').dataTable().fnDraw();

                    setTimeout(function () {
                $('#gvwData').DataTable().columns.adjust().draw();
            $('#gvwData').DataTable().columns.adjust().responsive.recalc();
        }, 500);
}
                else {
                $('#gvwData').DataTable().clear().draw();
            $('#gvwData').dataTable().fnDraw();
            $('div[id$=divTable]').collapse("hide");
        }

}

    </script>



}

